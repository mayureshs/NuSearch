<?xml version="1.0" encoding="utf-8"?>
<NugetDump xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <NugetPackages>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.6</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-09T11:52:49.407</Created>
      <Dependencies>moonlit:1.0.0.7:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.6</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>0tp6dDgK7Ws+UWtElsaJJy1U/IGN/ubjukYoeRNZdxwp7n4zq0s8Qp4wV79vP3TBMoNMrfmHHwyrVkmre+n/Cw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10396</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.6</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.7</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-09T12:01:19.673</Created>
      <Dependencies>moonlit:1.0.0.7:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.7</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>imBOxyE3htO/GkeBUhEs+ebAObXcT8MVmWOFO8LqlHDCI3fCDrJbDDny6F5sT15I98qRll2bWTQQUxw+el7ZgQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10398</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>131</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.7</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.8</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-10T08:02:07.43</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.8</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>1JseHNef9KVyRMa17gsraPLyj5Ov9tUkwkKv2lKM4+rAoMw8KP8yJ6dKlpgCLwzGRqolDvK8WDJtDFq8UAY1WA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10401</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>134</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.8</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.9</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-11T09:32:10.723</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.9</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>vDnArD5nLJTsDy1Af18ABkpWO2JUd6S7nijXb/a8mdWtLploSOHwOFCWOOpORbBMSVVs5VyR+ich3mhYCzmQYQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10406</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.9</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.10</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-16T14:27:00.443</Created>
      <Dependencies>moonlit:1.0.0.20:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.10</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Jo0YfJDLfNrst+M4OBQqKbWPa0a71DXSLhmDdPlUQN9HTNJmLpuJcGgv6dBT56kpto2LpJteim36NtTie/DfzQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10402</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>167</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.10</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.11</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2013-02-26T02:24:56.24</Created>
      <Dependencies>moonlit:1.0.1.5:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.11</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>vkLrw9LnpaD62uiBdPYFCOb6X/7u1P1qQ+T8lKbh+KqBV7gF9+i6iqDKu5CVY3Q3lNjk0cB6PdwbxjFK6Z5n4w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10047</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.11/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.11</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Wcf</Id>
      <Version>1.0.0.12</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2013-03-14T04:52:14.633</Created>
      <Dependencies>moonlit:1.0.1.7:</Dependencies>
      <Description>the wcf extensions of moonlit library</Description>
      <DownloadCount>1796</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.12</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:43:30.147</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>7HL7Am4xBWcspNGUzIB97Uvm9jMZqcrrPJUrQM557U0NN3zvX5iQHVx95yPZAO/Gm8iGygXpbCBNQunoqU25wQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>4679</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Wcf/1.0.0.12/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - wcf.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net Wcf </Tags>
      <Title>Moonlit.Wcf</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local3/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Wcf/1.0.0.12</DownloadUrl>
      <ProjectUrl>http://local3/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.0</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-10T08:21:03.747</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>7WPpJ14XBnhtpyKbpbXqh9I7mLaxLQkNHC9TFYfNAAh9VV+86r47PmQR9NfDUjYC0Y5hnXNCsX6WOWGTIUOaBw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19999</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>61</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.1</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-10T08:53:29.957</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.1</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>sUT8vDLbrMZOjnKjwHLLwIzEoJDukNgb0DXbhZWsVg5yiXkpew2Tl/oct8WO9qbGfFqFxM5FTcOrL5g+9eb85Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25628</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.1</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.2</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-10T08:58:14.7</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.2</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>CPdzIPy27sMIx2oQGIgFv6gFCfut4rb05ZlgIkpTmOd7Voc/HPM/UwDMalnp+UahRF1RRKI49D2qBwaMWVjNLQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25629</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.2</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.3</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-11T09:32:22.79</Created>
      <Dependencies>moonlit:1.0.0.9:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.3</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>KjSfAJDD19cdJfFW3hJ+Z/ulNz7QltcqYD9c+Pdfhs7PStJ22RqBGcDfJ0JUlZ5MlohHdop2CeDUTAy8jLAWaA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25626</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>141</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.3</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.5</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-16T14:27:06.277</Created>
      <Dependencies>moonlit:1.0.0.20:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.5</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>swLz+dBCAeUS5jNEiRnyQwUHbCdcWqc4ld43r++4akFpwH0PyRqRmBQEnqENyFbvC8/huKjHzzIL737L62dxmQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21793</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.5</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.6</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-22T10:35:33.457</Created>
      <Dependencies>moonlit:1.0.0.21:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.6</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>52nEM8oDHAtZgY7lqHEqL4MhyUXCRPflLV27Kh+HZnE3nkFV1sS1pgV6U2NYd9bkA/rAKt7FzHbKpXwNRc2/Ag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21562</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.6</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.7</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2012-12-23T12:58:01.857</Created>
      <Dependencies>moonlit:1.0.0.21:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.7</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>4MaxqmLLM+/As7QqSWGoMAo5I3QUUD15eWgei8NFRGA48QJmGRH8GZwtvBA3TclKLSGvApEcgkxMgP9wfabNLA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21563</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>174</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.7</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonlit.Web.Mvc</Id>
      <Version>1.0.0.9</Version>
      <Authors>moon.wa</Authors>
      <Copyright>Copyright 2012</Copyright>
      <Created>2013-02-26T02:25:42.997</Created>
      <Dependencies>moonlit:1.0.1.5:</Dependencies>
      <Description>the mvc extensions of moonlit library</Description>
      <DownloadCount>1229</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.9</GalleryDetailsUrl>
      <IconUrl>http://local3/</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T15:07:03.093</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>oR7hjvfJ0LXNaOkq89m2PselPc/f1dovEQAQCmTYHm84Uyk8ud9Mg9DLfXMS1zoYA5PsGuzatp9ytC4om1duzw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21580</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonlit.Web.Mvc/1.0.0.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>moonlit library - mvc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> Net mvc </Tags>
      <Title>Moonlit.Web.Mvc</Title>
      <VersionDownloadCount>204</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://local4/</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonlit.Web.Mvc/1.0.0.9</DownloadUrl>
      <ProjectUrl>http://local4/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc</Id>
      <Version>1.1</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-28T07:18:45.047</Created>
      <Dependencies>HtmlAgilityPack:1.4.9:</Dependencies>
      <Description>XML Query Library by one liner.</Description>
      <DownloadCount>526</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T22:11:13.957</LastUpdated>
      <Published>2014-10-28T07:18:45.063</Published>
      <PackageHash>iPkh65npD6Y5+IjV0sj0tmvXvtnHano+pfuymk8045u3KXuaiujE0kGJDoVpsD8FyVA9Da3nF7MSKYNccY0fkg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7463</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Moonmile.ExDoc</Tags>
      <Title>Moonmile.ExDoc</Title>
      <VersionDownloadCount>39</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc/1.1.0</DownloadUrl>
      <ProjectUrl>http://github.com/moonmile/ExDoc</ProjectUrl>
      <LastEdited>2014-10-28T07:28:18.08</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc</Id>
      <Version>1.1.1</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-28T07:27:26.617</Created>
      <Dependencies />
      <Description>XML Query Library by one liner.</Description>
      <DownloadCount>526</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc/1.1.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T22:11:13.957</LastUpdated>
      <Published>2014-10-28T07:27:26.617</Published>
      <PackageHash>znPCtcE+E612FYmJREz8akN9IeaW4abZ/sEGdsKw1uP0WTPrSa3QcZF5U5g38bEneWByD9m28Fj8JlD20GCzHg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7425</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc/1.1.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>ExDoc XML Query</Tags>
      <Title>Moonmile.ExDoc</Title>
      <VersionDownloadCount>341</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc/1.1.1</DownloadUrl>
      <ProjectUrl>http://github.com/moonmile/ExDoc</ProjectUrl>
      <LastEdited>2014-10-28T10:28:43.28</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc.Html</Id>
      <Version>1.1</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-28T07:20:15.157</Created>
      <Dependencies>HtmlAgilityPack:1.4.9:</Dependencies>
      <Description>Conver from HTML to XML.</Description>
      <DownloadCount>945</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Html/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-08-07T08:32:37.17</LastUpdated>
      <Published>2014-10-28T07:20:15.157</Published>
      <PackageHash>0RyF3OGYRXVoupOo/N5fW6Nqz89VNTXkBNcbbf72Ra0pQEK3eBm7a8AT12em32+8EIiKd8PAXqPZTZydBcDd0w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>5425</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Html/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>ExDoc XML HTML</Tags>
      <Title>Moonmile.ExDoc.Html</Title>
      <VersionDownloadCount>330</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc.Html/1.1.0</DownloadUrl>
      <ProjectUrl>http://github.com/moonmile/ExDoc</ProjectUrl>
      <LastEdited>2014-10-28T07:23:11.777</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc.Json</Id>
      <Version>0.5</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-28T07:20:55.85</Created>
      <Dependencies>Newtonsoft.Json:6.0.6:</Dependencies>
      <Description>Convert from Json to Xml.</Description>
      <DownloadCount>876</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Json/0.5.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T20:49:41.537</LastUpdated>
      <Published>2014-10-28T07:20:55.85</Published>
      <PackageHash>e6JVGzrGy99ldBUueFNcuZs/EsIQrueZTMl0iJSnQIOpJUN2FoX6JgooDmTaCbjbDTv4Ce4brgXzvjWF66xLcA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>5859</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Json/0.5.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Json Xml ExDoc</Tags>
      <Title>Moonmile.ExDoc.Json</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc.Json/0.5.0</DownloadUrl>
      <ProjectUrl>https://github.com/moonmile/ExDoc/tree/master/ExYamlPcl</ProjectUrl>
      <LastEdited>2014-10-28T07:23:11.99</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc.Json</Id>
      <Version>0.6</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-29T09:02:09.31</Created>
      <Dependencies>Newtonsoft.Json:6.0.6:</Dependencies>
      <Description>Convert from Json to Xml.</Description>
      <DownloadCount>876</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Json/0.6.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-08-07T09:24:28.62</LastUpdated>
      <Published>2014-10-29T09:02:09.31</Published>
      <PackageHash>gU7l0kGlfoVqo9owD0OvkslkXXo4skItGLGxbLU+Te3mHljV0AEW6vobXpMPc3FEt1+XvDYsAl/V6PG3DeNQdA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>5838</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Json/0.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Json Xml ExDoc</Tags>
      <Title>Moonmile.ExDoc.Json</Title>
      <VersionDownloadCount>212</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc.Json/0.6.0</DownloadUrl>
      <ProjectUrl>https://github.com/moonmile/ExDoc</ProjectUrl>
      <LastEdited>2014-10-29T09:06:55.303</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExDoc.Yaml</Id>
      <Version>1.0</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-28T07:21:58.567</Created>
      <Dependencies>SharpYaml:1.2.0:</Dependencies>
      <Description>Convert from Yaml to Xml.</Description>
      <DownloadCount>471</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Yaml/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T22:36:44.127</LastUpdated>
      <Published>2014-10-28T07:21:58.567</Published>
      <PackageHash>dWKpFxOMuhpMBKxuD0lNr/yZaI9iXWHw5tZi0lZK8DmmsZr+dr+uaL2cTd76NYGaKdwcKxZPV2dN5or39zq8zg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>6254</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExDoc.Yaml/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Yaml Xml ExDoc</Tags>
      <Title>Moonmile.ExDoc.Yaml</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExDoc.Yaml/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/moonmile/ExDoc/tree/master/ExYamlPcl</ProjectUrl>
      <LastEdited>2014-10-28T07:23:12.25</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moonmile.ExYaml</Id>
      <Version>1.0</Version>
      <Authors>Tomoaki Masuda</Authors>
      <Copyright>Copyright 2014</Copyright>
      <Created>2014-10-26T15:54:35.377</Created>
      <Dependencies>SharpYaml:1.2.0:</Dependencies>
      <Description>Convert from Yaml to Xml.</Description>
      <DownloadCount>160</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moonmile.ExYaml/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T23:28:13.283</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>G2e9EJLmsh1o97t2TvRg60Qtg8FNFmqGDqan9Gwy/O576W3xEfK5UaAjeAGHxVBLjobGpaxJBYrCVYgJPvVuYA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>6306</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moonmile.ExYaml/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>init version</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>ExYaml is a library that convert from Yaml data to Xml.
Shaping the YAML data into easy-to-read XML format for people.</Summary>
      <Tags>Yaml Xml ExDoc</Tags>
      <Title>Moonmile.ExYaml</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moonmile.ExYaml/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/moonmile/ExDoc/tree/master/ExYamlPcl</ProjectUrl>
      <LastEdited>2014-10-26T15:56:51.297</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonOrm</Id>
      <Version>6.2.6</Version>
      <Authors>秦时明月</Authors>
      <Copyright>秦时明月</Copyright>
      <Created>2016-10-31T12:00:38.41</Created>
      <Dependencies />
      <Description>Moon.Orm它是一个 orm 框架.关于它和其他 orm
的对比,大家可以阅读:www.cnblogs.com/humble/p/3426888.html
大道至简,是其着力点.其特色是以数据库为根基.所以灵活便捷易用是主要特色.
EF 优雅,性能及其坑多是其致命伤；NH 历史悠久,然使用和配置复杂；传统代码生成器
三层的生成方案失去了编码的便捷和灵活性；其他的商业化的 Orm 不予评述。
Moon.Orm,意在打造高性能、易用、便捷、易于维护、多数据库数据源支持的 Orm 框架。
当然实际开发中没有银弹,只有平衡点。
1.性能:测试报告 http://www.cnblogs.com/humble/p/3472764.html
2.易用性:实体层一键生成→配置文件→智能感知化地编程。
3.多数库多数据源支持:Moon.Orm 在一同一个项目中,支持多数据库(种类)、多数据源
(连接字符串).Moon.Orm 目前支持的数据库类型有 sqlserver、 sqlite、 oracle、 mysql
等,只要该数据库拥有对应 ADO.NET 库,那么 Moon.Orm 就可以支持.
4.可维护性:
a) 如果您需要换数据库,直接修改配置文件然后一键生成实体层即可,逻辑代码不动。
b) 如果您需要多数据库,直接添加配置节点即可。
c) 如果您的数据库表结构或字段发生变动,一键重新生成实体层代码即可。</Description>
      <DownloadCount>258</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonOrm/6.2.6</GalleryDetailsUrl>
      <IconUrl>https://pic.cnblogs.com/avatar/83201/20161028120525.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>zh-CN</Language>
      <LastUpdated>2016-10-31T12:00:38.41</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>sagZmPOdtb9D5EDgiJ8xCSd9P5CV6RUDcNa3lDXX6eByl9t1chzPO/s76IJHzXhaXwqxmEz1TJgBwrYi2dM0Aw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2632871</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonOrm/6.2.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonOrm</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonOrm/6.2.6</DownloadUrl>
      <ProjectUrl>http://www.cnblogs.com/humble/</ProjectUrl>
      <LastEdited>2016-10-31T12:46:38.38</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonOrm</Id>
      <Version>6.2.7</Version>
      <Authors>秦时明月</Authors>
      <Copyright>秦时明月</Copyright>
      <Created>2016-10-31T12:43:57.817</Created>
      <Dependencies />
      <Description>官方支持版本,如果使用SQLite请将SQLite.Interop.dll放入项目生成目录.</Description>
      <DownloadCount>258</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonOrm/6.2.7</GalleryDetailsUrl>
      <IconUrl>https://pic.cnblogs.com/avatar/83201/20161028120525.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>zh-CN</Language>
      <LastUpdated>2016-10-31T12:49:46.703</LastUpdated>
      <Published>2016-10-31T12:43:57.817</Published>
      <PackageHash>z9ro9UzfdGlnWnfVQgw5e7K3McK4AjK9FT2MVdeVvUYRZ2wLIJdNp+tuPgq/9GYRo1356kDtkiZU6F7QG6H/7Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2632274</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonOrm/6.2.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>全面讲解: http://files.cnblogs.com/humble/d.pdf</Summary>
      <Tags />
      <Title>MoonOrm</Title>
      <VersionDownloadCount>184</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonOrm/6.2.7</DownloadUrl>
      <ProjectUrl>http://www.cnblogs.com/humble/</ProjectUrl>
      <LastEdited>2016-10-31T12:49:46.703</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPdf</Id>
      <Version>1.0.0</Version>
      <Authors>yuxxx</Authors>
      <Copyright>Copyright  2014</Copyright>
      <Created>2014-11-14T07:42:08.377</Created>
      <Dependencies>log4net:1.2.10:net40</Dependencies>
      <Description>A long description of the package. This shows up in the right pane of the Add Package Dialog as well as in the Package Manager Console when listing packages using the Get-Package command.</Description>
      <DownloadCount>952</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPdf/1.0.0</GalleryDetailsUrl>
      <IconUrl>https://nuget.org/Content/Images/packageDefaultIcon-50x50.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-09-18T10:57:42.66</LastUpdated>
      <Published>2014-11-14T07:42:08.377</Published>
      <PackageHash>rqMb+kaARrzZCQA35Ac+uC4KtR1JcDqxT+fiQgxgOVSmom2Fxeq/cu7MNoTCUqogDh2NNgImIybRB6WrSmJpMQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1889175</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPdf/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A short description of the package. If specified, this shows up in the middle pane of the Add Package Dialog. If not specified, a truncated version of the description is used instead.</Summary>
      <Tags />
      <Title>MoonPdf</Title>
      <VersionDownloadCount>952</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/Apache-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPdf/1.0.0</DownloadUrl>
      <ProjectUrl>https://nuget.org/packages/MoonPdf</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPdfLib</Id>
      <Version>0.2.3</Version>
      <Authors>reliak</Authors>
      <Copyright />
      <Created>2015-02-14T21:06:27.687</Created>
      <Dependencies>::net40</Dependencies>
      <Description>WPF based PDF viewer control.</Description>
      <DownloadCount>341</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPdfLib/0.2.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T22:21:26.973</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>mhIc4hXica8O3fQ33UPRrkmIgsFUSUqJRPwtVeGe7//sMm9bkd1zU9Ke2/6h58JJeYLXdLAx9KopDoLsMn1XMg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1889315</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPdfLib/0.2.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>GNU General Public License</Summary>
      <Tags />
      <Title>MoonPdfLib</Title>
      <VersionDownloadCount>108</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl-3.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPdfLib/0.2.3</DownloadUrl>
      <ProjectUrl>https://github.com/reliak/moonpdf</ProjectUrl>
      <LastEdited>2015-03-03T22:37:44.957</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPdfLib</Id>
      <Version>1.0.0</Version>
      <Authors>reliak</Authors>
      <Copyright />
      <Created>2015-02-14T21:11:44.243</Created>
      <Dependencies>::net40</Dependencies>
      <Description>WPF based PDF viewer control.</Description>
      <DownloadCount>341</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPdfLib/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T22:21:26.973</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>zwz+pPQYM7AdAky/jk2oikCw5bZBaHiHmRtIS3fVgYpI5BiEh5Iz5EuR2bZ1mJDFg70YSoyrgkZtWqRRtw7qPg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1889309</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPdfLib/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>GNU General Public License</Summary>
      <Tags />
      <Title>MoonPdfLib</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl-3.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPdfLib/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/reliak/moonpdf</ProjectUrl>
      <LastEdited>2015-03-03T22:37:26.737</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPdfLib</Id>
      <Version>1.0.1</Version>
      <Authors>reliak</Authors>
      <Copyright />
      <Created>2015-02-14T21:18:52.667</Created>
      <Dependencies>::net40</Dependencies>
      <Description>WPF based PDF viewer control.</Description>
      <DownloadCount>341</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPdfLib/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T22:21:26.973</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>+oIj0T6uDxDWWbWgiTCuu0A4ZOh0FwJhDSvLbfLHUkxeW8DZfQ4bxFPw9fteWo9k7elDi+0TgnXomGnrkeMjoQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1889362</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPdfLib/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>GNU General Public License</Summary>
      <Tags />
      <Title>MoonPdfLib</Title>
      <VersionDownloadCount>109</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl-3.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPdfLib/1.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/reliak/moonpdf</ProjectUrl>
      <LastEdited>2015-02-15T10:54:13.15</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPdfLib-x86</Id>
      <Version>0.3.0</Version>
      <Authors>reliak</Authors>
      <Copyright />
      <Created>2015-02-15T10:53:57.107</Created>
      <Dependencies>::net40</Dependencies>
      <Description>WPF based PDF viewer control.</Description>
      <DownloadCount>1518</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPdfLib-x86/0.3.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T12:51:11.44</LastUpdated>
      <Published>2015-02-15T10:53:57.107</Published>
      <PackageHash>a790XZlK4Nz7IQ7ABW2sjbbj7rSPYOPgt8GH+L8DzDq6qzg3R8q0NTSCkbMrsZ+Fy3Br+BDBNPTrIWIz1vsaOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1889873</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPdfLib-x86/0.3.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>GNU General Public License</Summary>
      <Tags />
      <Title>MoonPdfLib-x86</Title>
      <VersionDownloadCount>1518</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl-3.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPdfLib-x86/0.3.0</DownloadUrl>
      <ProjectUrl>https://github.com/reliak/moonpdf</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPigLibraryByTroySijuwade</Id>
      <Version>1.0.0</Version>
      <Authors>Troy Sijuwade</Authors>
      <Copyright>Troy Sijuwade 2015</Copyright>
      <Created>2015-07-23T17:01:40.027</Created>
      <Dependencies>HtmlAgilityPack::net45|Selenium.WebDriver::net45</Dependencies>
      <Description>This package is purely a library of useful classes which contains useful Selenium Webdriver related methods of interacting with web browsers when automating web applications. As this library was written as a test exercise for MoonPig.Com its has been developed to intentionally covers automating ONLY within; Google Chrome, Firefox, Phantomjs browsers, as well as, the following web elements types, which existed in source HTML of the MoonPig website for the feature that I selected to automate {i.e. web element of type; 'span', 'div', 'li' and 'ol' in HTML}. However, the library can, quite easily be extended to cover additional web browsers of your choice {e.g. IE, etc} as well as other generic web element types in HTML {e.g. 'input', 'a', 'p',  'ul', etc}. The library also contains other useful classes that can be used to efficiently automate the web application under test}. All Selenium related methods for automating generic browser actions can be accessed via the abstract class: SeleniumBase. Enjoy.</Description>
      <DownloadCount>648</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-GB</Language>
      <LastUpdated>2015-07-24T01:16:43.233</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>GqyWAraalEhlCcn0Ruy0mOdcUB18nbWjWcRWo7I+Ec2SQFOru/QGm6nb0uDWVlDaOKDfta4T4swBPONRbUQuoA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>3423809</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>This package is purely a library of useful classes which contain Selenium Webdriver related methods of interacting with web browsers {covers only Chrome, Firefox and Phantomjs browsers at the moment}.</Summary>
      <Tags>MoonPig TroySijuwade</Tags>
      <Title>MoonPigLibraryByTroySijuwade</Title>
      <VersionDownloadCount>216</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPigLibraryByTroySijuwade/1.0.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2015-07-24T01:16:43.233</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPigLibraryByTroySijuwade</Id>
      <Version>1.1.0</Version>
      <Authors>Troy Sijuwade</Authors>
      <Copyright>Troy Sijuwade 2015</Copyright>
      <Created>2015-07-24T01:15:40.833</Created>
      <Dependencies>HtmlAgilityPack::net45|Selenium.WebDriver::net45</Dependencies>
      <Description>This package is purely a library of useful classes which contains useful Selenium Webdriver related methods of interacting with web browsers when automating web applications. As this library was written as a test exercise for MoonPig.Com its has been developed to intentionally covers automating ONLY within; Chrome and Firefox browsers, as well as, the following web elements types, which existed in source HTML of the MoonPig website for the feature that I selected to automate {i.e. web element of type; 'span', 'div', 'li' and 'ol' in HTML}. However, the library can, quite easily be extended to cover additional web browsers of your choice {e.g. IE, etc} as well as other generic web element types in HTML {e.g. 'input', 'a', 'p',  'ul', etc}. The library also contains other useful classes that can be used to efficiently automate the web application under test}. All Selenium related methods for automating generic browser actions can be accessed via the abstract class: SeleniumBase. Enjoy.</Description>
      <DownloadCount>648</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-GB</Language>
      <LastUpdated>2015-07-24T03:25:07.107</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>D96vbtRADvnx0JF+le+T6Q+YdNbIdqB8A0+Fqt6PYu7toQm5Gajbdw3WU+RRP1lU7Waop8VASwUx5XHCYlfa0A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>3425447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Updated test analyst friendly exception messages in library ver 1.0.0</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>This package is purely a library of useful classes which contain Selenium Webdriver related methods of interacting with web browsers {covers only Chrome and Firefox browsers at the moment}.</Summary>
      <Tags>MoonPig TroySijuwade</Tags>
      <Title>MoonPigLibraryByTroySijuwade</Title>
      <VersionDownloadCount>161</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPigLibraryByTroySijuwade/1.1.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2015-07-24T03:25:07.107</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonPigLibraryByTroySijuwade</Id>
      <Version>1.2.0</Version>
      <Authors>Troy Sijuwade</Authors>
      <Copyright>Troy Sijuwade 2015</Copyright>
      <Created>2015-07-24T03:23:56.337</Created>
      <Dependencies>HtmlAgilityPack::net45|Selenium.WebDriver::net45</Dependencies>
      <Description>This package is purely a library of useful classes which contains useful Selenium Webdriver related methods of interacting with web browsers when automating web applications. As this library was written as a proof of concept for MoonPig.Com its has been developed to intentionally covers automating ONLY within; Google Chrome, Firefox, Phantomjs browsers, as well as, the following web elements types, which existed in source HTML of the MoonPig website for the feature that I selected to automate {i.e. web element of type; 'span', 'div', 'li' and 'ol' in HTML}. However, the library can, quite easily be extended to cover additional web browsers of your choice {e.g. IE, etc} as well as other generic web element types in HTML {e.g. 'input', 'a', 'p',  'ul', etc}. The library also contains other useful classes that can be used to efficiently automate the web application under test}. All Selenium related methods for automating generic browser actions can be accessed via the abstract class: SeleniumBase. Enjoy.</Description>
      <DownloadCount>648</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.2.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-GB</Language>
      <LastUpdated>2015-08-21T18:08:49.55</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>WhV8Lp2RhE5WDT0SMHxlFUKM/F6h695pep2gPkSdbg8ZsPkwLbsZyeKz5EGX3V33JR0XOpZ8WPqU7nF2A4iyrg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>3424028</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonPigLibraryByTroySijuwade/1.2.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Removed reference to PhantomJS in library ver 1.1.0</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>This package is purely a library of useful classes which contain Selenium Webdriver related methods of interacting with web browsers {covers only Chrome, Firefox and Phantomjs browsers at the moment}.</Summary>
      <Tags>MoonPig TroySijuwade</Tags>
      <Title>MoonPigLibraryByTroySijuwade</Title>
      <VersionDownloadCount>271</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonPigLibraryByTroySijuwade/1.2.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2015-08-21T18:08:49.55</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.3.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-09-29T09:12:22.433</Created>
      <Dependencies>Antlr4.Runtime:4.3.0:</Dependencies>
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.3.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>2CPRwI/XRHcdVnE+Lqe5gXYafVI2JCj9ZKA1iYpa77S/s9L56p2x1Xl1mgvcNZ/jymuZIq9pToYI+FzXjx71rQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>90921</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.3.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.3.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.3.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-09-29T09:14:05.37</Created>
      <Dependencies>Antlr4.Runtime:4.3.0:</Dependencies>
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.3.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>zavkyXisS2kmQQhQ+mWCyQPy4vhr3v3Yv41i6QIWzZVOmSHBtGNUSMI3dPQBTflWR/8x2ta9VX7RbxpaIqg8Rw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>90922</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.3.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>101</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.3.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.5.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-09-29T17:22:31.463</Created>
      <Dependencies>Antlr4.Runtime:4.3.0:</Dependencies>
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.

This is a the first non-development version, please report bugs on GitHub.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.5.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>GZilLiCHfL+P7V9SRyro3pM2p6bcM+N3f4If1DdYALVr9MA83HKl1GA1h09nTSLQlmZGsyVbdMznAYdozg+gPg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>89705</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.5.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>107</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.5.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.5.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-09-30T09:02:46.803</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.5.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>KoCUGojPIX2dLq/evdU77BQsIB+zETwW9uC6oXBt/adcVznwsLAz+igQUCniipxJ5ufitbuSakeOp/i295rSLQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>190135</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.5.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed a dependency issue with frameworks &gt; 3.5</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.5.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.5.3</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-10-02T22:18:00.757</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.5.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>TOOP2wSxdJu+oSh3XF6OhbTGPDXyPGgDOw09jm7eNrgo2shIcDB49YGVWuga9Ox2u+LadLzP//JK9g4AH2wSsQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>190691</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.5.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed a dependency issue with frameworks &gt; 3.5</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.5.3</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.5.5</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-10-08T17:07:47.29</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.5.5</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Jg+0GWM65x5qP/96sC2dKuOrISRKNAVZxXuV/4c1J15SI6r7yWf+SCbeOSCx+JlnvjgrhriFnJ8eOsHfDAvn0A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>191856</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.5.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Optimized parsing stage
* Performance statistics for diagnostics</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>165</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.5.5</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.6.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-10-20T10:06:54.32</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.6.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>m9IxRNaSznIH1QeYW7xGOsOFKq0QbdYdIVRHPJi0hTPJzpfCU8w2RKt9Tp58awYfcWER3/dFyQ4XJ9740AOXrA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>209294</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* A new DataType of Void introduced to correctly handle the no return value scenario.
* Fixed a bug where multiple return values could not be used directly in an operation
* New modes for easier type conversions in CallbackArguments. Plus, DynValue.CheckType method.
* Changed "Closure" property of CallbackFunction from Table to be named AdditionalData and being an Object
* Removed some deprecated methods from ScriptExecutionContext
* Lots of optimizations
* Fixed a bug where strings containing some escape sequences were not parsed correctly.
* Improved syntax error messages
* Made ':' calls work the same as '.' calls on userdata
* String library completed, with some methods importing code from KopiLua, ported to 5.2 standard
* Fixed some bugs in the parsing of string literals escape codes
* Started a small wrapper to interface with code using the classic stack-based API (UniLua, KopiLua or Lua itself).</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>151</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.6.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.7.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-11-07T18:16:44.993</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.7.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>DiG2LGLYOTiOlLPkWKd80rQ+4YCWAvt32NdzYpnG2k7GDr8382m8suZgUWZBSiXtQMByVf6d8uL2kjcpp80JIA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>410738</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.7.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote debugger support! Chech MoonSharp.Debugger package.
* \u{xxx} escape to output unicode codepoints, as defined in Lua 5.3
* Better handling of some lexer errors with invalid escape sequences
* Solved a bug where the VM debugger crashed on inspecting globals
* ScriptFunctionDelegate types, and added GetDelegate methods in Closure type
* Changed scope implementation of functions, so that _ENV is always present, either as a local or upvalue (previously, if a function never used globals, it didn't reference _ENV). This fixes sandboxing of functions calling load or equivalents in some remote scenarios.
* Support for dynamic expressions in .NET
* Support for dynamic expressions in standard library (addition)
* Fixed some license issues here and there</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>287</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.7.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.7.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-11-07T18:24:48.317</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.7.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>oJ7Z+QYFUELIsE6jNAfbwoALgd6i0OHXIlOfaASn3xT92GTyWoVhx611jrqnTpxj75MAjVUe2NMrTn7sUWBHrA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>410765</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.7.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote debugger support! Chech MoonSharp.Debugger package.
* \u{xxx} escape to output unicode codepoints, as defined in Lua 5.3
* Better handling of some lexer errors with invalid escape sequences
* Solved a bug where the VM debugger crashed on inspecting globals
* ScriptFunctionDelegate types, and added GetDelegate methods in Closure type
* Changed scope implementation of functions, so that _ENV is always present, either as a local or upvalue (previously, if a function never used globals, it didn't reference _ENV). This fixes sandboxing of functions calling load or equivalents in some remote scenarios.
* Support for dynamic expressions in .NET
* Support for dynamic expressions in standard library (addition)
* Fixed some license issues here and there</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>323</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.7.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-12-11T10:58:54.937</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>UAB//XSMgHq0St/I3FnTeMRpXI8QK7lDRLYrOEuMEF4QVjO/F27cSb5MaAZ96/t9U1wuzU/3J7jy23RC2HRSrw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>410744</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Support for Unity Web Player and Unity Android (non-stripped)
* Support for Xamarin Android
* 'os', 'io' and 'file' libraries completed. Note that in Unity and Xamarin some functionality of 'os', 'io' and 'file' are not supported.
* Parts of the 'debug' library completed. This has been done for compatibility sake, as debuggers are implemented differently in MoonSharp.
* Improved error messages
* Improved options management [small breaking change]
* Table indexers now support any number of keys and resolve to subtables automagically
* Fixed a bug where a piece code behaved differently in .NET 4 than in .NET 2 (weird covariance stuff, this btw is interesting weird corner case).
* Test suite runs on Xamarin Android, Unity Windows, Unity Android and Unity Web Player correctly</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>92</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-12-11T11:59:21.757</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>kB3oLwr+0qf05XaoqpwvXXxaQGw8IBTo6Ko3Jd611V2hucpXiF8tTA5+0HsvW5QYQAX+nsdUyiXEj7ucDEAH1A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>551530</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Support for Unity Web Player and Unity Android (non-stripped)
* Support for Xamarin Android
* 'os', 'io' and 'file' libraries completed. Note that in Unity and Xamarin some functionality of 'os', 'io' and 'file' are not supported.
* Parts of the 'debug' library completed. This has been done for compatibility sake, as debuggers are implemented differently in MoonSharp.
* Improved error messages
* Improved options management [small breaking change]
* Table indexers now support any number of keys and resolve to subtables automagically
* Fixed a bug where a piece code behaved differently in .NET 4 than in .NET 2 (weird covariance stuff, this btw is interesting weird corner case).
* Test suite runs on Xamarin Android, Unity Windows, Unity Android and Unity Web Player correctly</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>91</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.0.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-12-11T14:38:14.757</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.0.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>0L2ks1GXR9E+foTz0A6dXta0thAlkK4G0NN2ziIn2x6C4clizX+D2s+4OpLqUv3SIdOA+IYWWm9Y4She25Bbng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>551542</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Support for Unity Web Player and Unity Android (non-stripped)
* Support for Xamarin Android
* 'os', 'io' and 'file' libraries completed. Note that in Unity and Xamarin some functionality of 'os', 'io' and 'file' are not supported.
* Parts of the 'debug' library completed. This has been done for compatibility sake, as debuggers are implemented differently in MoonSharp.
* Improved error messages
* Improved options management [small breaking change]
* Table indexers now support any number of keys and resolve to subtables automagically
* Fixed a bug where a piece code behaved differently in .NET 4 than in .NET 2 (weird covariance stuff, this btw is interesting weird corner case).
* Test suite runs on Xamarin Android, Unity Windows, Unity Android and Unity Web Player correctly</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.0.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2014-12-18T14:16:25.237</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>FgVkjguWn9ZQDM79/LOLXHGNIKoVklhJ+2CColE9KQT2gzZ3u4zQxTdUfgGIBakZOISRAoPRtvaXjAUVCikYXA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>474902</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>159</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.5</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-01-13T17:07:53.713</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.5</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>upczRjXlwM3i+J5szM1wBKROzNdqNnoZLXQjuuFeB5UglCtnziO0VTgH0rD4lucZC6wXJARDaUrJbb+/UJvoTA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>439201</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>90</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.5</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.8.5.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-01-13T17:34:53.327</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.8.5.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>TlpnNfHEkfLuy+VoBtG5Bpq/2TnMxBt8dQkCz6od6YBFXlBp2MFFNkqgHHELOzZsCnqstqPfG1QgFJ1AiSM9nA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>470030</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.8.5.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>320</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.8.5.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-03-24T12:24:00.337</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-03-24T10:08:23.397</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>B0m/5kBr8L0Bm288bB3ofoH01aZlSK4/51/fmG0Xg+xYKPGCZrxz7fPx+6GojxlwnOxxgUctUbuCHCP+BQ5iXg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1065129</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-03-24T10:29:47.307</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.0.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-03-24T10:26:05.527</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>g8SFfG4VFGnHJGPI5vVWXES9s0CEQcyBlqY65BSZnENrkAylFPKCcDIl8I3TGk4cp+j8sIGU6lFXMRaiTcrOLA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>950687</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.0.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-03-24T10:29:41.323</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.0.3</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-03-24T10:28:25.863</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.3</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>2015-03-24T10:28:25.863</Published>
      <PackageHash>DRtND5USUGSr6HULsx5rW9aZZl2MFzmXUi3amJ0AwC804dps6stCbAQl7vNappWCuKayKU58Kh5yVD1KluAD0g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>950687</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.0.3</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.0.4</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-03-24T12:38:32.067</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.4</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T06:40:03.353</LastUpdated>
      <Published>2015-03-24T12:38:32.067</Published>
      <PackageHash>Zj2t6cYD8xrUL0GumyawUZsoe3DJGfM9zS900x9FcFrE4XSG1qcUkzT00B2W4c3mjPYc2t8PsUctM06N5wL0/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1005521</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.0.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.0.4</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.2.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-03-31T15:22:07.577</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-20T16:58:46.56</LastUpdated>
      <Published>2015-03-31T15:22:07.577</Published>
      <PackageHash>dWesBOwSim+2vJJHFkCJok10CtBGIiLoZv5WGS+VcvLnkS5syj89mp5r4+Rk6/Q2D+v8rdgd3otwQ27Kbm4JOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1090421</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>268</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.4.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-05-20T16:58:46.53</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.4</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-22T10:12:07.06</LastUpdated>
      <Published>2015-05-20T16:58:46.53</Published>
      <PackageHash>eT4oB9HWjwl371BG0TNzrq4sktN5D5Q9LeSTRHNi6KEJK5UKRJ+FYftFiAP0VwavLfVRXRQtA0naBWBPM43Rgg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1229753</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>72</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.4</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.6.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-05-22T10:12:07.03</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.6</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-15T10:09:30.003</LastUpdated>
      <Published>2015-05-22T10:12:07.03</Published>
      <PackageHash>zPEHzxVALDsdRYsSTIBc1vozml0KDdGXP4k8CvwDHNMjtY2xND1IQ8qjnQKvo+l6t9uIjPW9aPGNmTPK5Xo0fw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1355981</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>208</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.6</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.6.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-06-15T10:09:29.987</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.6.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-09T10:29:48.98</LastUpdated>
      <Published>2015-06-15T10:09:29.987</Published>
      <PackageHash>helGKZj7SW81zptPPxRZLih8K+keq1s5dqdEj71Qg84STBk2Yg238ptBOIW4j6RQ6kDFbpCtdvAwYl8xtWorUQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1269651</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.6.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>229</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.6.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>0.9.8.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-07-09T10:29:48.967</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/0.9.8</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-23T05:39:06.11</LastUpdated>
      <Published>2015-07-09T10:29:48.967</Published>
      <PackageHash>w9ON2lEWmfVEdOgojyk4w5ZKCYkZWJLloL3Q0KYpI2vl1pQXSlBeMs4T/pVHFDJ7TgAtf7KSLvguwgfAVKxrNQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1271973</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/0.9.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>469</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/0.9.8</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.0.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014, Marco Mastropaolo</Copyright>
      <Created>2015-10-23T05:39:06.047</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-23T05:39:06.11</LastUpdated>
      <Published>2015-10-23T05:39:06.047</Published>
      <PackageHash>PW7rrXChwT7Q80OWiUW2POGDRINdaLoRKcjn53RmKibCciJiTeeWkHIrrIsKxTLm1RzH82qsI5B7Nen2zo7g7w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1284471</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>369</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.0.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.1.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2015, Marco Mastropaolo</Copyright>
      <Created>2015-12-07T18:25:33.46</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.1.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-07T18:25:33.46</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Wjvips7fg+3xL4lBMlUa6aAPgd/oV5RATbgTk0WxsJM82DGQuu5zZAyp89m8Zym053SFF19hDoSu5sXrCpmP7w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1434140</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.1.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-12-07T18:25:34.513</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.1.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2015, Marco Mastropaolo</Copyright>
      <Created>2015-12-08T13:32:59.5</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.1.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-08T13:32:59.5</LastUpdated>
      <Published>2015-12-08T13:32:59.5</Published>
      <PackageHash>Qp7fykCBcexzWQaFBD1YK5rwy8K0T6FqMICI7OZcj5bfHHu80HSI2Y8ZdHX7u944Oqxzeo6+/rCjtxCvmqpJkg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1289855</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>241</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.1.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.2.1.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2015, Marco Mastropaolo</Copyright>
      <Created>2016-01-24T14:31:52.457</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.2.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-01-24T14:31:52.457</LastUpdated>
      <Published>2016-01-24T14:31:52.457</Published>
      <PackageHash>Vqcc4cYAKepelE1LMLatAPAmuAI1x2Qqx+oHrmPyHNBfKT5qJhEKwpP+HO6UNsVILW6R1aM53i7RSstSYCd6Og==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1307365</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.2.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>308</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.2.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.5.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2015, Marco Mastropaolo</Copyright>
      <Created>2016-02-09T17:39:28.513</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.5.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-09T17:39:28.513</LastUpdated>
      <Published>2016-02-09T17:39:28.513</Published>
      <PackageHash>C+hmKyKpFg8OZPvMtt9z8+eMWJOuwxyJc/3GQM3Pw9zR2UreZBzgtR/l9J2flFQ/7YMUmcfJoU6eMNYR1toqTQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1357233</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.5.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>37</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.5.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.5.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2015, Marco Mastropaolo</Copyright>
      <Created>2016-02-09T17:44:04.923</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.5.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-09T17:44:04.923</LastUpdated>
      <Published>2016-02-09T17:44:04.923</Published>
      <PackageHash>4s6BrR97sMhxZ3ii1r2mH2xQzFkx1hYjKU4uXM7wtFTCwpJTU2ERh5JLWVaNFTiDIAFZA3rnVZsccFMMvZ0yOg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1357302</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.5.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>749</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.5.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.6.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-05-16T12:17:43.873</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.6.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-16T12:17:43.873</LastUpdated>
      <Published>2016-05-16T12:17:43.873</Published>
      <PackageHash>be1VVV2UWD8QwOel/c0BH/UPWRlCngFJN4zWtuhWaI1/78LHYgFF2wtzMjNaAjKkM2vkqLvbnd/Wi0atMKnP2g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1370819</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>1435</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.6.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.7.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-10-03T14:12:12.267</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.7.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-03T14:12:12.267</LastUpdated>
      <Published>2016-10-03T14:12:12.267</Published>
      <PackageHash>p8GrWeT6AFu9FDxzlqn8MwOT5AOHsNgZ5CyO+uH6Gu98qhKKuJHBUfXvaQlJ6Mc+MEn+9JxgxT9mtzaMi/WG/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1373750</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.7.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>63</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.7.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.8.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-10-07T13:12:26.567</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.8.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-07T13:12:26.567</LastUpdated>
      <Published>2016-10-07T13:12:26.567</Published>
      <PackageHash>CkwLZlqJ7VJGqsPRvLzxMC+dfj7g5TVJFwKAVjriDqxbBU3x8T3cUXCvCmiklb57fan2sWYHWvOHasN3PHX9VQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1395345</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.8.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.8.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.9.9.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-10-14T14:19:18.613</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.9.9</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T14:19:18.613</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>aOKi27t75BxpzFNnV65pS9+I20W4y5bCIbsp0uZTPN3GI/w2uGPXP7Fi4LdZ4Jtc5BDLhNf3KKyGVqXxDJF9XQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1888833</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.9.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.9.9</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2016-10-14T15:12:00.467</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>1.9.9.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-10-14T15:00:39.72</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/1.9.9.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T15:00:39.72</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>9e5fqcnOeMVAA3aOrz/oLjbHPQ+R79SdbCdH+5JVZ++KQ+QuLj0KsmZXqNSOFsxH+kT2ToxHZqk7I77vID5O3w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2361648</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/1.9.9.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>70</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/1.9.9.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2016-10-14T15:12:08.377</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp</Id>
      <Version>2.0.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright>(c) 2014-2016, Marco Mastropaolo</Copyright>
      <Created>2016-10-14T17:12:53.59</Created>
      <Dependencies />
      <Description>A Lua interpreter written entirely in C# for the .NET, Mono, Xamarin and Unity3D platforms.</Description>
      <DownloadCount>16719</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp/2.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharp_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T17:12:53.59</LastUpdated>
      <Published>2016-10-14T17:12:53.59</Published>
      <PackageHash>uiAcRh7d+53k3xW9pFDJfAFVw4RnjHVCJG05M3oPAVEVwPtFavhg1H/IpC6So4X1j9kJlzuLlA3OghhPcIvc5A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2362652</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Tags>Lua Script Scripting</Tags>
      <Title>MoonSharp</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp/2.0.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.7.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-11-07T18:18:52.833</Created>
      <Dependencies>MoonSharp:0.7.0:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.7.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>lhD1mD6cKCOtM2oXNMjR66uNeULo+jgHzrEF2Fax0Rnyvq9a6plYeLwcAw1XxjyBKgm7CjbR+Xoop89TQs5AVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1353796</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.7.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* First release.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>288</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.7.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.7.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-11-07T18:26:42.073</Created>
      <Dependencies>MoonSharp:0.7.0.1:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.7.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>jcm5WmswOrmJ6CT95e+MZJpHTRlsy15NlrUUt7f2PFhyj6RhBvixM5oaiekKyqkEzb+WmC4JHt1vwDfEd6/alw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1353825</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.7.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* First release.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>298</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.7.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-12-11T11:01:58.237</Created>
      <Dependencies>MoonSharp:0.8.0:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>jn5EmMCgJRHkMKQpeZok2p0Y4Wz2lFLwrrwNMaAnUIpNtg47Fa0OfzBEin0TyBOG+LaWauc6FQWr9lYBwKmd2g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1353932</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>90</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-12-11T12:01:04.32</Created>
      <Dependencies>MoonSharp:0.8.0:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>ChFUPKUOhjWQ8CINuqhTXwwJrrJDfOHC62yOxHk/1Y8O1u70631oj3ttJKhIgXbdExFlTxF6S9HO89QQn3IljA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1356692</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.0.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-12-11T14:40:58.033</Created>
      <Dependencies>MoonSharp:0.8.0.2:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>nnw3dN2b94ewxALSGT9iqod3ebkwj4enC2wcCTVc0C5XiYw5V+HR0dlncC5uSfybcY+5G3lUsbkEO6n88EJy3A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1356692</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>96</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.0.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2014-12-18T14:21:18.393</Created>
      <Dependencies>MoonSharp:[0.8.1]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>wfyJMGJtRf88rI8CTgTuk6tGE8MmU1HCqmUJLHq+27wi0znnhiZuOrlNiHvPjtMvKt1g0O++KPvgMmyrdBfd2w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1356626</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>106</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.5</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-01-13T17:09:47.533</Created>
      <Dependencies>MoonSharp:[0.8.5]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.5</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Y6WNgOqN9AA1UID6k0+Ebw1rUD+WrkE2eDQtjPTnj221wfOv6ix1mdGDGaNVvz6zpsh7UhhloEP36qFPIPZVTw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1355194</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.5</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.8.5.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-01-13T17:36:30.773</Created>
      <Dependencies>MoonSharp:[0.8.5.1]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.5.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>2015-01-13T17:36:30.773</Published>
      <PackageHash>2weaRYwugWm9p1WhwAKcEKg2I09yxKcDBjKZd47EwPkiFvg5lFIySfZICpUtHeC3oZ7LEagaaT/005pjKGm2og==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1355803</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.8.5.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>187</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.8.5.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-03-24T10:09:37.053</Created>
      <Dependencies>MoonSharp:[0.9.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>F2aSFhEdH2tojufDisQUMqUklKsZDvk59mhj7EVNpjz1gjGO+BItyCA7REqANkdUk36VKBaRfOsMnnHZdooVVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1391461</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-03-24T10:30:21.31</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.0.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-03-24T10:26:11.82</Created>
      <Dependencies>MoonSharp:[0.9.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>NG8U4FGjyqlOkprlsQT06wRq0tRyfG6hxVHACjmax1zBsD5G7aozRBPxy0viCT7n5zzMfBKO5CuWmyAY5MbMBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706475</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.0.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-03-24T10:30:18.52</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.0.3</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-03-24T10:29:31.897</Created>
      <Dependencies>MoonSharp:[0.9.0.3]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.3</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>2015-03-24T10:29:31.897</Published>
      <PackageHash>NH6OOZeIKLLJOwaXjouYz4HOPoDpGIQcwcEnRg3eHfYOGtCkGlS6wmpOLcjYSEIYMCRjeFmpnb78AG+iDYRKhw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706475</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>118</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.0.3</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.0.4</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-03-24T12:38:38.61</Created>
      <Dependencies>MoonSharp:[0.9.0.4]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.4</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:53:39.6</LastUpdated>
      <Published>2015-03-24T12:38:38.61</Published>
      <PackageHash>rFZJSMcIE4w4acRcdJGbfYWBiW9DPKPqwa3JLJlr8Ogq/Y6sZbP2b2R/ImPEU88pROM1scYoYWgh2j0dqqIxcA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706476</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.0.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.0.4</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.2.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-03-31T15:22:16.52</Created>
      <Dependencies>MoonSharp:[0.9.2.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-20T16:59:31.967</LastUpdated>
      <Published>2015-03-31T15:22:16.52</Published>
      <PackageHash>luFZ3iNWUuJnQbJLsyBn8J1MEoBVDILAv6K3vamotq8/qi2JwE6Zyqp0pQ7Nx5iSD44PT2NZW5yZx0DUD9Wh9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706501</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.4.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-05-20T16:59:31.903</Created>
      <Dependencies>MoonSharp:[0.9.4.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.4</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-22T10:12:09.997</LastUpdated>
      <Published>2015-05-20T16:59:31.903</Published>
      <PackageHash>I/JnyOZ2jj5TXaAUiUEedjNGYrmUNKRS0xz5ZUG4/+qVIUIfq3rK9pD7BCXPWrt2jDtp4I4JfUZSnWlOV0HPpw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706490</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>69</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.4</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.6.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-05-22T10:12:09.95</Created>
      <Dependencies>MoonSharp:[0.9.6.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.6</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-15T10:23:48.557</LastUpdated>
      <Published>2015-05-22T10:12:09.95</Published>
      <PackageHash>LHHCbVzJMteS5D9syCrPgJjKpWFopoZJXVJoBJtf3lytBDlBehxCuMn356JQTmmDK6mtzWOBYiEZjJ2inWUWVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2707842</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>114</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.6</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.6.2</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-06-15T10:23:48.497</Created>
      <Dependencies>MoonSharp:[0.9.6.2]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.6.2</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-09T10:30:42.197</LastUpdated>
      <Published>2015-06-15T10:23:48.497</Published>
      <PackageHash>5H7QTX0xq9E1VxdIJLhoEGgBBY2uEwLZlgISfgA/SKcaR37rtme1S6c/FlOHplEhUlDMkBWBrODifmXKnpezvA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705892</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.6.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.6.2</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>0.9.8.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-07-09T10:30:42.133</Created>
      <Dependencies>MoonSharp:[0.9.8.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.8</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-23T05:44:18.153</LastUpdated>
      <Published>2015-07-09T10:30:42.133</Published>
      <PackageHash>MvQiAWthECMJQz1qjGYV9MPYwbwvqxYk+72eAAnfC5RBLSYf4jc5sX/qxxv5lkErjGl2niHKLxyTyiOTw6CH5g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705905</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/0.9.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>* Remote Debugger: it's now possible to attach the debugger to running scripts without having them getting paused
* Remote Debugger: it's now possible to break on errors, and to select which errors break and which don't
* Remote Debugger: added set breakpoint and clear breakpoint commands</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/0.9.8</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.0.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-10-23T05:44:18.09</Created>
      <Dependencies>MoonSharp:[1.0.0.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-23T05:44:18.153</LastUpdated>
      <Published>2015-10-23T05:44:18.09</Published>
      <PackageHash>KkuChabGGQqTOkTfS32dcmDiUHfprPtTL/TRBodqA41OsnLHLcxHsAgql1PpNn8akwnTcARzjHpjsO3wTd4cFA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705766</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.0.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.1.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-12-07T18:26:12.37</Created>
      <Dependencies>MoonSharp:[1.1.0.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.1.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-07T18:26:12.37</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>wG7JFUfPRxBtFP02UDdT1tA4VDblE78iwejuPFNB9z4ykWbX2Mlz9xNY91VyxhAHPL7Jhf8rAQ8Mrbv7PNIfdQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706916</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.1.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2015-12-07T18:26:10.703</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.1.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2015-12-08T13:35:18.377</Created>
      <Dependencies>MoonSharp:[1.1.0.1]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.1.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-08T13:35:18.377</LastUpdated>
      <Published>2015-12-08T13:35:18.377</Published>
      <PackageHash>m7tK2XMmjzObZxu6iAhglrJg6gp+MgBQ9V9jZ5gBhzetcFZBZdTuWt4JlyW/aevEos272M8pv8kKnPDxXvWygg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705813</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.1.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.2.1.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-01-24T14:33:36.403</Created>
      <Dependencies>MoonSharp:[1.2.1, 1.2.1]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.2.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-01-24T14:33:36.403</LastUpdated>
      <Published>2016-01-24T14:33:36.403</Published>
      <PackageHash>3ikgJbCgouaBnjd2iYmPgIngvZiCf86BEJRkhrMradppJweOZcHPVQWE+PVqm/bYCZhGRhh92K8UzXOWybpleA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705998</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.2.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>101</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.2.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.5.0.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-02-09T17:44:49.7</Created>
      <Dependencies>MoonSharp:[1.5.0.1, 1.5.0.1]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.5.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-09T17:44:49.7</LastUpdated>
      <Published>2016-02-09T17:44:49.7</Published>
      <PackageHash>KzZmHzkkmQR6s9+Frc0fnKakaKedMu6Jki+uEsAscMNjpJmvQZo5d8LY3EuTSQc1bQk247OIspuw4RSZCSyGfA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705995</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.5.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>241</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.5.0.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.6.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-05-16T12:18:05.4</Created>
      <Dependencies>MoonSharp:[1.6.0, 1.6.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.6.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-16T12:18:05.4</LastUpdated>
      <Published>2016-05-16T12:18:05.4</Published>
      <PackageHash>deURl9R3Y23w8yGMAmik9vQAiOMe0bnBzHRqBkB9zqWNiLzMWD/gbN0Y4vEKBjWsF1PvmaN3sSikB6uBuHPvHQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2704743</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.6.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.7.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-03T14:12:35.37</Created>
      <Dependencies>MoonSharp:[1.7.0, 1.7.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.7.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-03T14:12:35.37</LastUpdated>
      <Published>2016-10-03T14:12:35.37</Published>
      <PackageHash>3f0WoY6olk/FpC9nJGVQCxnYhoib9jMgsXFzGECl2ots0HianOzSPl00/oow+nw7WRnIj31kLLDqrVvuQkcNXw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2705644</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.7.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>18</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.7.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>1.8.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-07T13:12:51.413</Created>
      <Dependencies>MoonSharp:[1.8.0, 1.8.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.8.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-07T13:12:51.413</LastUpdated>
      <Published>2016-10-07T13:12:51.413</Published>
      <PackageHash>x4hwZaHhZyj3DMuq4gT/kHAESV0PEVVg5OLmNrWEq5TUewowUsD/a95AVXe1TpPyDAaUycERUBhtYoYZlrwfoA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706088</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/1.8.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>22</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/1.8.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger</Id>
      <Version>2.0.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-14T17:13:52.54</Created>
      <Dependencies>MoonSharp:[2.0.0, 2.0.0]:</Dependencies>
      <Description>Remote debugger for the MoonSharp interpreter. Allows to debug scripts embedded in an application through a web browser.</Description>
      <DownloadCount>3896</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger/2.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbg_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T17:13:52.54</LastUpdated>
      <Published>2016-10-14T17:13:52.54</Published>
      <PackageHash>9SItyraCi+iqvewfPLU19KUl+4MHLgyOZt4JBKyi7i6/9UvMxI90X92LTWJFVuxqBUbhJOnW4w3VpwLu3N3VWw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2706020</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger/2.0.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger.VsCode</Id>
      <Version>1.8.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-07T13:26:53.517</Created>
      <Dependencies>MoonSharp:[1.8.0, 1.8.0]:</Dependencies>
      <Description>Visual Studio Code debugger support for the MoonSharp interpreter. Allows to debug scripts using Visual Studio Code. See https://marketplace.visualstudio.com/items?itemName=xanathar.moonsharp-debug</Description>
      <DownloadCount>690</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.8.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbgvscode_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-07T13:26:53.517</LastUpdated>
      <Published>2016-10-07T13:26:53.517</Published>
      <PackageHash>CcJpMEy4paeqpHj7YUiTEecCzmYV7wStKKXLappUgDNBfGPkzcl1pl/7qmXVUKQCog16JicvmGziZMrPMuA/jQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>90171</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.8.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger.VsCode</Title>
      <VersionDownloadCount>20</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger.VsCode/1.8.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger.VsCode</Id>
      <Version>1.9.9.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-14T14:19:41.153</Created>
      <Dependencies>MoonSharp:[1.9.9, 1.9.9]:</Dependencies>
      <Description>Visual Studio Code debugger support for the MoonSharp interpreter. Allows to debug scripts using Visual Studio Code. See https://marketplace.visualstudio.com/items?itemName=xanathar.moonsharp-debug</Description>
      <DownloadCount>690</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.9.9</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbgvscode_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T14:19:41.153</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>2uPAaURfqSPKKgjYAHrS7a0MG81U0+EkJ4jBn8t1He6etRHwfLuajC5mfeAafPG/o5sGvE7VGl3lqrEUJvBYCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>164567</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.9.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger.VsCode</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger.VsCode/1.9.9</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2016-10-14T15:11:42.873</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger.VsCode</Id>
      <Version>1.9.9.1</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-14T15:02:47.807</Created>
      <Dependencies>MoonSharp:[1.9.9.1, 1.9.9.1]:</Dependencies>
      <Description>Visual Studio Code debugger support for the MoonSharp interpreter. Allows to debug scripts using Visual Studio Code. See https://marketplace.visualstudio.com/items?itemName=xanathar.moonsharp-debug</Description>
      <DownloadCount>690</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.9.9.1</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbgvscode_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T15:02:47.807</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>0hqcc2Ym+Ji6enwkQthrx6p+Udcr6l1hqpyNjJwNuFS8Zl8e5B9mywxlL7jjjfL4MXucWu+L2urHGRn1mn7v9A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>223008</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/1.9.9.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger.VsCode</Title>
      <VersionDownloadCount>72</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger.VsCode/1.9.9.1</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>2016-10-14T15:11:35.28</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoonSharp.Debugger.VsCode</Id>
      <Version>2.0.0.0</Version>
      <Authors>Marco.Mastropaolo</Authors>
      <Copyright />
      <Created>2016-10-14T17:13:12.887</Created>
      <Dependencies>MoonSharp:[2.0.0, 2.0.0]:</Dependencies>
      <Description>Visual Studio Code debugger support for the MoonSharp interpreter. Allows to debug scripts using Visual Studio Code. See https://marketplace.visualstudio.com/items?itemName=xanathar.moonsharp-debug</Description>
      <DownloadCount>690</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/2.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.moonsharp.org/logos/moonsharpdbgvscode_nuget.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-14T17:13:12.887</LastUpdated>
      <Published>2016-10-14T17:13:12.887</Published>
      <PackageHash>ALLTmbkzKidTuJhHO2G9BF0N/S2LGYuvUX1U+PWDxUFWHo/0noBfXfR9gWzjH8J+2Wg5mqeC7oKTkgOTx2e1GQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>222907</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoonSharp.Debugger.VsCode/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>See http://www.moonsharp.org/changelog.html</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoonSharp.Debugger.VsCode</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/xanathar/moonsharp/blob/master/LICENSE</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoonSharp.Debugger.VsCode/2.0.0</DownloadUrl>
      <ProjectUrl>http://www.moonsharp.org/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MooresCloudHolidayDotNet</Id>
      <Version>1.0.0</Version>
      <Authors>Nick Hodge</Authors>
      <Copyright>(c) 2014 Nick Hodge</Copyright>
      <Created>2014-01-19T03:00:41.393</Created>
      <Dependencies>Newtonsoft.Json::|Rx-Main::|Reactive.EventAggregator:1.1.0:|Microsoft.Net.Http:2.2.13:</Dependencies>
      <Description>My package description.</Description>
      <DownloadCount>445</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MooresCloudHolidayDotNet/1.0.0</GalleryDetailsUrl>
      <IconUrl>https://github.com/nickhodge/holidaydotnet/blob/master/Holiday/Holiday/Assets/AppIcon100x100.png?raw=true</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-AU</Language>
      <LastUpdated>2015-04-23T20:34:23.7</LastUpdated>
      <Published>2014-01-19T03:00:41.393</Published>
      <PackageHash>oEGQCKMSPBRzLcWiGuky96Di5mNy/0uY/JNIKq+3UaukQGAJIjH2nzNYrB/l3FDER7+pn8VDjWjjww/yrB+Mrw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11562</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MooresCloudHolidayDotNet/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>1.0.0 Initial version (PCL)</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>PCL (Portable Class Library) client for the MooresCloud Holiday

http://moorescloud.com/index.html#holiday</Summary>
      <Tags>holiday moorescloud rest client</Tags>
      <Title>MooresCloudHolidayDotNet</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MooresCloudHolidayDotNet/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/nickhodge/holidaydotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MooresCloudHolidayDotNet</Id>
      <Version>1.0.0.1</Version>
      <Authors>Nick Hodge</Authors>
      <Copyright>(c) 2014 Nick Hodge</Copyright>
      <Created>2014-01-19T03:15:38.887</Created>
      <Dependencies>Newtonsoft.Json::|Rx-Main::|Reactive.EventAggregator:1.1.0:|Microsoft.Net.Http:2.2.13:</Dependencies>
      <Description>My package description.</Description>
      <DownloadCount>445</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MooresCloudHolidayDotNet/1.0.0.1</GalleryDetailsUrl>
      <IconUrl>https://github.com/nickhodge/holidaydotnet/blob/master/Holiday/Holiday/Assets/AppIcon100x100.png?raw=true</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-AU</Language>
      <LastUpdated>2015-04-23T20:34:23.7</LastUpdated>
      <Published>2014-01-19T03:15:38.887</Published>
      <PackageHash>veAvbRqZi6azXB1THrJIpuGxLkQfMplmajcEDSxN7J/UdK3stfCU9FxbL6CYuanF88zX66qRz/2xTnQxjy7JUw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11586</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MooresCloudHolidayDotNet/1.0.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>1.0.0 Initial version (PCL)</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>PCL (Portable Class Library) client for the MooresCloud Holiday

http://moorescloud.com/index.html#holiday</Summary>
      <Tags>holiday moorescloud rest client</Tags>
      <Title>MooresCloudHolidayDotNet</Title>
      <VersionDownloadCount>312</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/nickhodge/holidaydotnet/blob/master/LICENSE.md</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MooresCloudHolidayDotNet/1.0.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/nickhodge/holidaydotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>1.0.0-beta11</Version>
      <Authors>Google.Api.Gax.Rest</Authors>
      <Copyright />
      <Created>2017-02-17T09:47:38.763</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta11, ):net45|Google.Apis.Auth:[1.20.0, ):net45|Google.Apis:[1.20.0, ):net45|Google.Api.Gax:[1.0.0-beta11, ):netstandard1.3|Google.Apis.Auth:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):netstandard1.3</Dependencies>
      <Description>Google.Api.Gax.Rest</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta11</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-17T09:47:38.763</LastUpdated>
      <Published>2017-02-17T09:47:38.763</Published>
      <PackageHash>Xtn2zx0rosgOXwEEzcL2VEAklSjvNCvfwH6/NRy1pNMDLQaJjJN3N0OaF95w6S/dPoUGwWmXkgLAehQ6RIHnhg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16385</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta11/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>366</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/1.0.0-beta11</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>1.0.0-beta12</Version>
      <Authors>Google.Api.Gax.Rest</Authors>
      <Copyright />
      <Created>2017-03-01T07:46:24.033</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta12, ):net45|Google.Apis.Auth:[1.20.0, ):net45|Google.Apis:[1.20.0, ):net45|Google.Api.Gax:[1.0.0-beta12, ):netstandard1.3|Google.Apis.Auth:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):netstandard1.3</Dependencies>
      <Description>Google.Api.Gax.Rest</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta12</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-01T07:46:24.033</LastUpdated>
      <Published>2017-03-01T07:46:24.033</Published>
      <PackageHash>kMAsK2rkR29nnMNpJVWhYx4PY/39RguVqNO5qsViJTf8fTobJWYKGV12eSGoZaBQilx5nv2I7rEyPPu52Gnapw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16369</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta12/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>4071</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/1.0.0-beta12</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>1.0.0-beta13</Version>
      <Authors>Google.Api.Gax.Rest</Authors>
      <Copyright />
      <Created>2017-03-21T11:31:11.433</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta13, ):net45|Google.Apis.Auth:[1.22.0, ):net45|Google.Apis:[1.22.0, ):net45|Google.Api.Gax:[1.0.0-beta13, ):netstandard1.3|Google.Apis.Auth:[1.22.0, ):netstandard1.3|Google.Apis:[1.22.0, ):netstandard1.3</Dependencies>
      <Description>Google.Api.Gax.Rest</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta13</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-21T11:31:11.433</LastUpdated>
      <Published>2017-03-21T11:31:11.433</Published>
      <PackageHash>MHSdha21nkVjUbLoB0fJCK2WPHmjPWlBgdvrtDwQBHlBm6sMHBK+a15WbXbEWLYV4zdpb8H5mC1k8NEx/OubNA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16467</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0-beta13/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>217</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/1.0.0-beta13</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>1.0.0</Version>
      <Authors>Google.Api.Gax.Rest</Authors>
      <Copyright />
      <Created>2017-03-30T12:53:01.47</Created>
      <Dependencies>Google.Api.Gax:[1.0.0, ):net45|Google.Apis:[1.24.0, ):net45|Google.Api.Gax:[1.0.0, ):netstandard1.3|Google.Apis:[1.24.0, ):netstandard1.3</Dependencies>
      <Description>Google.Api.Gax.Rest</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T12:53:01.47</LastUpdated>
      <Published>2017-03-30T12:53:01.47</Published>
      <PackageHash>C7Rbj4Bq/n93SRy2zSK5lTXJQaFEUyVHZpyvgCy8iQ5XFmwt+EdsR7neW3JKCttVjrt1H50omI9Qwww06vIgHg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16417</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>267</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>1.0.1</Version>
      <Authors>Google.Api.Gax.Rest</Authors>
      <Copyright />
      <Created>2017-03-30T15:46:43.91</Created>
      <Dependencies>Google.Api.Gax:[1.0.1, ):net45|Google.Apis:[1.24.1, ):net45|Google.Api.Gax:[1.0.1, ):netstandard1.3|Google.Apis:[1.24.1, ):netstandard1.3</Dependencies>
      <Description>Google.Api.Gax.Rest</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T15:46:43.91</LastUpdated>
      <Published>2017-03-30T15:46:43.91</Published>
      <PackageHash>ztminbJbVLuBBnud85poPcsNjubYgM243Gxu0jAHYe92ZLVJNhFM4FxglOO2ZQnKWaqjPL/ZFqhfKXcVYykAnw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16426</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>6631</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/1.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>2.0.0-beta01</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-22T11:42:58.03</Created>
      <Dependencies>Google.Api.Gax:[2.0.0-beta01, ):net45|Google.Apis.Auth:[1.25.0, ):net45|Google.Api.Gax:[2.0.0-beta01, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis.Auth:[1.25.0, ):netstandard1.3</Dependencies>
      <Description>Common Protocol Buffer messages for Google APIs</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0-beta01</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-22T11:42:58.03</LastUpdated>
      <Published>2017-05-22T11:42:58.03</Published>
      <PackageHash>2hFEEWwqNALcOT9iZwIeopbQler7YL3RGkhW2zCfwPokxy5PA3dqCFJsGSBzeDrXz2wsgmB0f5PDdUINyK5uiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21448</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0-beta01/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>1163</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/2.0.0-beta01</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>2.0.0-beta02</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-26T15:18:30.76</Created>
      <Dependencies>Google.Api.Gax:[2.0.0-beta02, ):net45|Google.Apis.Auth:[1.26.2, ):net45|Google.Api.Gax:[2.0.0-beta02, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis.Auth:[1.26.2, ):netstandard1.3</Dependencies>
      <Description>Common Protocol Buffer messages for Google APIs</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0-beta02</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-26T15:18:30.76</LastUpdated>
      <Published>2017-05-26T15:18:30.76</Published>
      <PackageHash>dE+hvXesbIu8CClrSh0oCbnM87Tk+b4X4HyAR1YriIQ0GJkz54DwqyiZ/O/K20ciGp3BrzgAXNAakPS9Rdzabg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21382</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0-beta02/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>503</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/2.0.0-beta02</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>2.0.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-22T09:30:12.843</Created>
      <Dependencies>Google.Api.Gax:[2.0.0, ):net45|Google.Apis.Auth:[1.27.1, ):net45|Google.Api.Gax:[2.0.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis.Auth:[1.27.1, ):netstandard1.3</Dependencies>
      <Description>Common Protocol Buffer messages for Google APIs</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T09:30:12.843</LastUpdated>
      <Published>2017-06-22T09:30:12.843</Published>
      <PackageHash>4cau89nvSxfe12brEWvpfU8GC1FNV8Mw/vwW/o8RjzFis43hiDeZ1DeUETAPwofyp5wlikCmULugYzhaW5Lugw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21329</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>2184</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/2.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Rest</Id>
      <Version>2.1.0-beta01</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-13T10:55:55.97</Created>
      <Dependencies>Google.Api.Gax:[2.1.0-beta01, ):net45|Google.Apis.Auth:[1.27.1, ):net45|Google.Api.Gax:[2.1.0-beta01, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis.Auth:[1.27.1, ):netstandard1.3</Dependencies>
      <Description>Common Protocol Buffer messages for Google APIs</Description>
      <DownloadCount>27941</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.1.0-beta01</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-13T10:55:55.97</LastUpdated>
      <Published>2017-07-13T10:55:55.97</Published>
      <PackageHash>MPMCh8m/e9vk+jdjhu9CSo6YH9fnaag5lGok0IxmmvaEVKdbGKX+1WsCuQBTzRNp864w/cdZ8VdFhJxF6tY93w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25265</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Rest/2.1.0-beta01/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Rest</Title>
      <VersionDownloadCount>418</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Rest/2.1.0-beta01</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta01</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-13T09:58:03.543</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta01, ):net45</Dependencies>
      <Description>Testing support for Google.Api.Gax</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta01</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-13T09:58:03.543</LastUpdated>
      <Published>2016-07-13T09:58:03.543</Published>
      <PackageHash>TK5PAog0FroE0n7kkTXXOx1Eo+qq3HFKjG9KVraafzcoE1bj4vyh8kkoHY/Hi3+PRkTrCBHOS4pQ4LakPo0ftQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>6845</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta01/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>86</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta01</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta02</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2016-09-12T11:32:36.36</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta02, ):net45</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta02</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-12T11:32:36.36</LastUpdated>
      <Published>2016-09-12T11:32:36.36</Published>
      <PackageHash>W66FuC352UP/OCotmLt37eUc6APmUy1M4dny3Z2Mii88+OfnTg6I2jrmrsi6bwcZoXm4Ar6ABvQjv3zJY4zD1Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>6843</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta02/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>312</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta02</DownloadUrl>
      <ProjectUrl>htttps://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta03</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2016-10-25T14:45:14.03</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta03, ):net45|Google.Api.Gax:[1.0.0-beta03, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta03</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-25T14:45:14.03</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>weRysFHLGl3UKHnEMTNWnAfmuUENZSNVm+JzlBMAQ32N/WnVzBED91XJTPG27S2p7Wl48VTkeHZY6/FBfDmVUQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17382</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta03/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>342</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta03</DownloadUrl>
      <ProjectUrl>htttps://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>2016-11-01T09:20:57.367</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta04</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2016-11-04T08:34:18.527</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta04, ):net45|Google.Api.Gax:[1.0.0-beta04, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta04</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-04T08:34:18.527</LastUpdated>
      <Published>2016-11-04T08:34:18.527</Published>
      <PackageHash>IvuToaGvFOE72MzTcuxpdFoFs28uIOWoPJxrfA8kCnqj1k4puaiUVb7ILeFG0/SaqOtY+xyPQTlNspEVTKFBOg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>16994</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta04/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>523</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta04</DownloadUrl>
      <ProjectUrl>htttps://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta05</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2016-12-02T14:49:42.827</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta05, ):net45|Google.Api.Gax:[1.0.0-beta05, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta05</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-02T14:49:42.827</LastUpdated>
      <Published>2016-12-02T14:49:42.827</Published>
      <PackageHash>G8EfOWVoMBBcKnbJ7lLRbGO50icJLpJikyDaCq+QaJLZLIue3vGtrwgR22lcENA0+2xPuzbULOhJbj6mE0sTZw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17668</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta05/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>298</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta05</DownloadUrl>
      <ProjectUrl>htttps://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta06</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2016-12-13T14:39:57.69</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta06, ):net45|Google.Api.Gax:[1.0.0-beta06, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta06</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-13T14:39:57.69</LastUpdated>
      <Published>2016-12-13T14:39:57.69</Published>
      <PackageHash>19ODXClc/BdddWgfpYeLXxMij5P/uCUcX6hONG31p5VabzJg0ApK/bmNkpv56iTfh1yiUS9u+gljKasdH9ohvA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17670</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta06/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>355</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta06</DownloadUrl>
      <ProjectUrl>htttps://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta07</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-01-24T15:19:39.39</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta07, ):net45|Google.Api.Gax:[1.0.0-beta07, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta07</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-24T15:19:39.39</LastUpdated>
      <Published>2017-01-24T15:19:39.39</Published>
      <PackageHash>sp+EtU/5SoZPeWNoLIeGcN19fxmVQqHkFch3yt3aShd0yz8SauruC2M8wYsxS2uyy4rTCe4ImCsSxAKcVBVAoA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17661</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta07/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>515</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta07</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta08</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-01-30T13:21:01.95</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta08, ):net45|Google.Api.Gax:[1.0.0-beta08, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta08</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-30T13:21:01.95</LastUpdated>
      <Published>2017-01-30T13:21:01.95</Published>
      <PackageHash>srkbbo8r+Smdolq+2eGjCxVIR9Z+eIUOduuiINKxjyxEjpytqzOmvlTkg7blsZ5pos2xPbB/Ikw50Kd2zL/cGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17661</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta08/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>47</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta08</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta09</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-02-03T11:43:58.69</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta09, ):net45|Google.Api.Gax:[1.0.0-beta09, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta09</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-03T11:43:58.69</LastUpdated>
      <Published>2017-02-03T11:43:58.69</Published>
      <PackageHash>mre/VF7MsP6sOUbMq86XZS7hU91ZFjr6nYT3CYjjvAUIjO9r0kkAMNuREvlf1sknxsbFng2wq6e5smwHLqMSQw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17659</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta09/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>365</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta09</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta10</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-02-16T14:58:03.913</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta10, ):net45|Google.Api.Gax:[1.0.0-beta10, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta10</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-16T14:58:03.913</LastUpdated>
      <Published>2017-02-16T14:58:03.913</Published>
      <PackageHash>PvXH8aQb5EYez+XwQn1ci7DMs2xKAzgHWeB3PY6fSPi1cwhiW2VdqHudrgVl+eJsYpDZeE2xgck2EiwTl2xnPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17660</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>64</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta10</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta11</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-02-17T09:47:48.42</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta11, ):net45|Google.Api.Gax:[1.0.0-beta11, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta11</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-17T09:47:48.42</LastUpdated>
      <Published>2017-02-17T09:47:48.42</Published>
      <PackageHash>d88oh/0fjcPK4FWJrLOTvkDvQ50W0dw4vayKXUoIUA5xJXnae5pgqubdfUvMdSeySGMyJhBZiBDPaU72CfVfQA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17662</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta11/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>275</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta11</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta12</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-03-01T07:46:35.88</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta12, ):net45|Google.Api.Gax:[1.0.0-beta12, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta12</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-01T07:46:35.88</LastUpdated>
      <Published>2017-03-01T07:46:35.88</Published>
      <PackageHash>b5Vd3edsk/6kGPiO5jpThTWxPsbu1VtwCi7DjV5oRKGstjka5D/P38ChK99LKKH08VahBXtMUD5IGmAgyK5UBw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17656</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta12/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>463</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta12</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0-beta13</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-03-21T11:31:22.2</Created>
      <Dependencies>Google.Api.Gax:[1.0.0-beta13, ):net45|Google.Api.Gax:[1.0.0-beta13, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta13</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-21T11:31:22.2</LastUpdated>
      <Published>2017-03-21T11:31:22.2</Published>
      <PackageHash>VIHzRG2hJMoQwOuubLX+VcntprND5asUHJ78UWIPAr7hynlMeyy/uaBFls4cp1dVa9Zo+/6BLHGndPPDp9V7xg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17658</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0-beta13/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>191</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0-beta13</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.0</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-03-30T12:53:11.733</Created>
      <Dependencies>Google.Api.Gax:[1.0.0, ):net45|Google.Api.Gax:[1.0.0, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T12:53:11.733</LastUpdated>
      <Published>2017-03-30T12:53:11.733</Published>
      <PackageHash>ZOgdBdvJXf+WV+WiNxjdRhz4cPtO5lP+s1LHAWwLr9kx01TWdBjokXpXmsMyFnc3jR+86Ba99ksAIAf/BSUoWg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17620</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>1.0.1</Version>
      <Authors>Google.Api.Gax.Testing</Authors>
      <Copyright />
      <Created>2017-03-30T15:46:54.003</Created>
      <Dependencies>Google.Api.Gax:[1.0.1, ):net45|Google.Api.Gax:[1.0.1, ):netstandard1.5</Dependencies>
      <Description>Google.Api.Gax.Testing</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T15:46:54.003</LastUpdated>
      <Published>2017-03-30T15:46:54.003</Published>
      <PackageHash>xaMpwB1pnMtTM2zuXOmJjM/Hloa2nDbpKv1+c/yet8a26pyRvuXt680dYq9mWVUp1KvFhybAcynZPLlk5Bp27Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>17622</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>588</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/1.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>2.0.0-beta01</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-22T11:43:08.343</Created>
      <Dependencies>Google.Api.Gax:[2.0.0-beta01, ):net45|Google.Api.Gax:[2.0.0-beta01, ):netstandard1.5|NETStandard.Library:[1.6.1, ):netstandard1.5</Dependencies>
      <Description>Testing support for Google.Api.Gax</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0-beta01</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-22T11:43:08.343</LastUpdated>
      <Published>2017-05-22T11:43:08.343</Published>
      <PackageHash>nKsfc1miYYGlDBhQQJxq1+2WbXczNZjA5yy1zjL4dl2K3tHDrGicjaUIo5wRRLhH5cf9gsnVHwmFN57Z8uPgEA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19238</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0-beta01/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>227</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/2.0.0-beta01</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>2.0.0-beta02</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-26T15:18:41.233</Created>
      <Dependencies>Google.Api.Gax:[2.0.0-beta02, ):net45|Google.Api.Gax:[2.0.0-beta02, ):netstandard1.5|NETStandard.Library:[1.6.1, ):netstandard1.5</Dependencies>
      <Description>Testing support for Google.Api.Gax</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0-beta02</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-26T15:18:41.233</LastUpdated>
      <Published>2017-05-26T15:18:41.233</Published>
      <PackageHash>JwNYg0XBPkPhSU0AEjh7vOjHUown5jrjxkhbT4zlP3CUOqurE8fGZdj5jyUHr6xQMwHiO3MWtuH5oRCZrCTqng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19392</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0-beta02/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>261</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/2.0.0-beta02</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>2.0.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-22T09:30:25.67</Created>
      <Dependencies>Google.Api.Gax:[2.0.0, ):net45|Google.Api.Gax:[2.0.0, ):netstandard1.5|NETStandard.Library:[1.6.1, ):netstandard1.5</Dependencies>
      <Description>Testing support for Google.Api.Gax</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T09:30:25.67</LastUpdated>
      <Published>2017-06-22T09:30:25.67</Published>
      <PackageHash>9+c+BRZtah7C6/XIyKQ2UIRdlvZcJ8Il3T7azik3F635hIyuNSFD1P81uvzi4iXC/H2ePe+mlpcj+RZmydt15g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19341</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>803</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/2.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Gax.Testing</Id>
      <Version>2.1.0-beta01</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-13T10:56:06.97</Created>
      <Dependencies>Google.Api.Gax:[2.1.0-beta01, ):net45|Google.Api.Gax:[2.1.0-beta01, ):netstandard1.5|NETStandard.Library:[1.6.1, ):netstandard1.5</Dependencies>
      <Description>Testing support for Google.Api.Gax</Description>
      <DownloadCount>6082</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.1.0-beta01</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-13T10:56:06.97</LastUpdated>
      <Published>2017-07-13T10:56:06.97</Published>
      <PackageHash>54dEaXZVR3SWvLV3v2I1120FJUnOQT/11bkfsNl5B92j8CYiCzLQuOLmmw2swahgD1pZ9SIJ5GwaBu++nzf4hQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22749</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Gax.Testing/2.1.0-beta01/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Api.Gax.Testing</Title>
      <VersionDownloadCount>323</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://developers.google.com/open-source/licenses/bsd</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Gax.Testing/2.1.0-beta01</DownloadUrl>
      <ProjectUrl>https://github.com/googleapis/gax-dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Maps.Service</Id>
      <Version>1.0</Version>
      <Authors>Evan Brandt</Authors>
      <Copyright>Copyright 2015</Copyright>
      <Created>2015-08-23T23:16:38.593</Created>
      <Dependencies>Newtonsoft.Json:6.0.4:</Dependencies>
      <Description>.NET library for hitting google maps api</Description>
      <DownloadCount>1464</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-23T23:16:38.593</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>FoyDOzaXDAsuFcTI87j6ng5bmD9UVADlV/MrLNaMyqVAem22Uf0fWk9OoLINiLiuDcui8efvmUWPAvTx+SxVmA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>18839</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>This is the first release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>gmaps api</Tags>
      <Title>Google.Api.Maps.Service</Title>
      <VersionDownloadCount>13</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Maps.Service/1.0.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2015-08-23T23:16:38.593</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Maps.Service</Id>
      <Version>1.1</Version>
      <Authors>Evan Brandt</Authors>
      <Copyright>Copyright 2015</Copyright>
      <Created>2015-08-24T18:55:09.897</Created>
      <Dependencies>Newtonsoft.Json:7.0.1:</Dependencies>
      <Description>.NET library for hitting google maps api</Description>
      <DownloadCount>1464</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-24T18:55:09.897</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>GnM4Sr0qGIXBPWZoly7hTnO07lbbWnhO+hyZLEf6HvuxoWJDYLGE5rv/jUyo2+qv0COp3l8lf0f56ef7HwcicQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19713</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added ability for nearby searches</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>gmaps api</Tags>
      <Title>Google.Api.Maps.Service</Title>
      <VersionDownloadCount>13</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Maps.Service/1.1.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2015-08-24T18:55:09.897</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Maps.Service</Id>
      <Version>1.1.2</Version>
      <Authors>Evan Brandt</Authors>
      <Copyright>Copyright 2015</Copyright>
      <Created>2015-08-27T04:33:47.773</Created>
      <Dependencies>Newtonsoft.Json:7.0.1:</Dependencies>
      <Description>.NET library for hitting google maps api</Description>
      <DownloadCount>1464</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-01T20:28:51.343</LastUpdated>
      <Published>2015-08-27T04:33:47.773</Published>
      <PackageHash>2+3l1CFj40nuNm87NL4U+gRA9z3QMsngfnLZYuGF3yIYaw99iF6off0Ox9exqnolKwj5thr4m9yv3+tGPsSQZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19820</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added vicinity field in results for nearby searches</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>gmaps api</Tags>
      <Title>Google.Api.Maps.Service</Title>
      <VersionDownloadCount>154</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Maps.Service/1.1.2</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Maps.Service</Id>
      <Version>1.1.3</Version>
      <Authors>Evan Brandt</Authors>
      <Copyright>Copyright 2015</Copyright>
      <Created>2015-09-01T20:28:51.343</Created>
      <Dependencies>Newtonsoft.Json:7.0.1:</Dependencies>
      <Description>.NET library for hitting google maps api</Description>
      <DownloadCount>1464</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-02T02:27:54.233</LastUpdated>
      <Published>2015-09-01T20:28:51.343</Published>
      <PackageHash>POBa8HW8ikFqtKl+iC60Xz7WUF9HyujsfJHtoVAti0WB/a62953emsD702/DQhXmA3UZh+T3rzcAw1klBAVEaw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20309</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added the option to specify rankby and place type for nearby searches</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>gmaps api</Tags>
      <Title>Google.Api.Maps.Service</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Maps.Service/1.1.3</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Api.Maps.Service</Id>
      <Version>1.1.4</Version>
      <Authors>Evan Brandt</Authors>
      <Copyright>Copyright 2015</Copyright>
      <Created>2015-09-02T02:27:54.233</Created>
      <Dependencies>Newtonsoft.Json:7.0.1:</Dependencies>
      <Description>.NET library for hitting google maps api</Description>
      <DownloadCount>1464</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.4</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-02T02:27:54.233</LastUpdated>
      <Published>2015-09-02T02:27:54.233</Published>
      <PackageHash>nRrgKLGHPikNux/BkJEbcmabRUE7uaKKI4LLLP0MQvUvglwFfv6OLfCjhUjYuhx69Vlfb5Ai+VInR5RDH4G1cA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20717</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Api.Maps.Service/1.1.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added name and keyword search option for nearby searches</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>gmaps api</Tags>
      <Title>Google.Api.Maps.Service</Title>
      <VersionDownloadCount>907</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Api.Maps.Service/1.1.4</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.2.4696.27637</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2012-11-17T16:48:43.673</Created>
      <Dependencies>Newtonsoft.Json:4.0.2:</Dependencies>
      <Description>Google APIs Client Library</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.27637</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:26:57.26</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>xke5zzzrUhoXUgXTk6erkdy4qZzHtVtov9JCgmg3rSe6LG3iilVT0fuRoNzlGHgQCVGt+iAbAXITNVds5aKjKw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>196643</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.27637/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>187</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.2.4696.27637</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.2.4696.25000</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2012-11-17T17:12:39.33</Created>
      <Dependencies>Newtonsoft.Json:4.0.2:</Dependencies>
      <Description>Google APIs Client Library</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.25000</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T11:23:09.6</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>CDUyAhWtG0X1wqCMiwD29LBHXBGGAGviFZof0oXGoEeKkM4XVNGR5izKXrBXeNrsq37ZQR6MDRQbYiY44IOSJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>675178</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.25000/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>352</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.2.4696.25000</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.2.4696.25002</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2012-11-17T17:26:59.55</Created>
      <Dependencies />
      <Description>Google APIs Client Library</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.25002</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T18:16:28.517</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>q3Vbx0UvCN4FhFbgR8xdlrtBOceRwGiWvKqWdY/m/0ndgLW7sp6QhZloC4VI2qfbo/911db1lysmfUtGEgkK4Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>899325</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.2.4696.25002/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>26643</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.2.4696.25002</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.2.4737.25316</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-02-27T23:04:19.287</Created>
      <Dependencies />
      <Description>Google APIs Client Library</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.2.4737.25316</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T07:40:12.567</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>0V4UDh+u3+Kh0mb29rzY2EsEs8mvcqq4B4NzEs87wdoLNUh9V3h86sz1efDxvFM9sPBEAjq53157jsydzL77pw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>688301</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.2.4737.25316/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>2092</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.2.4737.25316</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.3.0-beta15233</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-04-18T00:58:41.787</Created>
      <Dependencies />
      <Description>Google APIs Client Library (Contact me whenever new versions are available!)</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.3.0-beta15233</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-28T08:24:30.13</LastUpdated>
      <Published>2013-04-18T00:58:41.787</Published>
      <PackageHash>akq50kfdhDS9IrQRw0HxswNCr2Nbrmck3wERJU1wODouz1CjkLIVBxXYIXQRvUe7jnjnkmZuMO6Lplfi80ypQw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>688870</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.3.0-beta15233/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>767</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.3.0-beta15233</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.2.4737.25317</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-04-25T21:43:50.997</Created>
      <Dependencies>Newtonsoft.Json:(4.0, 5.0):</Dependencies>
      <Description>Google APIs Client Library</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.2.4737.25317</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T22:08:31.01</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Rxr1HgnEUxnfHSNA+DOJDwjrZR4bCneSe0AYxCuvef6TO3VTw0f1Kk5qW2aVH+xQBsTw/tCOLYsP2Oabf1Iqlw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>514071</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.2.4737.25317/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>3101</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.2.4737.25317</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.3.0-beta15234</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-04-25T21:50:42.343</Created>
      <Dependencies>Newtonsoft.Json:(4.0, 5.0):</Dependencies>
      <Description>Google APIs Client Library (Contact me whenever new versions are available!)</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.3.0-beta15234</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T13:35:13.71</LastUpdated>
      <Published>2013-04-25T21:50:42.343</Published>
      <PackageHash>dBrnzwpn3TmES/T0qTVrEc1/zCgGUGaUJ26cQeNPN0LLWEwclAvAPfAUb0alqaoymCjiXmuh6bWqPG19QrQh8A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>514646</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.3.0-beta15234/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google APIs Client Library</Summary>
      <Tags />
      <Title>Google.Apis</Title>
      <VersionDownloadCount>694</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.3.0-beta15234</DownloadUrl>
      <ProjectUrl>http://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.4.0-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-07-19T12:42:41.86</Created>
      <Dependencies>Newtonsoft.Json:5.0.5:|Microsoft.Bcl:1.0.19:|Microsoft.Bcl.Async:1.0.16:|Microsoft.Bcl.Build:1.0.7:|Microsoft.Net.Http:2.1.10:|Zlib.Portable:1.9.2:|Newtonsoft.Json:5.0.5:net40|Microsoft.Bcl:1.0.19:net40|Microsoft.Bcl.Async:1.0.16:net40|Microsoft.Bcl.Build:1.0.7:net40|Microsoft.Net.Http:2.1.10:net40|Zlib.Portable:1.9.2:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google Services. The library supports service requests, media upload and download, etc.</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.4.0-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:51:18.877</LastUpdated>
      <Published>2013-07-19T12:42:41.86</Published>
      <PackageHash>SfrjvghVbTkghMgjGgQ3If/TkUSDKYB2NCUqwX1u5K3mtwhpzUrx9e440ew1jjctiMGL2u5idPIucbLk8xGhuQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>242672</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.4.0-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>939</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.4.0-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.4.0.1-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-06T20:40:34.423</Created>
      <Dependencies>Newtonsoft.Json:5.0.5:|Microsoft.Bcl:1.0.19:|Microsoft.Bcl.Async:1.0.16:|Microsoft.Bcl.Build:1.0.7:|Microsoft.Net.Http:2.1.10:|Zlib.Portable:1.9.2:|Newtonsoft.Json:5.0.5:net40|Microsoft.Bcl:1.0.19:net40|Microsoft.Bcl.Async:1.0.16:net40|Microsoft.Bcl.Build:1.0.7:net40|Microsoft.Net.Http:2.1.10:net40|Zlib.Portable:1.9.2:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google Services. The library supports service requests, media upload and download, etc.</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.4.0.1-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-08-06T20:40:34.423</Published>
      <PackageHash>ntNIib7KnSUnM3AV3AHBUTa+NiG14sE8wqjfkVqs1ly6GiBn69X5R92kuznhCRZx34nNLjBavFAUkF/rTVKBmw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>290277</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.4.0.1-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>642</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.4.0.1-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.5.0-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-19T13:34:27.853</Created>
      <Dependencies>Newtonsoft.Json:5.0.5:|Microsoft.Bcl:1.0.19:|Microsoft.Bcl.Async:1.0.16:|Microsoft.Bcl.Build:1.0.7:|Microsoft.Net.Http:2.1.10:|Zlib.Portable:1.9.2:|Newtonsoft.Json:5.0.5:net40|Microsoft.Bcl:1.0.19:net40|Microsoft.Bcl.Async:1.0.16:net40|Microsoft.Bcl.Build:1.0.7:net40|Microsoft.Net.Http:2.1.10:net40|Zlib.Portable:1.9.2:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google Services. The library supports service requests, media upload and download, etc.</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.5.0-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T18:38:13.773</LastUpdated>
      <Published>2013-08-19T13:34:27.853</Published>
      <PackageHash>/CV56NUf9QWyulbl3pMeH2V5qZMuazY7YPzq0J5/llxykXBlf0N/ct8D029UZ9RowI3Iih46HycnxhJyU/tpRg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>203773</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.5.0-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>14652</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.5.0-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.6.0-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-23T19:52:46.497</Created>
      <Dependencies>Newtonsoft.Json:5.0.5:|Microsoft.Bcl:1.0.19:|Microsoft.Bcl.Async:1.0.16:|Microsoft.Bcl.Build:1.0.7:|Microsoft.Net.Http:2.1.10:|Zlib.Portable:1.9.2:|Newtonsoft.Json:5.0.5:net40|Microsoft.Bcl:1.0.19:net40|Microsoft.Bcl.Async:1.0.16:net40|Microsoft.Bcl.Build:1.0.7:net40|Microsoft.Net.Http:2.1.10:net40|Zlib.Portable:1.9.2:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:
          
          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.6.0-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-18T10:24:31.58</LastUpdated>
      <Published>2013-10-23T19:52:46.497</Published>
      <PackageHash>BII0w2V+AOeEsZDHTnWiznk+gOLV4nVVRhP//MdC+fNb24ACoW9GvOOVbtcTyfrAOgIsp9OeoDioQCDykxZGJg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>415742</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.6.0-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>9387</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.6.0-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.7.0-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-18T01:05:44.12</Created>
      <Dependencies>Google.Apis.Core:1.7.0-beta:|Google.Apis.Core:1.7.0-beta:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:
          
          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.7.0-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T16:02:21.567</LastUpdated>
      <Published>2013-12-18T01:05:44.12</Published>
      <PackageHash>5HyECY9xd2aK+h7u3wT2VWDnQQSid3BWz+BvS5Ymuh/5FxH6VAZwIXhbuyI6rpj7yQdWezdlSt0COtZufIzsIA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>316425</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.7.0-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>17347</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.7.0-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.8.0-rc</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-17T17:56:03.763</Created>
      <Dependencies>Google.Apis.Core:1.8.0-rc:|Google.Apis.Core:1.8.0-rc:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:
          
          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.8.0-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T13:50:28.867</LastUpdated>
      <Published>2014-02-17T17:56:03.763</Published>
      <PackageHash>1g8SSs1ESA7rjFymUzBg0El0xPaci1QqiF9jR6fkUf2TTmcGEe9DKpgIaqIs1nnYJALHTHCyiXKu5CByP4UiSw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>324161</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.8.0-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>4394</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.8.0-rc</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.8.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-03-17T14:30:58.6</Created>
      <Dependencies>Google.Apis.Core:1.8.1:|Google.Apis.Core:1.8.1:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:
          
          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.8.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T08:39:50.2</LastUpdated>
      <Published>2014-03-17T14:30:58.6</Published>
      <PackageHash>GqPiAL6vSnHw9Gkw3GHvTTjOAHNYWDS9s1FYbiRgTK8JGW9IP4yvEQrPN+O54YgWoBwVW/eSkAVy2JfjVKLcDQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>324050</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.8.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>51269</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.8.1</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.8.2</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-05-26T22:00:26.257</Created>
      <Dependencies>Google.Apis.Core:1.8.2:|Google.Apis.Core:1.8.2:net40|log4net:2.0.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:
          
          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.8.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-05T07:28:29.49</LastUpdated>
      <Published>2014-05-26T22:00:26.257</Published>
      <PackageHash>PBx+FxagcI5NuufeJowUV5Dru8BePNqqh453a+hQTtItXVZ0QIKl2SD7PFFQ7uek92nJKol+okpxANs/wxef1w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>260302</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.8.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>31270</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.8.2</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.9.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-30T16:02:57.403</Created>
      <Dependencies>Google.Apis.Core:1.9.0:|Zlib.Portable:1.10.0:|Google.Apis.Core:1.9.0:net40|log4net:2.0.3:net40|Zlib.Portable:1.10.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.9.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:08:11.913</LastUpdated>
      <Published>2014-09-30T16:02:57.403</Published>
      <PackageHash>krcgABgv73pwVbqJ6dKf7Cigq8EP/dxq5rG/63EWeZKidOx4gWxhVLWUekDDaDw4JQDR26rmibtu8QqNmIWdEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>258230</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.9.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>135865</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.9.0</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.9.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-12-29T16:57:54.53</Created>
      <Dependencies>Google.Apis.Core:1.9.1:|Zlib.Portable:1.10.0:|Google.Apis.Core:1.9.1:net40|log4net:2.0.3:net40|Zlib.Portable:1.10.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.9.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-23T07:40:14.767</LastUpdated>
      <Published>2014-12-29T16:57:54.53</Published>
      <PackageHash>/FO4+JYM33rrn5jhjE5rWDLcWIR7TswajVT3xtDup1n8q1B8HVrSqeYIeq4pBpygPa1N2lIMcgW7x24fi3O2YQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>319650</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.9.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>86134</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.9.1</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/wiki/ReleaseNotes#Version_1.9.1</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.9.2</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-07-23T03:58:07.43</Created>
      <Dependencies>Google.Apis.Core:1.9.2:|Zlib.Portable.Signed:1.11.0:|Google.Apis.Core:1.9.2:net40|log4net:2.0.3:net40|Zlib.Portable.Signed:1.11.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.9.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:15:27.047</LastUpdated>
      <Published>2015-07-23T03:58:07.43</Published>
      <PackageHash>ZyqH+Ottza2Y1YLr75QkKr3thaNVpsCEQZV5iwYW1/Hp7Vc1S7w3Y5uNuGyYN8oY+JQw6FEZvFECS2t3DEcCVA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>323789</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.9.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>83743</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.9.2</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.9.3</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-08-12T03:01:30.75</Created>
      <Dependencies>Google.Apis.Core:1.9.3:|Zlib.Portable.Signed:1.11.0:|Google.Apis.Core:1.9.3:net40|log4net:2.0.3:net40|Zlib.Portable.Signed:1.11.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.9.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:15:27.047</LastUpdated>
      <Published>2015-08-12T03:01:30.75</Published>
      <PackageHash>Gzvc6fg3SG13trk80wIKKWWzG5dcmgmOpFtiM9y2b8VugzYQOkRZtmViskhAAGwfdW1webHCdJlJv4Lva0yLBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>322596</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.9.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>42782</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.9.3</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet/</ProjectUrl>
      <LastEdited>2015-10-09T16:02:01.917</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.10.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-12-15T22:54:16.33</Created>
      <Dependencies>Google.Apis.Core:1.10.0:|Zlib.Portable.Signed:1.11.0:|Google.Apis.Core:1.10.0:net40|log4net:2.0.3:net40|Zlib.Portable.Signed:1.11.0:net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.10.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-15T22:54:16.33</LastUpdated>
      <Published>2015-12-15T22:54:16.33</Published>
      <PackageHash>G/7MafCPv1H8ahwZ52nQHS9OOHkdpViKNmJ2qfllZMxPnHpZpQxv6HXHdr51UfY39MfCjVRmcc5YzGUWD80Jsw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>330971</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.10.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>126838</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.10.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.10.1-rc1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-07T08:24:48.847</Created>
      <Dependencies>Google.Apis.Core:[1.10.1-rc1, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.10.1-rc1, ):net40|log4net:[2.0.3, ):net40|Zlib.Portable.Signed:[1.11.0, ):net40</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.10.1-rc1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-07T08:24:48.847</LastUpdated>
      <Published>2016-03-07T08:24:48.847</Published>
      <PackageHash>0X4aC7JSQHuKYgKE8slVwbHvXTlywC4Hs12TDGkZM4hkWpIPhNAhuyBYHpn8lUkOMGDnoQSYucxT7bGgmQSQbg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>426886</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.10.1-rc1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>633</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.10.1-rc1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.11.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-18T20:52:20.207</Created>
      <Dependencies>Google.Apis.Core:[1.11.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.11.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.11.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-18T20:52:20.207</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>/congb8c7jFAQ1p5SbJN4m3HkuKx/RVLu4q6F/2gfGJic92wkT61bj2/kTKN3ZM1o0xjYyXU1bBbnOM8wOo1Hw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>356047</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.11.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>1886</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.11.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2016-03-22T22:32:21.21</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.11.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-22T22:07:12.79</Created>
      <Dependencies>Google.Apis.Core:[1.11.1, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.11.1, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.11.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-22T22:07:12.79</LastUpdated>
      <Published>2016-03-22T22:07:12.79</Published>
      <PackageHash>GyWdeflVhu01TYh/KOoMceFYy4rc3+uGKFFw17PpABfdRM1wqCiO73asytkcMGUS91GjPwcONZF5UIjDKpeUSQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>355847</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.11.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>42300</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.11.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.13.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-12T13:35:14.633</Created>
      <Dependencies>Google.Apis.Core:[1.13.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.13.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.13.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-12T13:35:14.633</LastUpdated>
      <Published>2016-05-12T13:35:14.633</Published>
      <PackageHash>OgidHRz9S0letpAMu4RhRppOLirjzHuXtmFDyFhz8QfTmdel6UOqRDqMVly8wVEJEF0L0lz3hpEDd7f8CY0aFw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>362010</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.13.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>19940</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.13.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.13.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-31T10:20:02.493</Created>
      <Dependencies>Google.Apis.Core:[1.13.1, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.13.1, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.13.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-31T10:20:02.493</LastUpdated>
      <Published>2016-05-31T10:20:02.493</Published>
      <PackageHash>ZuMIgXI41bNfqyjlecP0+QinIV2716caw0u2iG8CX6EXwy/TMT8KZ9kBdUPe9j3Z708JZUMEI8BkR2SCkgchCw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>362000</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.13.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>32305</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.13.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.14.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-05T09:09:21.543</Created>
      <Dependencies>Google.Apis.Core:[1.14.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.14.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.14.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-05T09:09:21.543</LastUpdated>
      <Published>2016-07-05T09:09:21.543</Published>
      <PackageHash>xaOjRZ84LLfr31b5hEnslynuH4kZO4tg8aKE7cIwx+eOOmk7lqmIK/IkzETgFvt6fIYkXDalu2PxrLWwDRgoHg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>372325</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.14.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>26039</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.14.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.14.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-28T15:24:52.323</Created>
      <Dependencies>Google.Apis.Core:[1.14.1, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.14.1, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.14.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-28T15:24:52.323</LastUpdated>
      <Published>2016-07-28T15:24:52.323</Published>
      <PackageHash>PKF9uCgmZVE3orZD7iZxapLVvdtQaK2Ok2iAXB3cPSsF4CCkSBlZrE34wehl7A13ydAlOIo8C36ok3/HdcbsLw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371924</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.14.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>6803</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.14.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.15.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-04T15:18:14.29</Created>
      <Dependencies>Google.Apis.Core:[1.15.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.15.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.15.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5
		  
		  - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.15.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-04T15:18:14.29</LastUpdated>
      <Published>2016-08-04T15:18:14.29</Published>
      <PackageHash>B//vbZgUsR0jdJztCJ0ORmVcAzhoiisIsxwc1libVjoZzu+kxUKNJKUl5Wlkj7V28kauS56y3hJUj3FMsgaJZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>439181</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.15.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>31446</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.15.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.16.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-22T11:28:52.92</Created>
      <Dependencies>Google.Apis.Core:[1.16.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.16.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.16.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5
		  
		  - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.16.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T11:28:52.92</LastUpdated>
      <Published>2016-08-22T11:28:52.92</Published>
      <PackageHash>/p657K7J7p9aRl6QxUjQfNK0AobxnLHwDWdSqAr/17lZeQR+XMuEbIy7No80+zDeS39kKrRVWFlu1vHiws7gRQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>439501</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.16.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>124920</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.16.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.17.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-12T10:06:04.793</Created>
      <Dependencies>Google.Apis.Core:[1.17.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.17.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.17.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5
		  
		  - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.17.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-12T10:06:04.793</LastUpdated>
      <Published>2016-10-12T10:06:04.793</Published>
      <PackageHash>HJvgXrV9jebBwJHHVg68BLM0FBIItqgsdQ3VWnE6+MxCNxH2z/Pm1fg99Vha5U9G0dp3G6DmbqGDEoxIF4YrLQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>439250</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.17.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>32419</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.17.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.18.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-24T16:21:55.013</Created>
      <Dependencies>Google.Apis.Core:[1.18.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.18.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.18.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.18.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-24T16:21:55.013</LastUpdated>
      <Published>2016-10-24T16:21:55.013</Published>
      <PackageHash>qfqrjeIhr6QEANAA3qARmPPgWhVsYv74g3j9z+J5QiZs1IoS9341lPbzNM+xzhCMenLcsPI8H8LLyRGTh8aypA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>438681</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.18.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>15776</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.18.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.19.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-11-07T16:46:18.18</Created>
      <Dependencies>Google.Apis.Core:[1.19.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.19.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.19.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.19.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-07T16:46:18.18</LastUpdated>
      <Published>2016-11-07T16:46:18.18</Published>
      <PackageHash>CeERYPdAIG4mU2K9xwJATP3ff3raTnVt23cUtcfkGkiZE5hsVtQVrkon15jKpArqJBKtXzu17f8K4ChSAiooPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>438393</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.19.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>96842</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.19.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.20.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-12-13T14:06:09.727</Created>
      <Dependencies>Google.Apis.Core:[1.20.0, ):|Zlib.Portable.Signed:[1.11.0, ):|log4net:[2.0.3, ):net45|Google.Apis.Core:[1.20.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.20.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.20.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-13T14:06:09.727</LastUpdated>
      <Published>2016-12-13T14:06:09.727</Published>
      <PackageHash>zoJM6/lIsnhtpTV7six6S67zQ2BNEKZlzP/bZLC0eOHygatNWzDRxRPW4xONG5a8yEh7pr/3Mj1GDUoDIX5VHw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>443059</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.20.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>131381</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.20.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.21.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-02-09T10:25:21.073</Created>
      <Dependencies>Google.Apis.Core:[1.21.0, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.21.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.21.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.21.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-09T10:25:21.073</LastUpdated>
      <Published>2017-02-09T10:25:21.073</Published>
      <PackageHash>ZcWP3H65G7kW2URxDlGXcpeQNMQEFEp1/LPKlKlvgQKPAJeqWE7KCgqVW+0P06c791rbiXUAjFS/6q6Gzg+2Mg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>458350</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.21.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>84550</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.21.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.22.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-15T10:08:23.463</Created>
      <Dependencies>Google.Apis.Core:[1.22.0, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.22.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.22.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.IO:[4.1.0, ):netstandard1.3|System.IO.Compression:[4.1.0, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Net.Http:[4.1.0, ):netstandard1.3|System.Net.Primitives:[4.0.11, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.Encoding:[4.0.11, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.22.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-15T10:08:23.463</LastUpdated>
      <Published>2017-03-15T10:08:23.463</Published>
      <PackageHash>oWfCuzFDLBMYBE4tgGxcROsUzmnA8ycPbb9B8pJFT/0c6bz0hH4DCjUFLsqglE/g6Xc1akeC9Y1MLWW5EzPGig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>458676</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.22.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>10966</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.22.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.23.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-27T14:39:39.65</Created>
      <Dependencies>Google.Apis.Core:[1.23.0, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.23.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.23.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.23.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-27T14:39:39.65</LastUpdated>
      <Published>2017-03-27T14:39:39.65</Published>
      <PackageHash>p7KIlAaRYSe/Ub1fnamEXsXL1DlD4Id6encrT1t6bUToq2KeBvBa/ttzuAudH1KQfIWUg4qFeCmXSPU3IMHf1Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>466059</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.23.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>3066</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.23.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.24.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T09:41:18.173</Created>
      <Dependencies>Google.Apis.Core:[1.24.0, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.24.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.24.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.24.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T09:41:18.173</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>mPTRcTcZaHOxDh/F3HT4WSz336kLcdg0wbfqmL2/5t/ZRg7rhzwAwnJiD5skEo+3K9ydh4h5jVIaUdvy0NtJOg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>469454</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.24.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>348</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.24.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-03-30T17:52:21.107</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.24.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T14:46:47.013</Created>
      <Dependencies>Google.Apis.Core:[1.24.1, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.24.1, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.24.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.24.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T14:46:47.013</LastUpdated>
      <Published>2017-03-30T14:46:47.013</Published>
      <PackageHash>IotbJlX3qTthN3Z3HdtnzV81CkWUi5iFAKlZUqM0tEz5XYfm0rsieCIn5xGgemcrJ2NAQSrDVmcu4u2AHXS1uQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>470060</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.24.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>21790</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.24.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.25.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-04-10T08:29:26.98</Created>
      <Dependencies>Google.Apis.Core:[1.25.0, ):|Zlib.Portable.Signed:[1.11.0, ):|Google.Apis.Core:[1.25.0, ):net45|Zlib.Portable.Signed:[1.11.0, ):net45|Google.Apis.Core:[1.25.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
          The library supports service requests, media upload and download, etc.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.25.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-10T08:29:26.98</LastUpdated>
      <Published>2017-04-10T08:29:26.98</Published>
      <PackageHash>6F8TcXVYS1dGSC7m4fQsf7wk7TlVmZV6qyMN3e0HIQHOdXOHNvmvMmI7hEOxfKX7xFKakUC98zxhS9j6GLDpwQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>469358</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.25.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>48168</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.25.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.26.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-23T12:50:36.14</Created>
      <Dependencies>Google.Apis.Core:[1.26.0, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.26.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.26.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-23T12:50:36.14</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Xavlpk7t854mYgJVQpjHAEDAIfLu5+Mmb+pqFW3TBKZ75IXNMnshLSxYsdiL2aW+q/aT6JaPGH9p7+LDygd9MQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94128</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.26.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>60</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.26.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-05-23T13:11:51.433</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.26.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-23T13:35:15.99</Created>
      <Dependencies>Google.Apis.Core:[1.26.1, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.26.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.26.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-23T13:35:15.99</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>+k8mIepOg40wdtsFcw0i3vM1rFUkeRAVrNGjnQ4l3KKH15fRTska6Xz0nNCzPHOBunzKQNKJHyc75gVplbPu8A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94162</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.26.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>101</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.26.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-05-23T15:05:02.813</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.26.2</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-24T09:05:25.403</Created>
      <Dependencies>Google.Apis.Core:[1.26.2, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.26.2, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.26.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-24T09:05:25.403</LastUpdated>
      <Published>2017-05-24T09:05:25.403</Published>
      <PackageHash>mdzMvh9h+yHuYuBvQgaxHDg3tyJiUYYZ7dwtGk+ZV+23GTa3QJ1XgtgOqSbKzxaAmtM61zJQc3AwATDo7KhEMA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94247</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.26.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>9475</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.26.2</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.27.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-01T12:17:26.823</Created>
      <Dependencies>Google.Apis.Core:[1.27.0, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.27.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3, providing .NET Core support</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.27.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-01T12:17:26.823</LastUpdated>
      <Published>2017-06-01T12:17:26.823</Published>
      <PackageHash>0+eu4zNKw6PFSKbpnKz1Mxe7hYJtKQxWTdwq2u+6okcZ0jR92vV4kEUjwJ1VHLtq1+M0WoVicb3mEcaXTWG4cQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>95132</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.27.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>4893</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.27.0</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.27.1</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-06T19:19:27.8</Created>
      <Dependencies>Google.Apis.Core:[1.27.1, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.27.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3, providing .NET Core support</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.27.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-06T19:19:27.8</LastUpdated>
      <Published>2017-06-06T19:19:27.8</Published>
      <PackageHash>77sCsw6yMLeXwefMifiwV/4c4JJDXE5QHQOEFSEidLXt3X44JNhELcjmy/dqEg5ZyvW06VKPQ5hgBOS7vnFBvg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>95026</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.27.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>28642</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.27.1</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis</Id>
      <Version>1.28.0</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-19T10:02:56.093</Created>
      <Dependencies>Google.Apis.Core:[1.28.0, ):net45|System.Net.Http:[4.3.1, ):net45|Newtonsoft.Json:[10.0.2, ):net45|Google.Apis.Core:[1.28.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.3|System.Net.Http:[4.3.1, ):netstandard1.3|Newtonsoft.Json:[10.0.2, ):netstandard1.3|System.Reflection.TypeExtensions:[4.3.0, ):netstandard1.3</Dependencies>
      <Description>The Google APIs Client Library is a runtime client for working with Google services.
The library supports service requests, media upload and download, etc.
    
Supported Platforms:
- .NET Framework 4.5+
- NetStandard1.3, providing .NET Core support</Description>
      <DownloadCount>1415983</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis/1.28.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-19T10:02:56.093</LastUpdated>
      <Published>2017-07-19T10:02:56.093</Published>
      <PackageHash>2Hy0evlOnejdbY3o3H7QE0GVnF/dmLQ+Xoy/dfp0smGXDKSNEJhhBPB7LPBF9Ur+QTMvqriY1eifmpC0lr79WQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>95538</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis/1.28.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis</Title>
      <VersionDownloadCount>2136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis/1.28.0</DownloadUrl>
      <ProjectUrl>https://github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.AbusereportingPa.v1</Id>
      <Version>1.9.2.10</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-09-03T17:54:03.34</Created>
      <Dependencies>Google.Apis:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with AbusereportingPa v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/abusereporting_pa/v1

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/abusereporting_pa/v1/csharp</Description>
      <DownloadCount>222</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.AbusereportingPa.v1/1.9.2.10</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-03T17:54:03.34</LastUpdated>
      <Published>2015-09-03T17:54:03.34</Published>
      <PackageHash>uXa8RUWYfn9LLMWo0PwShbuorhJhPHkzeK+/Xrqa4F5POcsw5qyLCQcUBmM7Wo0qHpbLLx5t1DMgBBxJn8W3zA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19588</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.AbusereportingPa.v1/1.9.2.10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.AbusereportingPa.v1</Title>
      <VersionDownloadCount>222</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.AbusereportingPa.v1/1.9.2.10</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.13.0.503</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-24T07:36:27.467</Created>
      <Dependencies>Google.Apis:[1.13.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.0.503</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-24T07:36:27.467</LastUpdated>
      <Published>2016-05-24T07:36:27.467</Published>
      <PackageHash>HqqHiKjNyOZtijmoyKqM+BGbniAdOsc9IepRxlv1b9Iuw59S2C9zxwHALjIwvG9IJGdcGncjiybENX8Gn07W1A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29723</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.0.503/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>88</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.13.0.503</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.13.1.509</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-31T10:45:37.413</Created>
      <Dependencies>Google.Apis:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.509</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-31T10:45:37.413</LastUpdated>
      <Published>2016-05-31T10:45:37.413</Published>
      <PackageHash>fHL69FAAzWhow4SbuKGw9ip1/TU75ZHIYTX2GgSwuWmGrcU5OqJ821sbNdCxWV6+LcihYbWTvHXT5KszMYoiEg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29713</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.509/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>86</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.509</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.13.1.532</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-06-21T07:35:45.61</Created>
      <Dependencies>Google.Apis:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.532</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-21T07:35:45.61</LastUpdated>
      <Published>2016-06-21T07:35:45.61</Published>
      <PackageHash>vZtR2YQ5fJw1CPkCv549Z7pz4v2iT97lUj7vW9yGmsNTwCCkku4hQhcw/no1hFWHhjzhWzWoFFpzuEowcYwrJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30035</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.532/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.532</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.13.1.537</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-06-28T08:49:11.813</Created>
      <Dependencies>Google.Apis:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.537</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-28T08:49:11.813</LastUpdated>
      <Published>2016-06-28T08:49:11.813</Published>
      <PackageHash>vrFpY+dxcC5CAAPjCcq/PAUeOUrHk263N7AhzRVzVw7mabZih3wdT3XoYZl5LHXWthTVisUEYma/yXBXXLwEWA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30063</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.537/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.13.1.537</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.14.0.537</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-05T13:43:58.457</Created>
      <Dependencies>Google.Apis:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.537</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-05T13:43:58.457</LastUpdated>
      <Published>2016-07-05T13:43:58.457</Published>
      <PackageHash>MRBJVmnnmhS8sftuUBbyvUx+J4dfPdJlDWETZk0Ee98rx5zNl4vPFGZE1B7siRUa1BhiBGdYvwHsPNO3ewPKSw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30102</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.537/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>91</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.537</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.14.0.568</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-25T08:08:30.813</Created>
      <Dependencies>Google.Apis:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.568</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-25T08:08:30.813</LastUpdated>
      <Published>2016-07-25T08:08:30.813</Published>
      <PackageHash>EJMzRRAhk4Vvo+T/h7ngEHlv/VSWHZ3nfq3uSLyIVm9CnsUKG8uGde8PJ+COu2X9d+YFxx8Xfq6TQfKtS0/lJQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30084</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.568/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>88</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.14.0.568</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.14.1.568</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-28T15:37:35.23</Created>
      <Dependencies>Google.Apis:[1.14.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.568</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-28T15:37:35.23</LastUpdated>
      <Published>2016-07-28T15:37:35.23</Published>
      <PackageHash>HlTC6+JxBXN7/oRKh/8FYXJ5SBLl0wwNllW/TwkRd+2WqX3YWgqmRCS8qIKqAjfNIulXQZpMwS//S6h8EezMCA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30107</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.568/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>76</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.568</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.14.1.574</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-01T08:08:40.753</Created>
      <Dependencies>Google.Apis:[1.14.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.574</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-01T08:08:40.753</LastUpdated>
      <Published>2016-08-01T08:08:40.753</Published>
      <PackageHash>/QluwQinHENPiSSWzkpScSPt38IzGrTYavokecTIQihKoYkOb0vuk6rcSk+CZk0X8rMiKSzBoMX2dCQ5+cNUng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30065</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.574/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.14.1.574</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.15.0.574</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-04T16:43:23.507</Created>
      <Dependencies>Google.Apis:[1.15.0, ):netstandard1.3|Google.Apis:[1.15.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.574</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-04T16:43:23.507</LastUpdated>
      <Published>2016-08-04T16:43:23.507</Published>
      <PackageHash>eTIJfmKu8ncrpyxHbBMIMPBWAouTRZn6uhWrFMXFrdI+M5gbwPyjzjpksan4icMQRz6J7aRmUF5SG7sLfuMBaQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43376</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.574/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.574</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.15.0.586</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-10T08:16:00.807</Created>
      <Dependencies>Google.Apis:[1.15.0, ):netstandard1.3|Google.Apis:[1.15.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.586</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-10T08:16:00.807</LastUpdated>
      <Published>2016-08-10T08:16:00.807</Published>
      <PackageHash>9pbDmhgjwbwzUmG/sF2F4aJDjrmzWUafu3/dJaSAj1cJNJrKKLJo8lluiSzuU3x+o/mFs0U9VUdG9tblt0m9Rw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43413</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.586/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>76</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.15.0.586</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.16.0.586</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-22T12:59:12.53</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.586</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T12:59:12.53</LastUpdated>
      <Published>2016-08-22T12:59:12.53</Published>
      <PackageHash>hGPetXkIvMniifmbmvnl61rwclQ6f8wjsAWgPBk1VbgqeGUZsYQ1WI7eBXtvh+ZOR1IACcrEIs0FQ+MY1prRJQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43745</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.586/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.586</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.16.0.608</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-09-01T08:21:16.317</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.608</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-01T08:21:16.317</LastUpdated>
      <Published>2016-09-01T08:21:16.317</Published>
      <PackageHash>mEQ1cNhXdNywXKGFEPFIyklDH0chLf/3niVQEu20mwFW/pVQyjXV0FzUcX+xsH6cKikzUclNMER/VQxs+ecvxg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43756</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.608/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.608</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.16.0.615</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-09-08T08:21:39.86</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.615</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-08T08:21:39.86</LastUpdated>
      <Published>2016-09-08T08:21:39.86</Published>
      <PackageHash>WbLwW1ohRPQU/fmhfn1BsK0g31fOUvKTRSQmdh/bMIB+YzBxGGJQXk8BKKBjxM+JruTb2fPmpZhJ9wLw71e8mg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43755</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.615/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.615</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.16.0.636</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-09-29T08:18:57.423</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.636</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-29T08:18:57.423</LastUpdated>
      <Published>2016-09-29T08:18:57.423</Published>
      <PackageHash>nR88lkVXD0GYwjze7JDk9QPkZuuVpcq3ccrtSdVFjyJpsrgQgZMu9cv+b3NruOMw+c2PG9pvK1w6fOxLh+2SIw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43750</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.636/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.16.0.636</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.17.0.636</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-12T10:55:34.107</Created>
      <Dependencies>Google.Apis:[1.17.0, ):netstandard1.3|Google.Apis:[1.17.0, ):net45|Google.Apis:[1.17.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5+

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.17.0.636</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-12T10:55:34.107</LastUpdated>
      <Published>2016-10-12T10:55:34.107</Published>
      <PackageHash>MNEsBEZ+6bl+6zIB48HpPOWQFAJaTy3mldH7QeGfMtDIQ0zmRmxHMuFjJCBV5jJjny/uNyDBxKq2kcZP+kj07Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57316</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.17.0.636/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>72</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.17.0.636</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.18.0.636</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-24T17:34:04.787</Created>
      <Dependencies>Google.Apis:[1.18.0, ):netstandard1.3|Google.Apis:[1.18.0, ):net45|Google.Apis:[1.18.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.18.0.636</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-24T17:34:04.787</LastUpdated>
      <Published>2016-10-24T17:34:04.787</Published>
      <PackageHash>zcDHZdxtUiWKESI17szOqU0mb9422fVPyxK9dCSaoatIiqL2yhImzrd6hhaP00CpFnJVtiTi9C8YPcdyO8p6MQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57337</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.18.0.636/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.18.0.636</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.19.0.636</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-11-08T08:22:06.553</Created>
      <Dependencies>Google.Apis:[1.19.0, ):netstandard1.3|Google.Apis:[1.19.0, ):net45|Google.Apis:[1.19.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.636</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-08T08:22:06.553</LastUpdated>
      <Published>2016-11-08T08:22:06.553</Published>
      <PackageHash>ZdWrmdaKy3NXkHINLNY1nBEGYJb604nXTv7b4dV5fPNdNcsC8cnQ8GN/UISvQlPjmvrhhbQFOaHQma4DawxIdA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57322</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.636/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.636</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.19.0.706</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-12-08T08:22:28.093</Created>
      <Dependencies>Google.Apis:[1.19.0, ):netstandard1.3|Google.Apis:[1.19.0, ):net45|Google.Apis:[1.19.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.706</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-08T08:22:28.093</LastUpdated>
      <Published>2016-12-08T08:22:28.093</Published>
      <PackageHash>zehzTEZW0ADl8bNaUhJDWVqg1SI+zWJ5ienfarkDVUUxmLm3HjFeAKMpFo8l1r4s81zUACG/jnFkT+msLHPvag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57310</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.706/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>70</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.706</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.19.0.711</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-12-13T08:21:02.92</Created>
      <Dependencies>Google.Apis:[1.19.0, ):netstandard1.3|Google.Apis:[1.19.0, ):net45|Google.Apis:[1.19.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.711</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-13T08:21:02.92</LastUpdated>
      <Published>2016-12-13T08:21:02.92</Published>
      <PackageHash>B6yG0JBidH5QOQrD93gxOWN28gSPeefySmnIl3/sX4bL6+uG7Q3g1Xcp4jcW+8t5+ka4DKpXYkS0bZVJyQTF5g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57323</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.711/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>70</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.19.0.711</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.20.0.712</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-12-14T08:21:39.767</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.712</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-14T08:21:39.767</LastUpdated>
      <Published>2016-12-14T08:21:39.767</Published>
      <PackageHash>LTfyj9Wc1J/7qy73jiEYPSlGtaRSZghYz+GiqfOLsPxUD3vipSEcXXdImna4rQ5+nOFDNo129YIb4GwJtZ5mJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57313</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.712/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>77</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.712</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.20.0.749</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-01-23T08:23:15.59</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.749</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-23T08:23:15.59</LastUpdated>
      <Published>2017-01-23T08:23:15.59</Published>
      <PackageHash>BGHWYItzok/Y8XAZWjjSusxVT7QSSLrlv7h98W0x5moF2RhK8LkzJK4heiDzOq+8VnOv1fwXnBG6vUXfIf1gSQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57310</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.749/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>61</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.749</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.0.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-19T02:22:52.527</Created>
      <Dependencies>EasyMigrator.Core:[1.0.0, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-19T02:22:52.527</LastUpdated>
      <Published>2017-03-19T02:22:52.527</Published>
      <PackageHash>c8ixbUg7KlFlF55ItUXE2dxg9zX0OEfeVuVmZdJBp7D0RqKhKtmE0+Sf9DX82FZGrseRp/InI7/HoHrGi+3j2Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23606</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>17</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.0</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.1.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-21T01:48:53.02</Created>
      <Dependencies>EasyMigrator.Core:[1.0.1, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-21T01:48:53.02</LastUpdated>
      <Published>2017-03-21T01:48:53.02</Published>
      <PackageHash>dDKoL17uc+tg2Xv1TCITEPdVC+r+ano9u2fkpUGClscKw4wL1gU6HbJ+/Bm1an8WP9hEYL+Hb62MF1lmeXCTzg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23613</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>14</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.1</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.2.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-21T06:21:16.5</Created>
      <Dependencies>EasyMigrator.Core:[1.0.2, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-21T06:21:16.5</LastUpdated>
      <Published>2017-03-21T06:21:16.5</Published>
      <PackageHash>c4e1U589AI+Dsp6wY55hNkLwubn38ZndlLros52VpkDJi50c6jgs2wTJmPkB7eVGS3tGx9VB+5SHGYVIgtSDDw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23617</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>12</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.2</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.3.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-21T20:10:45.617</Created>
      <Dependencies>EasyMigrator.Core:[1.0.3, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T04:01:30.68</LastUpdated>
      <Published>2017-03-21T20:10:45.617</Published>
      <PackageHash>H/uflo4H0xQ1gut/v1TiF8B/nVMnZFYpYShU+cQGQuegR2juAPrblnvA3/Anjdenkh+k6F+kcNBifnyDAHsa7g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23616</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>6</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.3</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.4.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-23T04:01:29.147</Created>
      <Dependencies>EasyMigrator.Core:[1.0.4, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.4</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T04:25:06.28</LastUpdated>
      <Published>2017-03-23T04:01:29.147</Published>
      <PackageHash>SXGpMak37lMZlxGe2w1Xig0ixjrBuQcKSjgII/BEPkkQC/enRpObASN54qRHZiTZrwjvoqdCtofP7T9I2EVs6Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24105</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.4</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.5.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-23T04:25:04.733</Created>
      <Dependencies>EasyMigrator.Core:[1.0.5, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.5</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T17:42:08.187</LastUpdated>
      <Published>2017-03-23T04:25:04.733</Published>
      <PackageHash>q/qXBkZjIexJoxozvigKn0W8OxYqElPtqC4tMD5LM8QtD7cKOK0ppxSfPk1k6kbxQr46zNSxaTGzJah5FVun0A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24139</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.5</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMigrator.MigratorDotNet</Id>
      <Version>1.0.6.0</Version>
      <Authors>qes</Authors>
      <Copyright />
      <Created>2017-03-23T17:42:06.14</Created>
      <Dependencies>EasyMigrator.Core:[1.0.6, ):|MigratorDotNet:[0.9.1, ):</Dependencies>
      <Description>Easy, poco-based migration helpers for Migrator.Net.</Description>
      <DownloadCount>588</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.6</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T17:42:08.187</LastUpdated>
      <Published>2017-03-23T17:42:06.14</Published>
      <PackageHash>e4Aus3AYd6skSULORWRLIoZVXCoU4+C2OsHuVXFv17hKwxAo/7qe07EUf7z66HqED/KRw6FWSsEexgPBdMQnOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24137</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMigrator.MigratorDotNet/1.0.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyMigrator.MigratorDotNet</Title>
      <VersionDownloadCount>0</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/MIT</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMigrator.MigratorDotNet/1.0.6</DownloadUrl>
      <ProjectUrl>https://bitbucket.org/quentin-starin/easymigrator/wiki/Home</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright />
      <Created>2013-10-13T19:26:57.307</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>HWXJLDBOqDpOxDsJip/KMQBk/2v2lyisEofv2lc+M1tkSdkGmI+G7l3JqsiHyGrqCT9AMQKF0Lgs0MGUuJuHEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11620</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags />
      <Title>EasyMongo</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T19:58:55.013</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:19:01.89</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>U05T5YXHtjKqCbBktiPiJNrwPTGawzp/hm4ySLwvykAWoL7iFn4t1wqkf0kGegBKGjPrjisPLmu6id1r+Zpl8w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11715</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:42.737</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:48:45.86</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.0-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>4MpwBhxq5bdBrelOLf5nf3qCrGsylhTY5V2IBYwTsGbA0HrjDQkJuLhFSW6p7dv4HUqVjEdzcw9k0/drtYWfAw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11737</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:52.317</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T03:10:37.347</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.0-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>SkxNY6EQ7PArgr2SThOZwRsnQ/icEX2cXwsojWQ8jmIfXRhTb69jLoPpqomiv7Y24LZSrnX8KaEO9idR9VMeUQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11775</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:53.437</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:13:05.8</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>LHSfaAF7UJNYRMpIvlKEsxDNm7A/HPxLBQVg+pl1mIaCMwOBs0g9UQikrpnEH2Ip9h9aBIogoZ/Z/w/W9UuNjA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11754</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:23.703</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:36:58.78</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>x0SPbHOW6iG1iOLK2q0I1gfi/MvHUEXqKg7MWDcs4JmDy1XhWgI4xyR+cvjl60Nnh1mV84+WasV1BKnwUzTbmg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11789</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:28.283</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-18T22:01:07.377</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Bh+vYXaMZxq9+C5XOXGDlRL3En49ygRHajhGmQgusd1rq7pE91nnmKeAj30BGpGMKajYEsdmvDX4Gncd48w3oQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>328026</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>This Nuget package contains a single .dll within which is embedded: the 5 EasyMongo assemblies and 10Gen's MongoDB.Driver.dll, MongoDB.BSon.dll.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:02:22.39</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-18T22:07:02.733</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>YKdi52tepBEYDAfa16hrDXxlHyRl0iCobYJL2efCzLQvHcPqsnaIC8S8YNh9g7B1kvt4OXBbhnduJSDwQ4Acfw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>328015</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>This Nuget package contains a single .dll within which is embedded: the 5 EasyMongo assemblies and 10Gen's MongoDB.Driver.dll, MongoDB.BSon.dll.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:02:23.593</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-18T22:26:49.277</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>JGcABI35mhG8AHyzmTZJ7Su+e4+fPpvhQL1JU8+QzJ2Z/PddhBP0zHDRyQhMgB+OEmTJ3mIQ4DPpG5tEj2YSkw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>328011</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>MongoDB driver supporting asynchronous, interface-driven operations, dependency injection; embedding the official 10gen driver.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-10-18T22:27:24.51</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-21T04:08:56.713</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>NsEnvmDUhXy8efHambpOA+OrJpYTe6RurGYFrJI0kCHEOZedn2f/+xq5z2M+64+Ox6a4RTKJlm6GLsdy4Cn3Lw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>328357</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>MongoDB driver supporting asynchronous, interface-driven operations, dependency injection; embedding the official 10gen driver.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>134</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-10-21T04:09:06.367</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-11-11T04:40:21.37</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>o5NKfYzQq6+Btb6SoYpyj9D9Z3DT/Osty95RGRs4Whq/w2eyggxjYAnHfJXy04SDHxFqXdXTWcB0/XuKbzY7wg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23676</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-11T04:40:36.377</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-11-11T04:55:51.9</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>qNxrpPgwhKBy66sWwAsFgYUvYHEH+QWPWqt1QKqhgFFlRtWQa0gI+ALPlzHys1HBz1xRI6QfvJ+EHt5RHZskgQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>330955</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.2.34).</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-11T04:56:06.983</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>1.1.6-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-11-19T05:07:16.57</Created>
      <Dependencies />
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes: dependency injection, (optional) asynchonous operations and interface-driven operational usage. Designed to simplify CRUD operations and hide uneeded complexity of the underlying driver (which is embedded within the single EasyMongo assembly).</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/1.1.6-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>DoP7MBGIEsdQ3SHLo8qOLrSJEQJfoy8dhJSCcDf+3VBpFoQXNH2xgKctf3wapGa5vIdc5tiKyrzF9MnOD7y0fQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>331205</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/1.1.6-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Pre-alpha release ; periodic releases to incorporate 10gen's releases (the current embedded version of their official MongoDB driver is 1.8.3).</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/1.1.6-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-19T05:07:30.32</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.1-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2014-08-19T15:22:03.427</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.1-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-05-04T21:02:30.267</LastUpdated>
      <Published>2014-08-19T15:22:03.427</Published>
      <PackageHash>y5iW+CkjLRLQZyIr1VsgPgBGk3klZgTQip2gZnLL2oLw+nZCj3Xl4As5Pv2ryYUp9JTY8B49Or6ADlxNVR33Fw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26537</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.1-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.1-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.2-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-02T21:55:44.753</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.2-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-05-04T20:37:04.87</LastUpdated>
      <Published>2014-09-02T21:55:44.753</Published>
      <PackageHash>GDd6Sh0M6Xmvc4/j5WDcFvl6jGaiUZjrMFl6WxwlmiU7yCeZYU5O81l5jl9ayREv3afAK4yNqKVkAjaoIYXuPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25538</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.2-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>108</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.2-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.3-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-02T22:07:59.47</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.3-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-05-04T20:37:04.87</LastUpdated>
      <Published>2014-09-02T22:07:59.47</Published>
      <PackageHash>xClQ8lWhcYICtDqmZAFrwdHxwJuokXX1nl96OA08gLMSHNUzZrLv3k2vW35vzjO2qGHwke+YKCrChM+RYWWCaw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25538</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.3-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.3-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.4-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-02T22:13:02.72</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.4-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-05-04T20:37:04.87</LastUpdated>
      <Published>2014-09-02T22:13:02.72</Published>
      <PackageHash>zXTVxJcC/7IZgPkq7KgmWTVu3JuF+DfNyhMpKltilkUbaonqTugJ86DJ+iQ1kNPZuFlGxfBIA9cEXHgScXghVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25535</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.4-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.4-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.5-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-05T20:19:36.03</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.5-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-05T20:19:36.03</Published>
      <PackageHash>46VL8qOMvgaBmy0J6Zt5H3Cz6SWtJuQUfvI0y506KFLJgsu6jp86bz01h7ubpdyMQN52djsaI29K7PcmJVkcSw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25156</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.5-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>134</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.5-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.6-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T14:50:01.337</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.6-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T14:50:01.337</Published>
      <PackageHash>ldo9coRA0McI5T2szUxV+hUKNOjGL68eiN2Xhp0PO+mC78dnWyU/HH6c21DY0tWVMfBlD+GZzS+DJBmBKnluWQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168104</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.6-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.6-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.7-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T14:58:08.627</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.7-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T14:58:08.627</Published>
      <PackageHash>b2283cUO0axRhXVF5Mqec4QVKe+J9XeGon2SNC81XNAmCpQTfTNkCJIxjSaDVogn2Me1g+oZKBsjnAUpTegLng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>25156</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.7-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>109</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.7-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.8-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T15:34:56.38</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.8-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T15:34:56.38</Published>
      <PackageHash>jIk+Peu9r49dVrvr0wgGAvlrbJSkQcNWYMDOI9dn3Gf7oMQJwA150X0r58vdExvpHbNiGmKT9pAax8oKBvarjQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168097</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.8-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>115</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.8-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.0.9-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T15:42:56.907</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.0.9-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T15:42:56.907</Published>
      <PackageHash>EVDeD4Ah/tQqkfaKqjZFGy/vjnLArHk03kQCX4CX3AllfaYkeJkmaPopvrP9Lmwo+G0VStFS6myBucSuAhLv1g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168108</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.0.9-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>115</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.0.9-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.0-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T16:01:43.173</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.0-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T16:01:43.173</Published>
      <PackageHash>SIt23keSNtHVnsUdkWU0QS2xg3nNXkfOoqUru+z1qnxzyQrL05Ho4cjw/kvDW1RpcXN32q7dK4N1HPIQuuE0rw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168093</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.0-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>115</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.0-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.1-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T16:05:02.56</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.1-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T16:05:02.56</Published>
      <PackageHash>2Y18CUpah3FE4gFE/x59taznjWGfdJ0d1gmk5Mi8nG5yNYAIByMiO/SCMbZWi50Q0tribhzCLtTLO2YS8BK7yg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168064</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.1-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>115</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.1-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.2-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-10T20:27:43.08</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.2-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-11T20:57:11.44</LastUpdated>
      <Published>2014-09-10T20:27:43.08</Published>
      <PackageHash>0Oq27qW9OdMW6Ggsg+XBgtSO2YLS4An08FL/prfdcThSLaiPnyFIjEujtt8JppoT9MWpC87XuDfCxOJm8YgK4A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>168977</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.2-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>314</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.2-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.3-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2014</Copyright>
      <Created>2014-09-25T19:33:42.073</Created>
      <Dependencies>mongocsharpdriver:1.9.2:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.3-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-06T09:05:11.23</LastUpdated>
      <Published>2014-09-25T19:33:42.073</Published>
      <PackageHash>k9ea5gjy4QlKiSCOiJ15J5huaMOMemyhmZLuv9ADfELPo/IcwCrVbmd0M1xS2giDK+2eWf7v/hL3llc72tHl6g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>170538</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.3-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v1.9.2.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>3466</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.3-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.0</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2015</Copyright>
      <Created>2015-10-06T08:38:42.81</Created>
      <Dependencies>::|mongocsharpdriver:2.0.1:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.0</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-06T08:53:17.54</LastUpdated>
      <Published>2015-10-06T08:38:42.827</Published>
      <PackageHash>gxlnuudqAgSlg9UTHdjMI2cFAfKd6UoXATcGXrtLutXvMSjvX3He4gZ3I3pw7l1brsuh4u9exfGzORFf5xpOsw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>182808</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Alpha release ; integrates 10gen's official MongoDB v2.0.1(legacy API)</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.0</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2015-10-06T08:41:58.097</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.1</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2015</Copyright>
      <Created>2015-10-06T08:53:17.54</Created>
      <Dependencies>::|mongocsharpdriver:2.0.1:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.1</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-06T09:05:11.23</LastUpdated>
      <Published>2015-10-06T08:53:17.54</Published>
      <PackageHash>2HpXGYHQPE1p6m7HajcTxU4sTWVpihqXrPIHF5hTmzmY9q4ixPtmq2BHJDCZttp/DulIGRB66LNU8TMBqyrjtw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>182799</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Integrates 10gen's official MongoDB v2.0.1(legacy API)</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>173</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.1</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2015-10-06T08:57:05.55</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo</Id>
      <Version>0.1.2</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2015</Copyright>
      <Created>2015-10-06T09:05:11.23</Created>
      <Dependencies>::|mongocsharpdriver:2.0.1:net45</Dependencies>
      <Description>A simplistic facade to 10Gen's official, embedded C# MongoDB driver. Additional added functionality includes asynchonous support and interface-driven operational usage. Designed to simplify integration and abstract noise of the underlying driver.</Description>
      <DownloadCount>8413</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo/0.1.2</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/9039/fzhe.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-06T09:07:11.63</LastUpdated>
      <Published>2015-10-06T09:05:11.23</Published>
      <PackageHash>EkuRkmmyB1vnOYKYThcVtRWYY9SoQSPo+03PAFlIMnWEj8Zr/aCM4WRktY+JihmfFywf4MAewGUeKcZBG4lDTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>182800</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo/0.1.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Integrates 10gen's official MongoDB v2.0.1(legacy API)</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A MongoDB driver supporting simplistic synchronous &amp; asynchronous, interface-driven operations, DI/IoC.</Summary>
      <Tags>EasyMongo MongoDB Mongo</Tags>
      <Title>EasyMongo</Title>
      <VersionDownloadCount>1398</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo/0.1.2</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2015-10-06T09:07:11.63</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright />
      <Created>2013-10-13T19:27:26.347</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>5j3829os259GBpt15Ip7k0kGaa28VVPV7MK1dSr00rXdRZK2dDB4MiVsbSxPdp2Cd3VxdiZ8gHdh9Mghxbj6Mw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8514</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags />
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T19:58:56.08</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:21:07.9</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>ap/Or/uWnUnv8EZGGJ2v/JEJ9ShpUObAecKoXJhDy9OOhjXCApHcPv74PQDx10Ph6QacDtBO1usNfGPZWS17Ag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8618</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:44.83</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:48:26.877</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>S+2+3t9XGFVrgx8CYLIySy+2d5JGPIyAQhoM9d89cPLl9HSxxLGD+XE3ostLwgaTsC4K1UW68TgkYJSycpZIEA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8638</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:51.317</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T03:11:04.777</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/6093/cr0p.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>lfR6GxHIPxaNj884aWSmMYs1fqK0rmtmtwYKYuZGFEIC1s//DWV/cNWhq52R7vhZ+5UBY31ubrSe0biAYG4Vkg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8673</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:54.49</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:14:10.987</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/6093/cr0p.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>RkTvfEo0wb3oQO7zOk9KyEOOFLjo77qrz97S0F4Z/rjLvCq3zSkIzAvCYE6kn9i8n/9xRC0y3sN0rYv4u4Ag9A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8654</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:27.223</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Async</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:37:22.167</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>761</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/6093/cr0p.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>4igSlHTY10xr6zerioJI/NbdhLLTK5M6SiHtxvOEwARebzrWKoSRpyWqEUecBdypIj6w9vSBTXbKV2mZrj17YQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8689</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Async/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing component asynchronous readers, writers, updaters and server and database connection classes utilized by other EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Async</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Async/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:29.373</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright />
      <Created>2013-10-13T19:28:24.913</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>41JkyMf6FNvIDwQv4AZ4GlwbCmmQLppPv3o/Qr2YLpJ87k2GTqB973KTPLStSmH2BCd1L2L/1A/PK1v6CmVf0Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2721</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB collection operations.</Summary>
      <Tags />
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T19:58:58.08</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:22:19.053</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>uox5bCheRbBJmjbt93hZqoV1QACGeSf6sev6zI8Re5CiQ+FFOc83x/fh7cXzC3Q8G5i7DK3oGTV6RhqLOsFgJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7180</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB collection operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:46.917</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:47:47.58</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>x7tZDhINcqq81b3O4Dpc0jeklNgwjL6QDQ0dGUnJ3fRIIX5CFvEw5SdubpimMwguMsGJQmhzcijpaBy22pOkOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7198</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB collection operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:49.297</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T03:11:24.16</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img809/3562/gvlx.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>y0j6k3l20iAiwqDlP4txHhGBBwdZbSK1qEdMSWivWJPYd74cbO5RErqvDtzAJEz+/cFYWZA6Y+201lOauBjzow==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB collection operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:55.52</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:13:46.837</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img809/3562/gvlx.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>Agh6K0U3965Csiz3cKqQC4FLQtEQ5Vv5XPKUhgz3pqcpqXDN0EMh0HMsSidrrNz2TyEJ0GeFvtM4pVuYTDbzpg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7218</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB collection operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:26.203</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.5</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:38:13.277</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.5</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img809/3562/gvlx.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>BU2D876WR36psDemqdQUmFlUkUHqQzE93XZQu/0NAQyxKBOBOysrD9PNh0YxVBCU586sIT65IxVQoMrk9YOCUw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating EasyMongo Collection assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>152</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.5</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:30.447</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Collection</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:43:55.163</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>905</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img809/3562/gvlx.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>tPrfwucUHIjrMjBJJ8adtlIgLYpnToGsv/VKNU2fMPtI/8FyUpiWMtLJee3ktx6p6ckFoLlUZe54vAeoLq0HaQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7251</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Collection/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating EasyMongo Collection assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Collection</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Collection/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:33.643</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright />
      <Created>2013-10-13T19:25:59.503</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>VsTkovsp0d/WatSdp7hLPq0VityGgaPTpEykB2670m/S/VqLLcvmyfGbMV1Mq1AlVFXgTEOxM5Q0O0LI1GwV5A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8046</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags />
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T19:58:53.933</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:20:31.72</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>nOLTv34OghCGKABSKOAWgRIn6EEkkYu87GtWoL5w5s1f3gE7z5qfdzpHJbzRTaMfvPFakOk8SD5bG+YwJOG30A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8152</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:43.82</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:47:29.187</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>EHBzL5kifOCFxWgoB8me7oDEPqh1bTgj0+FvA+8SBVC06XnvVEk16oCxPsEzFkeWgwWOXc/teC5q13pHJqaRTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8152</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:48.297</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T03:12:16.873</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img35/5309/oia5.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>nbLZ4aqPmQvpl95Kgev+Xnhtw5BT+WGPmcL3L2UxOcCfOT1CuT1w7IMq5AKheVUKSsRNMNKpLNKLJjYtWLU0Pw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8187</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:57.99</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:12:43.327</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img35/5309/oia5.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>qlPyhkLK7UjC1y3tNTiNwtRuoQhHy2vbEnVC9KRZ/if6JEgl+xOAGRHSf0wRpgcnly0dFfCNhQqtqs7i/ZytTA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8188</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:22.457</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Contract</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:38:37.303</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>749</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img35/5309/oia5.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>mczTNCk330U9lUN1I6gvlkoviAXR+GQB1MFTiky5Q2p5SamyWcJLcESRB3oecrNGzcwDOg+/3BM3NS2T/CuoiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>8222</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Contract/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Contains public Interfaces to EasyMongo assemblies' class operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Contract</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Contract/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:31.527</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.0-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright />
      <Created>2013-10-13T19:27:51.533</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.0-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>XAvKctSy/UPJecJDVwn7OK2quri0wNhO14Imx0cOojK/XkootF148obLyAHQL52RClVqKk1SngLvRM4Me2wPYg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2711</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.0-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags />
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.0-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T19:58:57.09</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.1-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:21:45.453</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.1-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>seYyrBLXNj4yRG1QV0iyHbPidLdsKy/Eo2fh6i/FxOpAv2Hkg5v7D2WVdkzB4ZKRh6SjvX/HE91mLS4RNyBF3w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7776</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.1-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.1-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:45.843</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.2-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T02:48:07.503</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.2-pre-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>3FTdRcc4NlCoa1GtCmC5shur4hoFRngjzwXqoVyUxsbUQxnDIQqzKmycrA8Rmm03yZ7IPDrg40kUprqQYNkfbQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7796</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.2-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.2-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:50.3</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.3-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-16T03:11:52.917</Created>
      <Dependencies>mongocsharpdriver:1.8.3:|EasyMongo.Contract:1.0.1-pre-alpha:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.3-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/2235/3wp7.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>gM2rknvZx9rvgtAMMcwxSeQAjgAPFvVVjSiEErF6n0CmaIFFDHsup1SRgfvYOQqqzyFVK0wTn2LdZu3pKmscSw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7832</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.3-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.3-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:00:56.667</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.4-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:13:26.927</Created>
      <Dependencies>mongocsharpdriver:1.8.3:</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.4-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/2235/3wp7.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>imb71oMuw6EQW4XFy1twDuTnMCoG4c6zsBIiQqVazl+tYUZhsuiLTtwnsR+q98mqDaTLmSsBeGfA9/rXZMASJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7812</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.4-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.4-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:25.083</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongo.Database</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:38:58.95</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>758</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img15/2235/3wp7.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>DLdtrXFvSwtmZDunLC3ka3ld7V6HoPj0jZpFtvu+nA3RMpJQCyORI2vtnFqgf5hOoqaWtUpqqujCmgQFmPPtmQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7846</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongo.Database/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Assembly containing classes for manipulating MongoDB database operations.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongo.Database</Title>
      <VersionDownloadCount>130</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/agpl-3.0.html</LicenseUrl>
      <LicenseNames>AGPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongo.Database/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:32.567</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMongoAssemblies</Id>
      <Version>1.0.5-pre-alpha</Version>
      <Authors>Reid Peryam</Authors>
      <Copyright>2013</Copyright>
      <Created>2013-10-17T02:46:45.87</Created>
      <Dependencies>mongocsharpdriver:1.8.3:net40|EasyMongo.Async:1.0.5-pre-alpha:net40|EasyMongo:1.0.5-pre-alpha:net40|EasyMongo.Contract:1.0.5-pre-alpha:net40|EasyMongo.Database:1.0.5-pre-alpha:net40|EasyMongo.Collection:1.0.5-pre-alpha:net40</Dependencies>
      <Description>A simplistic implemenation of 10Gen's C# driver for MongoDB supporting asynchonous operations.</Description>
      <DownloadCount>132</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMongoAssemblies/1.0.5-pre-alpha</GalleryDetailsUrl>
      <IconUrl>http://imageshack.com/a/img23/5185/brb4.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-29T20:38:35.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>OgJznI6Op20+gxikuP7C6dXW7BjFnGnJ+KI/E3PKKInQDVt/hrt51/8Fmj/mJyKm668PzlN5jnwMdt8DRHVIEg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>2907</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMongoAssemblies/1.0.5-pre-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>pre-alpha, internal release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Nuget Package containing all EasyMongo assemblies.</Summary>
      <Tags>MongoDB</Tags>
      <Title>EasyMongoAssemblies</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.gnu.org/licenses/gpl.html</LicenseUrl>
      <LicenseNames>GPL-3.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMongoAssemblies/1.0.5-pre-alpha</DownloadUrl>
      <ProjectUrl>https://github.com/TheFastCat/EasyMongo</ProjectUrl>
      <LastEdited>2013-11-08T20:01:34.76</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMVC</Id>
      <Version>0.9.0</Version>
      <Authors>Hadi Hariri</Authors>
      <Copyright />
      <Created>2011-03-06T09:23:21.937</Created>
      <Dependencies />
      <Description>An MVC Library to make ReST and Conneg and other things easy</Description>
      <DownloadCount>1209</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMVC/0.9.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T18:47:00.427</LastUpdated>
      <Published>2011-03-06T09:23:31.52</Published>
      <PackageHash>iv7HcJcfngb/jtLvIrrIRlYbnEc/FzC1KTZe2zG1EufycMBFLetl0k+lCA3SzI1fLcgS6xKlIanQuFhRGOQU0A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30918</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMVC/0.9.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>true</RequireLicenseAcceptance>
      <Summary>An MVC Library to make ReST and Conneg and other things easy</Summary>
      <Tags>REST MVC ASP.NET MVC</Tags>
      <Title>EasyMVC</Title>
      <VersionDownloadCount>1209</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/hhariri/EasyMVC/blob/master/LICENSE.TXT</LicenseUrl>
      <LicenseNames>BSD-3-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMVC/0.9.0</DownloadUrl>
      <ProjectUrl>https://github.com/hhariri/EasyMVC</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMvvm</Id>
      <Version>0.0.1</Version>
      <Authors>J. Romagny</Authors>
      <Copyright>J. Romagny</Copyright>
      <Created>2015-05-26T18:07:51.873</Created>
      <Dependencies>CommonServiceLocator:1.3:</Dependencies>
      <Description>Mvvm Library for WPF with ... navigation support, UI Composition, IoC container, Messenger, etc.</Description>
      <DownloadCount>854</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMvvm/0.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-28T08:02:02.443</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>+RNFsWApRwrufVKQGOXylQogcjgPkkb9Ep37QJ4Jj4GcAgE1d77Bx3WwDzT/F/ovvOmWttO+eVTZfRW1gR63wA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38251</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMvvm/0.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>EasyMvvm Mvvm IoC Messenger NavigationService Wpf</Tags>
      <Title>EasyMvvm</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMvvm/0.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/romagny13/EasyMvvm/wiki</ProjectUrl>
      <LastEdited>2015-05-28T08:02:02.443</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMvvm</Id>
      <Version>0.0.2</Version>
      <Authors>J. Romagny</Authors>
      <Copyright>J. Romagny</Copyright>
      <Created>2015-05-26T18:53:59.97</Created>
      <Dependencies>CommonServiceLocator:1.3:</Dependencies>
      <Description>Mvvm Library for WPF with ... navigation support, UI Composition, IoC container, Messenger, etc.</Description>
      <DownloadCount>854</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMvvm/0.0.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-28T08:02:11.03</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>QtgjjJ3S7u3fF6v5II/VnpKjj7q3rqd40D9ILNcQMeh5ezmm9vEK3Hg97cq8VFPZkX1oBrEv8gSrClrLr8dX2w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38256</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMvvm/0.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>EasyMvvm Mvvm IoC Messenger NavigationService Wpf</Tags>
      <Title>EasyMvvm</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMvvm/0.0.2</DownloadUrl>
      <ProjectUrl>https://github.com/romagny13/EasyMvvm/wiki</ProjectUrl>
      <LastEdited>2015-05-28T08:02:11.03</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMvvm</Id>
      <Version>0.0.3</Version>
      <Authors>J. Romagny</Authors>
      <Copyright>J. Romagny</Copyright>
      <Created>2015-05-27T16:20:48.43</Created>
      <Dependencies>CommonServiceLocator:1.3:</Dependencies>
      <Description>Mvvm Library for WPF with ... navigation support, UI Composition, IoC container, Messenger, etc.</Description>
      <DownloadCount>854</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMvvm/0.0.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-28T08:02:24.773</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>wWjEeYdIAVyFOqOEClNoR9Lk308qO1PPl0Qcg6oMNBkQDinBQKgOP0+AtBWXc7zqdXSQzddYARxSz0b+GgFsGg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38068</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMvvm/0.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>EasyMvvm Mvvm IoC Messenger NavigationService Wpf</Tags>
      <Title>EasyMvvm</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMvvm/0.0.3</DownloadUrl>
      <ProjectUrl>https://github.com/romagny13/EasyMvvm/wiki</ProjectUrl>
      <LastEdited>2015-05-28T08:02:24.773</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMvvm</Id>
      <Version>0.0.4</Version>
      <Authors>J. Romagny</Authors>
      <Copyright>J. Romagny</Copyright>
      <Created>2015-05-28T08:01:04.783</Created>
      <Dependencies>CommonServiceLocator:1.3:</Dependencies>
      <Description>Mvvm Library for WPF with ... Navigation support, UI Composition, IoC container, Messenger, etc.</Description>
      <DownloadCount>854</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMvvm/0.0.4</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-04T21:48:38.477</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>n/wlyH97vO30kuTKLS4peuWGNrTz411ZXHxjWcq0OB9BBjPnoGXyNzzq8UfCX00oy4gIZuNCwdhfR3e1pKUKmg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38066</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMvvm/0.0.4/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>EasyMvvm Mvvm IoC Messenger NavigationService Wpf</Tags>
      <Title>EasyMvvm</Title>
      <VersionDownloadCount>157</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMvvm/0.0.4</DownloadUrl>
      <ProjectUrl>https://github.com/romagny13/EasyMvvm/</ProjectUrl>
      <LastEdited>2016-09-26T08:06:41.763</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyMvvm</Id>
      <Version>0.0.5</Version>
      <Authors>J. Romagny</Authors>
      <Copyright>J. Romagny</Copyright>
      <Created>2015-05-28T16:42:04.057</Created>
      <Dependencies>CommonServiceLocator:1.3:</Dependencies>
      <Description>Mvvm Library for WPF with ... Navigation support, UI Composition, IoC container, Messenger, etc.</Description>
      <DownloadCount>854</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyMvvm/0.0.5</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-04T21:48:38.587</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>3aqAcRCyQEXwzIW1qacj5Q6VTPS/IxGAxpHxzhmNR7TT0syRkJgNnb13HdoBVuZq011uvTmwOyUUEVd59C8c2w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38591</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyMvvm/0.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>EasyMvvm Mvvm IoC Messenger NavigationService Wpf</Tags>
      <Title>EasyMvvm</Title>
      <VersionDownloadCount>298</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyMvvm/0.0.5</DownloadUrl>
      <ProjectUrl>https://github.com/romagny13/EasyMvvm/</ProjectUrl>
      <LastEdited>2016-09-26T08:06:55.407</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetHttp</Id>
      <Version>0.0.1</Version>
      <Authors>Craig Rice</Authors>
      <Copyright />
      <Created>2017-03-14T12:03:52.637</Created>
      <Dependencies />
      <Description>For sending HTTP messages. A simplifed usage of System.Net.Http HttpClient.</Description>
      <DownloadCount>179</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-14T12:03:52.637</LastUpdated>
      <Published>2017-03-14T12:03:52.637</Published>
      <PackageHash>F3o79rfRcus5ONoq1CUdfDL8C0X9SPb5TCGiRd5I+lv20n3AxUJYFbT9b7Zra2Ld/6dywJPaDQXTuCQLvEZsIg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11909</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetHttp</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetHttp/0.0.1</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetHttp</Id>
      <Version>0.0.2</Version>
      <Authors>Craig Rice</Authors>
      <Copyright />
      <Created>2017-03-14T13:23:31.547</Created>
      <Dependencies />
      <Description>For sending HTTP messages. A simplifed usage of System.Net.Http HttpClient.</Description>
      <DownloadCount>179</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-14T13:23:31.547</LastUpdated>
      <Published>2017-03-14T13:23:31.547</Published>
      <PackageHash>59KarPntewlXg8uzlhzlSdqWI81TIIR/g68Ofx4+HLMoJ6pU8Jf1q5QJACoOXhL1U5Nl7pQg1646VcN28WvJfw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>13306</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetHttp</Title>
      <VersionDownloadCount>52</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetHttp/0.0.2</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetHttp</Id>
      <Version>0.0.3</Version>
      <Authors>Craig Rice</Authors>
      <Copyright />
      <Created>2017-06-26T00:51:05.22</Created>
      <Dependencies />
      <Description>For sending HTTP messages. A simplifed usage of System.Net.Http HttpClient.</Description>
      <DownloadCount>179</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-26T00:51:05.22</LastUpdated>
      <Published>2017-06-26T00:51:05.22</Published>
      <PackageHash>PLdNj6BBWHsK4X9pPOjAHweno45Dmk6CGgR7lfdUweluJ1bPQWWe0LD/WqGDceBUTX7bxA5nInG1vJSBA1P6Kg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>14213</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetHttp/0.0.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetHttp</Title>
      <VersionDownloadCount>85</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetHttp/0.0.3</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetPGP</Id>
      <Version>1.0.0</Version>
      <Authors>davisb10</Authors>
      <Copyright>Copyright 2017</Copyright>
      <Created>2017-04-15T21:25:50.61</Created>
      <Dependencies>BouncyCastle:[1.8.1, ):</Dependencies>
      <Description>Easy, straightforward PGP wrapper for .NET Framework.

Documentation located at https://github.com/davisb10/EasyNetPGP</Description>
      <DownloadCount>96</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetPGP/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-18T14:39:43.717</LastUpdated>
      <Published>2017-04-15T21:25:50.61</Published>
      <PackageHash>eIgKDibM1JXSm9t7DNi5xVYpHCnJ0QnUrC0f3VQIWs4UY/5nKnkWI7hIakQMZFmdkaHhBYxSdz456bcl8HcQkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7186</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetPGP/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>First Release.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>PGP Encryption Wrapper</Tags>
      <Title>EasyNetPGP</Title>
      <VersionDownloadCount>96</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetPGP/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/davisb10/EasyNetPGP</ProjectUrl>
      <LastEdited>2017-04-18T14:39:43.717</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.2</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2011</Copyright>
      <Created>2011-12-01T11:41:49.53</Created>
      <Dependencies>RabbitMQ.Client:[2.7.0]|Newtonsoft.Json:[4.0.2]</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.2.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T22:20:11.733</LastUpdated>
      <Published>2011-12-01T11:41:51.427</Published>
      <PackageHash>sm9ejJhmAmu0oxmjWE29gwti9IuZEzS0zpex01F4bOVt5AtmPYl4vO8/G+3GQ8kEdPFZGlShmtByEq/nPB3aGg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27001</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.2.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Summary>
      <Tags />
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1022</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.2.0</DownloadUrl>
      <ProjectUrl>https://github.com/mikehadlow/EasyNetQ/wiki/Introduction</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.3.0.0</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-04-30T11:41:59.173</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]|Newtonsoft.Json:[4.5.4]</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.3.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T19:10:30</LastUpdated>
      <Published>2012-04-30T11:41:59.173</Published>
      <PackageHash>Cj+HM+G4GFn6zNgk+qaCsfUx10NUVySPXwh6JHkB78xNfhSCN9BevBewJYDCv202b827aahXtwByN4dK8qDY6g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27001</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.3.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Upgraded to RabbitMQ.Client to version 2.8.1</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>486</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.3.0</DownloadUrl>
      <ProjectUrl>https://github.com/mikehadlow/EasyNetQ/wiki/Introduction</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.0.0</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-05-29T14:04:08.317</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]|Newtonsoft.Json:[4.5.4]</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T20:42:12.217</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>L2nRy4D73/ZI0q4zD7OCz1PYvm7F5kkpv/kY/KEyjvUOn20pMqRA21nqZsihWGRSyOMtniMvhG7PXQ7E1wcmKg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>35564</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Upgraded to RabbitMQ.Client to version 2.8.1</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>204</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.0</DownloadUrl>
      <ProjectUrl>https://github.com/mikehadlow/EasyNetQ/wiki/Introduction</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.0.1</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-05-29T14:08:36.38</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]|Newtonsoft.Json:[4.5.4]</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T20:42:12.217</LastUpdated>
      <Published>2012-05-29T14:08:36.38</Published>
      <PackageHash>vqER0cetwKWUNQaQI/vFvFNyNeaAK90OU6xl4aYzCT+Y8xV4CvlE2liTgu//m9pep0hBcppsPuyHMtazgFP1TA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>35590</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Breaking change for Publish and Request. New Advanced API</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>393</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/mikehadlow/EasyNetQ/wiki/Introduction</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.0</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-02T11:14:29.407</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]:|Newtonsoft.Json:[4.5.4]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-02T11:14:29.407</Published>
      <PackageHash>RTP9P0QzkVTXHNQ2qQplq4XV9+4TzSJibNsMhvp300gPR3qsDDbkyJTJD8ouqHS8A5xF5amdbT2RTmWuNl+z8A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33536</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>276</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3</DownloadUrl>
      <ProjectUrl>https://github.com/mikehadlow/EasyNetQ/wiki/Introduction</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.6</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-03T14:31:15.977</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]:|Newtonsoft.Json:[4.5.4]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.6</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-03T14:31:15.977</Published>
      <PackageHash>CluTjurUwiyUlTz7rAIoRJB8YM8eKXXHDtfwFhrV5m9cbYio5egp4gtBJccdZU81fr/6ORFrUVmn0EpBxtpyug==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33565</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>204</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.6</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.7</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-04T11:19:05.227</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]:|Newtonsoft.Json:[4.5.4]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.7</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-04T11:19:05.227</Published>
      <PackageHash>ldVbqJBRg664gqSVMoLWSMtec+Ht7qlPe32wLfM7YY4X+I03E4SwQwAw/S5WHoBaSvQY5vEEDxKiIDX9Bv3mug==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33634</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>219</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.7</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.8</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-06T13:44:32.427</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]:|Newtonsoft.Json:[4.5.4]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.8</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-06T13:44:32.427</Published>
      <PackageHash>ia72VysyZK4QV5c3RgSQMCr/UZNGoveUr248cflbFQLKrlubXHw9Yd24arDZ6VGn0k75O3lW+gHQeR+FM1EwRQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33669</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>248</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.8</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.9</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-11T14:14:54.95</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1]:|Newtonsoft.Json:[4.5.4]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.9</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-11T14:14:54.95</Published>
      <PackageHash>uwR3MK/JKYcELyElwJrlBne45d77AoJhUH9H2SEws1YZ5mn2lEpnaLL7X5CnY8tHbUbPa7lOeXikyOtlthuIKg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33799</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>207</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.9</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.10</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-12T08:23:57.577</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.10</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-20T20:06:03.43</LastUpdated>
      <Published>2012-07-12T08:23:57.577</Published>
      <PackageHash>Ev09oVpI+Vnzgk9ngKIlBAWUQbWOCajOHoMp9CvD2z3jqxGSPfvSMiIU7GqjhFqsAr4hNSfK7htruQFpaTKKcQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33778</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>324</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.10</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.11</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-13T13:25:18.957</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.11</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-13T13:25:18.957</Published>
      <PackageHash>TkAlvKyC30ga00gPAMx2v7WxusOCkz8Qwne0AAt3WhbKT2eKMHIRx+3wPc0UX+WiVAOVhv69yeYqMbTWCJ+ZQg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33781</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.11/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>316</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.11</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.12</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-07-25T10:31:13.76</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.12</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-07-25T10:31:13.76</Published>
      <PackageHash>1FR4ctoEymGaG2W0SJN3rtyl/6q7HkVBuzCSmIzJKt5kHTk3rdZ7TgX5xe1Q23ShoFQa0NGHJS51RDOZSHlIew==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33816</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.12/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>433</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.12</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.13</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-08-07T11:29:43.393</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.13</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-08-07T11:29:43.393</Published>
      <PackageHash>cMEMizAJf9NF0u9lYrzVdO7G5VrFkufg5UxNWfaLGAQ+xpY+GFir4qqPsuICSUjnuEfMBMHXWGT+PTHv2x/8wg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33818</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.13/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>354</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.13</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.15</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-08-23T13:48:57.607</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.15</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-08-23T13:48:57.607</Published>
      <PackageHash>efBoHScVA+I5UBZ4VFe5G8UK9na7erIgrcvJddxazhundM9ZaTHmv08WHDfRAnyNmtEsIKbLO/A3Ezxv784W9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34102</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.15/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>257</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.15</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.16</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-08-30T10:25:16.09</Created>
      <Dependencies>RabbitMQ.Client:2.8:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.16</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-08-30T10:25:16.09</Published>
      <PackageHash>vUhcmjqdCsX0Ctzlnabenbrh0cIClV7+x7rGH4aWMwrDWZ/wYnYqZ9ohfYSA7embrIjPwHSV1URqwcnFLxFm7Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34104</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.16/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>213</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.16</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.17</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-08-31T14:27:54.51</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.17</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-08-31T14:27:54.51</Published>
      <PackageHash>5OC3x67kn+G8MRzBKCPALQKNI5RhsHev+AuT/80zWFCKI6K5Am7DvsBvXJ9DsdnWvziGWk8rpLSH5jgYdckttQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34110</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.17/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>303</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.17</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.19</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-10T15:10:43.72</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.19</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-10T15:10:43.72</Published>
      <PackageHash>v1LkrS1qJYzFmp6Lob2KRj2VPmT8iwgz2A3RUjzt5vc/YAZ0KlhCXY07cv7cLk3Je/ie777hcEU7Fl9nfoYDzg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34298</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.19/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>210</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.19</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.20</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-10T15:15:55.213</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.20</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-10T15:15:55.213</Published>
      <PackageHash>IEMSdMdiaqwDLBJiafAGgLNDRbH1L72Aa02RZK4rUvbrMLWmIHTBoQFi0emEpMrSfaEXdRYVZPtY0J0xzIbm9A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34745</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.20/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>435</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.20</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.21</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-19T09:09:43.813</Created>
      <Dependencies>RabbitMQ.Client:[2.8.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.21</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-19T09:09:43.813</Published>
      <PackageHash>V0GVQi6y5wZdmGGn/W4KVAWGBeEZQRhinmWTcwwPP9pWZy7IuNPbH0X3fi0CVEU2LT3VLSezbR13DHaxDTGBGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34754</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.21/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>215</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.21</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.3.23</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-21T10:43:49.57</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.23</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-21T10:43:49.57</Published>
      <PackageHash>qkna85bDSpDZ6QHITaKM7+iZB30PYn/7vLzWEARI3zrSbc0dkWVQ0dm6QEmiLADbryqh7QQYBCnrPIV1yomUEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>34754</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.3.23/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>219</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.3.23</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.6.4.24</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T09:24:07.91</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.6.4.24</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T09:24:07.91</Published>
      <PackageHash>XcMg0qpH3DpbOHijG3UiAYeDV215QR2GsUadSeNQeznEWQjXstpl9P2YzOY8RnLuY6tU+/+gO9Z+7RftBR01Tg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36969</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.6.4.24/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>289</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.6.4.24</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.0.25</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T09:54:01.807</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.25</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T09:54:01.807</Published>
      <PackageHash>VLa1iVI3/8esA5+gwhAk4eE+S2gV1yZK0EpNm1XiQjVBoPvCQKLGQqTZviTyPpMBpIIZbXa/kuy4RrzW0cA7HA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36965</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.25/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>194</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.0.25</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.0.26</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T12:20:10.137</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.26</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T12:20:10.137</Published>
      <PackageHash>O/LpxgzJgaAV0Ci6J8R1h2YwLFibzitVyC4uRp3ZTYsrHJ3T5RBV6JLBP3skahiolBHE2A5e1tXqguEleoCDhQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37030</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.26/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>195</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.0.26</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.0.27</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T12:40:21.517</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.27</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T12:40:21.517</Published>
      <PackageHash>qtl0lcFdfWWaGOyOdfeMCiMlycERlGbNs317FveCnkr+VC8eD9DFGEf2/cugTCSbl/tjG9LuNBRPA6OGV/EF6w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37090</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.27/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>196</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.0.27</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.0.28</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T15:32:22.56</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.28</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T15:32:22.56</Published>
      <PackageHash>X/t+8hofGTKpbamHEEvfJP7F6HK7iwHDkSV0fhDA6YYFexXIBf1NG/4vEZabJ3gfCnVhbq0VGHQMgPHmSTpq0Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37099</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.28/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>197</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.0.28</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.0.29</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-25T15:47:09.107</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.29</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-25T15:47:09.107</Published>
      <PackageHash>FbPKT39J13sHNDSEAcXfj69nF8jlZ6GlqWG/ghxOuOaaTKfvz0WbYtNnXLakOuhzG7yTK7IJnrsE+BqYTWOd6w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37079</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.0.29/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>213</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.0.29</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.1.30</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-26T10:47:41.463</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.30</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-26T10:47:41.463</Published>
      <PackageHash>9esIhLnBgptfeOmclqM0NBh+rcC7PCSXRMrRY88aeVsG1we8pCMOd7watONdrVjixrMJMzboqEBZlRA5Tz6ebQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>41374</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.30/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>229</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.1.30</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.1.31</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-26T13:28:55.26</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.31</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-26T13:28:55.26</Published>
      <PackageHash>AeXdPTw6SLStuFCjDU6m+bX5Q0Yp+3PNdQOrzr1dCuKo9ZgA3Yq28URPTUsT1TyJgah6bNEO5/omMJpyvVEngA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>41842</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.31/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>211</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.1.31</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.875-rc1</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-11T23:17:32.96</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:(, ):|Microsoft.CodeAnalysis.Common:(, ):|Microsoft.CodeAnalysis.CSharp:(, ):</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.875-rc1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-11T23:17:32.96</LastUpdated>
      <Published>2016-07-11T23:17:32.96</Published>
      <PackageHash>fjRHZLSBvwch22q2riC6IRLlJ1jgOQNdEQloqXI9nxvLljG8MCxmgRY6LQap52X067eJldgm56f+pUVvMMYrVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19788</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.875-rc1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.875-rc1</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.876</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-11T23:32:35.23</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:(, ):|Microsoft.CodeAnalysis.Common:(, ):|Microsoft.CodeAnalysis.CSharp:(, ):</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.876</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-11T23:32:35.23</LastUpdated>
      <Published>2016-07-11T23:32:35.23</Published>
      <PackageHash>o3Y5e46W6IkrTfrI9THeKEYU17IuLE7K2GM5EzAEOVsTXkRJ2FGI766cw/7ABm3j9FBK9TjkTXud1PMdIMjR2Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19776</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.876/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.876</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.877</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-12T00:16:22.58</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:(, ):|Microsoft.CodeAnalysis.Common:(, ):|Microsoft.CodeAnalysis.CSharp:(, ):</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.877</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-12T00:16:22.58</LastUpdated>
      <Published>2016-07-12T00:16:22.58</Published>
      <PackageHash>fT2nNq15zwYiGnxWMGhfTZtFSYbgV8IDTIZPGlZGvYJG4LfFfJrC9aygPc+zR2LmaTJuT202WaLBs8IHYmE8iw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19811</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.877/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.877</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.878</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-13T12:34:25.767</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:(, ):|Microsoft.CodeAnalysis.Common:(, ):|Microsoft.CodeAnalysis.CSharp:(, ):</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.878</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-13T12:34:25.767</LastUpdated>
      <Published>2016-07-13T12:34:25.767</Published>
      <PackageHash>8WaPGbjGLlUpMktCBnsWkL26kb5e0zxTQTjuLt+LA9SwaGBF6YQi58/xwTQ9/U5WAXGLu7uL1vU6l4qb4HUlDA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19856</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.878/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.878</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.879</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-13T13:40:07.073</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:(, ):|Microsoft.CodeAnalysis.Common:(, ):|Microsoft.CodeAnalysis.CSharp:(, ):</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.879</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-13T13:40:07.073</LastUpdated>
      <Published>2016-07-13T13:40:07.073</Published>
      <PackageHash>hsht8/EN/4obO4YO7q5KJq69Q+1aesziBNUxLLxuoLFx30p5SYemaQLMMZ86/icLAHz+ttwl8HNvKlRL4H4vKg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19856</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.879/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.879</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.883</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-14T00:06:12.73</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, ):|Microsoft.CodeAnalysis.Common:[1.3.2, ):|Microsoft.CodeAnalysis.CSharp:[1.3.2, ):|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.2.0, 1.2.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.883</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-14T00:06:12.73</LastUpdated>
      <Published>2016-07-14T00:06:12.73</Published>
      <PackageHash>QqLJtm8Rk9EdVgA6jK1vLJjtFck/lQPxJAhIRRedCzY9mTivnAYPDe/ls41zJtNY77jyo2sTaOG+dyUm0IzT5g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19695</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.883/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.883</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.886</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-16T00:18:13.883</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, ):|Microsoft.CodeAnalysis.Common:[1.3.2, ):|Microsoft.CodeAnalysis.CSharp:[1.3.2, ):|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.2.0, 1.2.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.886</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-16T00:18:13.883</LastUpdated>
      <Published>2016-07-16T00:18:13.883</Published>
      <PackageHash>EY8JnOIzu5gtUS6r0zmeVTCv3B3JkWEDJDJZ2nKbNhJ0EUcmS7Sgz0ERW0LJBfRlhdlmq76tMn83G1qVSp+hkA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19726</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.886/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.886</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.887</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-16T14:22:13.8</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, ):|Microsoft.CodeAnalysis.Common:[1.3.2, ):|Microsoft.CodeAnalysis.CSharp:[1.3.2, ):|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.2.0, 1.2.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.887</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-16T14:22:13.8</LastUpdated>
      <Published>2016-07-16T14:22:13.8</Published>
      <PackageHash>Y8DC8oWfGgdBLnJT5YBVU3xIRPj0Eoj2FmvzXw8/GDWwzVfNB2qVxcS5zglMMd5brNBxtVsGSa6a0fSo3OkZGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19727</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.887/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.887</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.888</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-16T15:31:44.183</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.888</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-16T15:31:44.183</LastUpdated>
      <Published>2016-07-16T15:31:44.183</Published>
      <PackageHash>Bz9/g7e8BkK3+yB//J2mLn4LRE/4QhN+JXbE0vbcT3QAhwRYFtxhYvG77WPtbJ/nLDFhcZsXUhRDipRIKE5Qgw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19720</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.888/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>76</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.888</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.901</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-18T16:50:50.817</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.901</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-18T16:50:50.817</LastUpdated>
      <Published>2016-07-18T16:50:50.817</Published>
      <PackageHash>KsXnKo3jNrMOMA9JT6KcXfPVJqjX3mI1ay8Bd8aY6OtiQzMH0kcWWMYJPa5Uuji95rQquZVVCopCBAYawZgWyA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19745</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.901/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.901</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.902</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-18T23:01:37.633</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.902</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-18T23:01:37.633</LastUpdated>
      <Published>2016-07-18T23:01:37.633</Published>
      <PackageHash>y/K8ZGl7T6NOYDvFNna9AvoLUmlIcETE7uWvQN4/j522SH/SE46jDPBwVH8YwuvPnuZ3kD83R6qK4YNHpm6esA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19739</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.902/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.902</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.903</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-18T23:45:58.057</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.903</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-18T23:45:58.057</LastUpdated>
      <Published>2016-07-18T23:45:58.057</Published>
      <PackageHash>oSrOtXDdOX3asqL6j5ySnnMA+N1TJGH4vpM7YFZ1Sd5v1YTQLoAjrCW3U3ngsSBJO4rI+LwNvWOL1EJ3BkYHWA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19722</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.903/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.903</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.904</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-19T00:32:25.35</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.904</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-19T00:32:25.35</LastUpdated>
      <Published>2016-07-19T00:32:25.35</Published>
      <PackageHash>xT6rGlHu9hL7ni1Lo9+KGNGzJEdk3R7fMpho9TBSnCxSziwLCwuC1W69YxBUVHNZba1hDHXlPyBNGzSLNPLyrw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>19773</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.904/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>80</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.904</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.910</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-20T15:24:31.717</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.910</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T15:24:31.717</LastUpdated>
      <Published>2016-07-20T15:24:31.717</Published>
      <PackageHash>mV2UW/DOpDEIX7YqaKmRaEKkD9FF7sFyvYSHg6kOlyBs+wA1ylX2v7SaK649lNsJVh5ajQAw1cNxUOcIii3llw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22211</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.910/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.910</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.912</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-20T16:13:44.997</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.912</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T16:13:44.997</LastUpdated>
      <Published>2016-07-20T16:13:44.997</Published>
      <PackageHash>zKDCX6RcawHvniDOKTkJjG2hWVJ9qqO2oygYDfuS8kqZixZzcyqj7uYWfBqfFrn21TnXA4cwPj3Fsy/5fhjCvA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22508</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.912/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.912</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.915</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-20T18:18:15.26</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.915</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T18:18:15.26</LastUpdated>
      <Published>2016-07-20T18:18:15.26</Published>
      <PackageHash>+NuOfq2Puk1jw4qCMvdgdJYfjSEogPPrgkcRwugCkxeCcieW1XS+BYpeuMMln9uZyJFUbjRTUcPRXhqyhwh2kQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23035</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.915/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.915</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.918</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-20T18:49:41.947</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.918</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T18:49:41.947</LastUpdated>
      <Published>2016-07-20T18:49:41.947</Published>
      <PackageHash>o+wBVcWrX8IK8cx9/sTDh1I/xdV3XY9OyaO1Y0QvkLaqyzL0dfcgur3dxIPg79SZJ6O94QxpGDQRuX6jNbSKAg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23166</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.918/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.918</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.919</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-20T22:14:28.233</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.919</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T22:14:28.233</LastUpdated>
      <Published>2016-07-20T22:14:28.233</Published>
      <PackageHash>CXieqiShSSlS40enEETiEnBQN9HNXK0Xx3OiOCuxkIDmiy5T/yvPSSsreVcR3HB3mjY4xEDeagUAfV+13yfbZw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23167</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.919/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>77</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.919</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.920</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-21T00:55:41.433</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.920</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-21T00:55:41.433</LastUpdated>
      <Published>2016-07-21T00:55:41.433</Published>
      <PackageHash>wenOIvzn9Yk5bxbtnwxRUsvYbykbHGCwaF7pTcmDM8IZZaj/Yz7/I7gr2gGrH3nLuXufouBnZUwhzTOXifFO9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23196</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.920/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>77</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.920</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.923</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-21T23:51:27.95</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.923</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-21T23:51:27.95</LastUpdated>
      <Published>2016-07-21T23:51:27.95</Published>
      <PackageHash>xJSYg80vhmCVL/DbPCJ3qCRul/Di5PNuvvPB3xrmpiGfWcT6W8FJGLN8mpBE5UKUfhVc4rkUHa3xnZ7kupeRHA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26494</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.923/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.923</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.924</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-22T01:04:59.933</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.924</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-22T01:04:59.933</LastUpdated>
      <Published>2016-07-22T01:04:59.933</Published>
      <PackageHash>H8WE3mpOPZ+JJ9zev3KNRUvfhJxAqVIApJuQGmlIjb3/iY0kmtx9DwL2fTgEBAEN6R+vt3jP2ooigbnapIW10A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26845</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.924/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.924</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.927</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-22T09:24:49.257</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.927</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-22T09:24:49.257</LastUpdated>
      <Published>2016-07-22T09:24:49.257</Published>
      <PackageHash>iQzZCohNDWRHsVfCjHa+rVftq2dkrihXrnNi9HN++eQ/FpA0H6Tw5HA8v9wWzL/dh2/L35dSgMeLI8MzAQtTig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27096</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.927/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.927</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.928</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-22T22:01:04.177</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.928</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-22T22:01:04.177</LastUpdated>
      <Published>2016-07-22T22:01:04.177</Published>
      <PackageHash>nZuysqSdkNHZiWER2q3JfO1tBw7wN0l9NFJamhznRgMTxa2FrmkSYf59vXqSKqPtKW3yKYIoHEwqBHG+1/MwmA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27228</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.928/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.928</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.929</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-23T00:08:01.99</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.929</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-23T00:08:01.99</LastUpdated>
      <Published>2016-07-23T00:08:01.99</Published>
      <PackageHash>SpXT2TqvOIVqZvbJBvtJrXafcWcpX2iuv0jGfb25sk2ujpIvwRBZodD6aFzqvO3uFJHWCAwuEZtOuRTJ419rCg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27043</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.929/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.929</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.930</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-23T22:29:09.363</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.930</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-23T22:29:09.363</LastUpdated>
      <Published>2016-07-23T22:29:09.363</Published>
      <PackageHash>b1g2acYkhJN+e/UweuTUwb5gvm8EcQZQf5yBPwYySuEpp8sH1zfa2HkoyiIjxoeXiMVD2jvq2Gt0foE5pqMVcg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28338</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.930/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>82</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.930</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.932</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-25T01:00:56.2</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.932</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-25T01:00:56.2</LastUpdated>
      <Published>2016-07-25T01:00:56.2</Published>
      <PackageHash>RyNX8lXNUXctqe3BIaLEWo5dFfkrz5T/P43JomwLoMBhI5VOzlf/v28Pl/EXHQ+pdzGCLsYemIsXCrXQGFKUnw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29238</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.932/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>89</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.932</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.933</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-25T02:19:28.827</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.933</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-25T02:19:28.827</LastUpdated>
      <Published>2016-07-25T02:19:28.827</Published>
      <PackageHash>Z49V4NBxFY0HjsXTBZxc6dEAIVV1eIU7z/xprEo0gSEIrjQzS2Fv0UB9jE6ch+0r6qEQW/+amkCKGOSqXr2tBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29285</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.933/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>81</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.933</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.935</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-26T07:55:47.4</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.935</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-26T07:55:47.4</LastUpdated>
      <Published>2016-07-26T07:55:47.4</Published>
      <PackageHash>nrzbHwWfIYEz7WheU5Nk2d40/lEadW2EwnyLKv3RRqjZ2JiNCXBvRIiAczW+/IlwRT/Nxzq2fXzCPrhqeugUfQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29328</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.935/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.935</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.936</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-26T09:18:47.84</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.936</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-26T09:18:47.84</LastUpdated>
      <Published>2016-07-26T09:18:47.84</Published>
      <PackageHash>KemPHiaBjB3W+K2m1dCs9BoWVPVxl6lOOqh07WqxlULI2F636+A6xXJ1Qn5e0n750Fcl2QwaQdvWBp33F/noxw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29312</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.936/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.936</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.938</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-27T00:40:18.613</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.938</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-27T00:40:18.613</LastUpdated>
      <Published>2016-07-27T00:40:18.613</Published>
      <PackageHash>VmTvw7hU3F/YHG1doTsCsw8GcAzdWlersPKyA6lkIi6GLbrJ8yN7CluUqdRVQS2IkqQhOA4Q/DA4yKAsD4EThA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29313</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.938/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.938</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.939</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-27T01:36:54.153</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.939</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-27T01:36:54.153</LastUpdated>
      <Published>2016-07-27T01:36:54.153</Published>
      <PackageHash>O0jsV6ecxcIaKYx+WxohqZzHJmSxDNgTDETyRsSPm6c+3PPQf3JsB70999Z6+CJlmjqNGUrkLGhErNuESxy7Iw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29305</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.939/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.939</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.941</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-27T02:08:29.24</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.941</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-27T02:08:29.24</LastUpdated>
      <Published>2016-07-27T02:08:29.24</Published>
      <PackageHash>cdGhE1ndP1zUg80JkXlaTVxxgtQ29sGx/uZT2xFm/++25ZMaaUSxwHouQDw3k1Id2DrCr2PtEBiEFmY7VBrTxA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29280</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.941/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.941</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.942</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-07-27T02:28:55.943</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.942</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-27T02:28:55.943</LastUpdated>
      <Published>2016-07-27T02:28:55.943</Published>
      <PackageHash>T18AmmdKv9SMXaGH5H4jq5T9+44zQBNePmxX/YLXHsaP4Gt5GxToKu68s9M81dTc9iad3E6o7oB7LZ8xYhReBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29354</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.942/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>94</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.942</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.945</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-05T18:07:39.04</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.945</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-05T18:07:39.04</LastUpdated>
      <Published>2016-08-05T18:07:39.04</Published>
      <PackageHash>WM8Q5nPqNTy/Q6L1+l1L2rca8B5HZooFxe6dfIAJDQFFoaFVSS99kpK1gDQbpnKJdUABFb+R/xih81NYGCXFSA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29354</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.945/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>78</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.945</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.947</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-06T19:15:23.503</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.947</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-06T19:15:23.503</LastUpdated>
      <Published>2016-08-06T19:15:23.503</Published>
      <PackageHash>QTEso4KP0VsmwqHVhiMidf4LH53TXwTLWah5EGUGdGn/WIpOEC8/7MGt/OHt0izTzb/ufD0WjUSvKM5vCutmUw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>29357</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.947/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>89</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.947</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.960</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-09T00:12:18.953</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.960</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-09T00:12:18.953</LastUpdated>
      <Published>2016-08-09T00:12:18.953</Published>
      <PackageHash>/GfvYKNC7dYzxr1pINNg8TdNgLkhJr4I4VAdnqp62luLkJVi8alSrx2YS3PkwHyemp69jvHXTt3rq7HOSImc6Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30128</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.960/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>77</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.960</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.961</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-09T10:37:16.673</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.961</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-09T10:37:16.673</LastUpdated>
      <Published>2016-08-09T10:37:16.673</Published>
      <PackageHash>CWrSM0OfwmdK+c8YioC1ssk/FcHEmlXserp2blkUhkPZ9uslXH6dGwhAs9sledOeVont6q1KU6Ec4VVaBQDQJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30129</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.961/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>72</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.961</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.963</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-09T11:21:23.447</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.963</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-09T11:21:23.447</LastUpdated>
      <Published>2016-08-09T11:21:23.447</Published>
      <PackageHash>EP60VQE7BiVH6rlZhgt1EB4KFXKpBYO8kw6Yvu/gWYF/sH/kvJX9PwDgkAVGLE/CoR3H3gcAXJE1Gmhv+R7gsQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30129</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.963/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>93</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.963</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.966</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-15T11:11:52.807</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.966</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-15T11:11:52.807</LastUpdated>
      <Published>2016-08-15T11:11:52.807</Published>
      <PackageHash>EgJYUOutTW0VyqW98J4TEKQzu4KQr2xXWnfg4Ft3A0O8xpv0gigUBzXHjKorHSqvAV/kjH0VTL4AUuraYmgmUg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30486</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.966/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.966</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.967</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-15T23:05:34.673</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.967</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-15T23:05:34.673</LastUpdated>
      <Published>2016-08-15T23:05:34.673</Published>
      <PackageHash>vaZJ3bblD+gDEj/tdtfna4t9Ms9Ru84PlR65PqHLOgJgjDLKLzvg+l1ccYpJ1qoJ3EJtk5d1PiCz1FS2uyKV5g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30489</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.967/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.967</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.970</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-16T12:19:09.98</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.970</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-16T12:19:09.98</LastUpdated>
      <Published>2016-08-16T12:19:09.98</Published>
      <PackageHash>psN8kxHq+T4IdRuFQGAUdCySdeN0UWDstD8onXeFfGgDHmWEBtpRQE+P4je7mxtSfdU4ZsdkMB0L0Bo0ZNl4BA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30489</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.970/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.970</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.971</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-18T16:11:11.21</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.971</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-18T16:11:11.21</LastUpdated>
      <Published>2016-08-18T16:11:11.21</Published>
      <PackageHash>rNx+deLkoefbitqQmy67GNjUsO/qMAQaGQ0Bn+7vDbp8Iy0oWXyei+/hrrl9t/3jZXziZpIr4sWbaNcbEZ7LQg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30489</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.971/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.971</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.972</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-22T00:22:45.627</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.972</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T00:22:45.627</LastUpdated>
      <Published>2016-08-22T00:22:45.627</Published>
      <PackageHash>bnmrHUbDsSwL/GIfQjHah9WJo7V7kO9ooTzdp+LIFlhuSNNthIDD2LzNsyG+Yirg1JhS7YjpxkD8IW13fwV9Ig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31016</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.972/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.972</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.973</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-22T11:10:03.01</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.973</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T11:10:03.01</LastUpdated>
      <Published>2016-08-22T11:10:03.01</Published>
      <PackageHash>FFSqHFuWYCrsgRnChpgYO8lg+i64UJHzZ8l9No9w4lWJYMTskDMlfzSr9KQrp3LkTcFF/Eh7VZnm++0sluNItw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31019</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.973/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.973</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.0.975</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-22T12:48:16.123</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.975</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T12:48:16.123</LastUpdated>
      <Published>2016-08-22T12:48:16.123</Published>
      <PackageHash>o7OCQUc2JJMbww3AuFBjBibqHt9J0Vr/UdtQ4hjoeroffX+RmRZVF7vz/naJ2GtoBaU3riD8ldWfZ0+GrR7xtQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31017</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.0.975/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.0.975</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.979</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-22T23:36:10.003</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.979</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T23:36:10.003</LastUpdated>
      <Published>2016-08-22T23:36:10.003</Published>
      <PackageHash>DNF+JREkMUGkkPpjJHxLbqBAteC4wChYgqXECCL/dnXg6AYEOqbaq717n3lgnsvtYLA4FRw6GqbEBTEUbHIuNA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.979/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>76</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.979</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.980</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-24T00:08:36.313</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.980</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-24T00:08:36.313</LastUpdated>
      <Published>2016-08-24T00:08:36.313</Published>
      <PackageHash>+mhRvw37+yS2SoX2l+zELKasukqdZ6vXP2N7Z5jwdlBCH7H1igjwbAON5QhOaAKIvXlqmz/677bRiVS6kWxc7Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31244</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.980/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.980</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.981</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-08-24T09:25:41.027</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.981</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-24T09:25:41.027</LastUpdated>
      <Published>2016-08-24T09:25:41.027</Published>
      <PackageHash>Geg9hpSW70nNm++BYSZJONkzKOUZQ+2iKk/NRFQTrfBPoanUZo+znjZ4erZQy4AAYZvGTPEwea2T4Ct1or4lTQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31224</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.981/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.981</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.984</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-09-22T11:09:32.033</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.984</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-22T11:09:32.033</LastUpdated>
      <Published>2016-09-22T11:09:32.033</Published>
      <PackageHash>nqrvdAxxGLW3prOGPaPkw0EnRWMz5tokJkHfIg2Ix+51zixTpWwED6XqEuL4Pn0TxaWUna2sD7PCpNJj4gscmw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31253</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.984/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>68</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.984</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.985</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-09-22T12:00:47.81</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.985</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-22T12:00:47.81</LastUpdated>
      <Published>2016-09-22T12:00:47.81</Published>
      <PackageHash>/Rq6zAlhds4c3tYabTeDPPe5b4dqLqwsOwEbm4T78+R0a+iZY2o8bZuGPrTSruRNp2QFyLmWc2fxN0palRBvFA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31248</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.985/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>66</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.985</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.986</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-09-22T12:45:44.18</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.986</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-22T12:45:44.18</LastUpdated>
      <Published>2016-09-22T12:45:44.18</Published>
      <PackageHash>A5PWfJQDhaf7d47Tz6bld3bQaUXFYOcAQV5RTJIiTF9O8bKB5Yf+e+K2n+UwXbxMyK1oMBtu3VKxyS9pE9860g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31259</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.986/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>65</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.986</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.987</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-09-22T15:38:33.033</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.987</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-22T15:38:33.033</LastUpdated>
      <Published>2016-09-22T15:38:33.033</Published>
      <PackageHash>Bp8j8eotDD/e6/Zoeeco/m+F46c7hWp7cBI9oiQ+P3OwdSQLLbn2MQPbI1JU9gsT0x8iEKivqnUzasfBPHQetw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31271</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.987/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>68</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.987</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.989</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-09-22T23:09:27.7</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.989</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-22T23:09:27.7</LastUpdated>
      <Published>2016-09-22T23:09:27.7</Published>
      <PackageHash>uSoIuL0vINEUeCIqHGvVdXeDaQoCgl8xDrQDTy2HbJt2rVn7jFZzRMWipSHOgphahV0aCrNtW+78bhXMfrDt7A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31359</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.989/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>89</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.989</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.991</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-11-28T04:20:47.24</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.991</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-28T04:20:47.24</LastUpdated>
      <Published>2016-11-28T04:20:47.24</Published>
      <PackageHash>9+TOGc00m7z4+PeVVlk0PZghNWp785mDOGmSAHtOXUZFA1gNUk59SQLNx2E4VLep2u/JV9zQzjlg8nI3DQH6+w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32240</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.991/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.991</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.992</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-12-14T00:56:36.65</Created>
      <Dependencies>Microsoft.CodeAnalysis.Analyzers:[1.1.0, 1.1.0]:|Microsoft.CodeAnalysis.Common:[1.1.1, 1.1.1]:|Microsoft.CodeAnalysis.CSharp:[1.1.1, 1.1.1]:|System.Collections.Immutable:[1.1.37, 1.1.37]:|System.Reflection.Metadata:[1.1.0, 1.1.0]:</Dependencies>
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.992</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-14T00:56:36.65</LastUpdated>
      <Published>2016-12-14T00:56:36.65</Published>
      <PackageHash>Hc2pwYGLVhKCMSxA7zXJC83mGkFppC+UUhGm8COadbahKstXtWXWqOUaxgPpAkpb5a/yCcuqpxyDE1WDdSDSIQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32149</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.992/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.992</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.996</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2016-12-15T13:05:43.183</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.996</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-15T13:05:43.183</LastUpdated>
      <Published>2016-12-15T13:05:43.183</Published>
      <PackageHash>KCrEFjAQTfEM56NdVm2U/0LM3T0d4gGxYRdiwWjOK96h4B6WylpHDdWdnj5hIhbnMJ5t0CWZ5DFoQQ3FmtAWJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32078</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.996/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>98</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.996</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.997</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-01-31T16:58:40.45</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.997</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-31T16:58:40.45</LastUpdated>
      <Published>2017-01-31T16:58:40.45</Published>
      <PackageHash>pOWuBMDW6bKBa2BmWkgvuMF35NsjAxNLY/eaFQwK6guby20WSjoC6xFqizY6j+385ncK1go0BSy4sceUspchOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32080</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.997/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>59</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.997</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.1000</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-02-01T15:02:26.073</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1000</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-01T15:02:26.073</LastUpdated>
      <Published>2017-02-01T15:02:26.073</Published>
      <PackageHash>eLcCaoxsdQZ/HnCnr5axMeozazGeVJOHoXQcIODJ0cirCg+bA3nUYKh0ZuJk6WWmb5Xxu4c2C4CrgumGXeGQ9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32091</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1000/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>75</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.1000</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.1002</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-03-09T17:35:18.51</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1002</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-09T17:35:18.51</LastUpdated>
      <Published>2017-03-09T17:35:18.51</Published>
      <PackageHash>bJnnnysdS947YCPwl4xrR9Zvvs2GvtC4+4+Ydagbfwd8+VYOYUdgzYJT/Pczf76TScKCRUuL9iMbWspulbirkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32092</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1002/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>47</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.1002</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.1003</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-03-10T02:20:06.287</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1003</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-10T02:20:06.287</LastUpdated>
      <Published>2017-03-10T02:20:06.287</Published>
      <PackageHash>dVcau9NDHTUTvQOmdeNMPG2lS48DwAxSNsaL+FJXjZGpspV4e0dOT4L9jgFlrS/MdAv/s+EUywlf+biyDSWKxg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32084</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1003/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>63</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.1003</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.1040</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-03-19T19:08:38.27</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1040</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-19T19:08:38.27</LastUpdated>
      <Published>2017-03-19T19:08:38.27</Published>
      <PackageHash>loPKYdFSGD+KRo2N7Mz1jpPmmQW/pb0h3g/Tvi5WmRGLYYvJLba7ohMtZcqERVmBfTRPvzflt8Y4KVuFE0iiwg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32085</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1040/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.1040</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.1.1.1044</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-03-24T17:17:10.16</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1044</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-24T17:17:10.16</LastUpdated>
      <Published>2017-03-24T17:17:10.16</Published>
      <PackageHash>/mkO+c1KHkoItDIMNC3HDviKxIvX9L4kyJPcV1D2h00sGPfqjgIYgpQarfGBOj98GxOEVz2tyLGEomtLbLGuEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>32089</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.1.1.1044/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Remove dependencies on CodeAnalysis and related packages.

Previous

- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>71</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.1.1.1044</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1085</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-17T16:04:53.997</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1085</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-17T16:04:53.997</LastUpdated>
      <Published>2017-04-17T16:04:53.997</Published>
      <PackageHash>QlKFJX71GSTwrgX44UIzUmpfmv+Kezdw1f/x8Umfx1VEP72NPuSmOki+CzF3wef//aA5EJS+j2jVaLbL4e1DFw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30901</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1085/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>40</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1085</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1086</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-17T16:26:50.713</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1086</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-17T16:26:50.713</LastUpdated>
      <Published>2017-04-17T16:26:50.713</Published>
      <PackageHash>VHUkbkRzC2geWBJwGDMW4HP14jqC/OwFw2AF3K1A5AxjeEhEv0lKBk2MWpHT1eNK6+x83PnwngfCKvcA4hGRWA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30896</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1086/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1086</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1088</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-17T20:43:07.927</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1088</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-17T20:43:07.927</LastUpdated>
      <Published>2017-04-17T20:43:07.927</Published>
      <PackageHash>dnTFdlEBCxizab2e9Gg1Tpf7uqwS2H33ltQEEH+AFCgvurNKDjLdR7OE1dl5gwOuljfa5h+LM/l1BvKOsUIstQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>30897</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1088/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1088</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1092</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-18T20:08:14.71</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1092</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-18T20:08:14.71</LastUpdated>
      <Published>2017-04-18T20:08:14.71</Published>
      <PackageHash>AjfnrVB5vYm5MUecJGPkfAA0Tv6IBw0S66n6MD4BXe1fU0EeWYbNHjjtZmsI1Jhf9DB/Wb+9nkCD/nPnIO0cVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31346</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1092/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1092</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1093</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-19T10:33:17.493</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1093</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-19T10:33:17.493</LastUpdated>
      <Published>2017-04-19T10:33:17.493</Published>
      <PackageHash>4WvyqvFtjjnfyIk3QuQNxmcUjXjclt/Jrf3FCXYpPtsIgcF/NQsoclPnU4TYZKbEm5wvPxs+Dtibr2e2Ob596w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31343</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1093/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1093</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1095</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-27T07:11:18.043</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1095</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-27T07:11:18.043</LastUpdated>
      <Published>2017-04-27T07:11:18.043</Published>
      <PackageHash>OG/Gtf6mcbj7OX8pZ11uGQSCg8lKVz4VPkKGMQMzO+hXrWUGU/QQQVzuGa9O2rxqZeG2uwbzi6yjQePJh87TbQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31342</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1095/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>46</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1095</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1101</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-28T10:18:45.4</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1101</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-28T10:18:45.4</LastUpdated>
      <Published>2017-04-28T10:18:45.4</Published>
      <PackageHash>J6n+0lhaW4FAHokHbQea17oM3nxdw8hk2bszMKYfjPfJMu0+/dodD1NH2TsXQHpjmd2+hmenOxUZcqibyExvAw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31339</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1101/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>41</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1101</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1103</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-28T12:43:55.883</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1103</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-28T12:43:55.883</LastUpdated>
      <Published>2017-04-28T12:43:55.883</Published>
      <PackageHash>OkTf9ID2Qji5wqrTDVC2zWt3LIxpLJagI/taNr9oEHnvqfwasK29gqdq6iYo/pRXqQ9G0ChwPVD9YSJOfX998Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31346</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1103/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1103</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1104</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-04-29T09:28:57</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1104</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-29T09:28:57</LastUpdated>
      <Published>2017-04-29T09:28:57</Published>
      <PackageHash>ghAbd4y7rJBR+a09FL32xOXJDYreMYHOUgWC4atKBRhKOWzdb1tEXLj6fnRK/WTNucLT6qsipBwsxHDi2n9ycQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31341</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1104/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>54</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1104</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1111</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-03T16:56:51.603</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1111</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-03T16:56:51.603</LastUpdated>
      <Published>2017-05-03T16:56:51.603</Published>
      <PackageHash>QYeOL7PNQw4Ux7Q5tsQSHFIgS05tc+bKYnff3+Yco4A0t5vOb037LpY6y75x1z6wfdKinBVBn9p407XD2KzXWw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31420</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1111/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1111</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1112</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-04T12:09:06.21</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1112</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-04T12:09:06.21</LastUpdated>
      <Published>2017-05-04T12:09:06.21</Published>
      <PackageHash>rQ+wrVG40xpSwICqjdNGjkTVZHmWssjda8CrS/tU+4e/3XfAjplAGZOUPg7r2fIVeImHrDjeyTlDPYpJXwsuzg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31429</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1112/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1112</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1114</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-04T13:04:08.943</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1114</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-04T13:04:08.943</LastUpdated>
      <Published>2017-05-04T13:04:08.943</Published>
      <PackageHash>1m9Yo06WUHWmdBCzC2awKWWgK9bR87QTxG2ktCuHbhuSp5JFTJCFgY8nE2uVTXkzDiNNnw+69Wfkmuu8JOPCXA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31429</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1114/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>53</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1114</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1116</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-04T17:40:04.973</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1116</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-04T17:40:04.973</LastUpdated>
      <Published>2017-05-04T17:40:04.973</Published>
      <PackageHash>mtdqRt5ATVX99JVTSibxU4S/rpFWugqteKqzdASZEJgawFkgzcgNIvhroleqvHPV3MFy6RIom7SKbh5h/twkKw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31420</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1116/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>41</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1116</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.2.0.1118</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-04T19:39:42.397</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1118</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-04T19:39:42.397</LastUpdated>
      <Published>2017-05-04T19:39:42.397</Published>
      <PackageHash>Cn5VNp4e3DtDcMiHB8G4aZw7wmaVEVMPR2gHpW77twL5l0MRBf2YWrwOnV+PlbheVQPLswGx6WL9FDEj8UBeGA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31443</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.2.0.1118/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.2.0.1118</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1128</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-05T14:46:44.85</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1128</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-05T14:46:44.85</LastUpdated>
      <Published>2017-05-05T14:46:44.85</Published>
      <PackageHash>I+W6GLKcdN4MwnzAIrz16uVG6ZcVrn14r2UDInt+AaFXM36a6GgL1Me+u3gi3zsO7WegXRiNBOKcuW9HI9dbcg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31439</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1128/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>51</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1128</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1131</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-06T12:45:03.437</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1131</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-06T12:45:03.437</LastUpdated>
      <Published>2017-05-06T12:45:03.437</Published>
      <PackageHash>YzGtsZpCUNH98lJxRekPsAqzEl0HqyCU4byS0ljYFpd5RRGXzRhhg17hl1CX9EAx3eIIOPb/2xVSBQNZmOLj9g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31445</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1131/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>56</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1131</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1135</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-11T01:56:36.88</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1135</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-11T01:56:36.88</LastUpdated>
      <Published>2017-05-11T01:56:36.88</Published>
      <PackageHash>57ZecMjMmxXo22MG2pDXY3a462hwgmgENFjr1HIlqtaTrhEG+1wDZCzwK2KBh6S0iiGhFFNo+RH8qEc6Nfyfag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31446</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1135/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>56</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1135</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1137</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-05-12T12:47:52.367</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1137</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-12T12:47:52.367</LastUpdated>
      <Published>2017-05-12T12:47:52.367</Published>
      <PackageHash>M2Jqo05Vn30W8NiD9sf8KFvP43heDpXiHhw2Gs9vfak4aZGTatSq97hb/LdG+nNKsXcB7D9gm48Nnu3QOEYm9Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31443</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1137/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>61</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1137</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1140</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-08T10:22:35.52</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1140</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-08T10:22:35.52</LastUpdated>
      <Published>2017-06-08T10:22:35.52</Published>
      <PackageHash>uskSGUUWKABiLAvEtRWwfpIGF4Od+L656d6/5QPhLVaCuVxh9mTCSHXPs1Z0XQFFUMzJTJNZkXVO13VughkpOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31558</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1140/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>39</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1140</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1141</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-09T14:57:14.85</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1141</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-09T14:57:14.85</LastUpdated>
      <Published>2017-06-09T14:57:14.85</Published>
      <PackageHash>iyfONi7VDLQ/z0RqYJJOWEUxt5eCajG571VBtM7+YUQ8VGi/lalQHKSO3KvBRJ3aENGzzlf+ulNKrXkY2kxUkg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31556</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1141/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>55</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1141</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.0.1144</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-12T23:04:59.54</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1144</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-12T23:04:59.54</LastUpdated>
      <Published>2017-06-12T23:04:59.54</Published>
      <PackageHash>QTcAWbVc1c4PXE1srz3unaA9dyooJKWiBKA7TdG+fHBJowa5Fvq46Cqfzk9rw8klhXVWmb5Kif5A8orlotoM8g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31556</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.0.1144/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>45</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.0.1144</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1148</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-15T23:01:44.607</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1148</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-15T23:01:44.607</LastUpdated>
      <Published>2017-06-15T23:01:44.607</Published>
      <PackageHash>2aaJYdSZGLTYIhWmf98RCI3y60AL8innnQGOIUDYlVfEpTt4kwbow7V9at86JDVarreUxD3gkeSDqpyJCJUyjw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31551</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1148/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>39</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1148</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1151</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-18T19:48:10.027</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1151</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-18T19:48:10.027</LastUpdated>
      <Published>2017-06-18T19:48:10.027</Published>
      <PackageHash>fN5HyKVLL7z4qlxOvNgtqCPTiRLaW7uSqxtIQoSz+0ijns8YNwLdL8dkgEVPJQNY3XHGKmmZtQmzVgZCitSJig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31549</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1151/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>51</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1151</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1153</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-19T23:31:20.307</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1153</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-19T23:31:20.307</LastUpdated>
      <Published>2017-06-19T23:31:20.307</Published>
      <PackageHash>uTp6U3NdcJcMUFlaMa8vCx3+4mcRKpdOwlL3AnpudtJNw3NqF+9zD2cPrgtfSYhSQzAn20Uy2NuRV0wVpvusfQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31554</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1153/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>38</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1153</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1155</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-20T16:20:03.007</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1155</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-20T16:20:03.007</LastUpdated>
      <Published>2017-06-20T16:20:03.007</Published>
      <PackageHash>qIR8P2iP53QyGNJd4D5e09O5zxMjaCO9JFYoDvf+Mms9+oga+8ZbXXF4aX211DtwUhEqXyuzzgSROwQVXGJEQQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31549</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1155/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>38</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1155</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1159</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-21T16:13:48.393</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1159</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-21T16:13:48.393</LastUpdated>
      <Published>2017-06-21T16:13:48.393</Published>
      <PackageHash>NgxP0GbW8Q/68pizr6TXxQXYYHE/Kl2anJ6WNfG1/rO8lEZldwaSmUjwhQ6i3hm2zoTmR//tfz/IYbXCsNMQow==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31549</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1159/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>35</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1159</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1160</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-06-21T20:01:42.347</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1160</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-21T20:01:42.347</LastUpdated>
      <Published>2017-06-21T20:01:42.347</Published>
      <PackageHash>sySvUg/+NkozKkkOoszsmpvpAVBIOIviil9rfXUbsZ89Q8azYFR/EQmGOIv0IcXYczai7BBkK43I1dlc/Mj27Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31552</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1160/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 

Previous

- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>58</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1160</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.AsyncRewriter</Id>
      <Version>1.3.1.1164</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2016 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2017-07-12T09:59:32.657</Created>
      <Dependencies />
      <Description>Stop copying and pasting code in order to support Async/Await! Shaolinq.AsyncRewriter generates async methods from your sync methods using Roslyn.
AsyncRewriter is used extensively by the Shaolinq ORM/LINQ project.</Description>
      <DownloadCount>6241</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1164</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-12T09:59:32.657</LastUpdated>
      <Published>2017-07-12T09:59:32.657</Published>
      <PackageHash>dVD40C23jVxjzRo2eXWL1uYvs0+Zy4/mWc8LsfcU8MjpFbUk3N/s3PHcu6XPtM8QqeSCqJ4upZBqpzHyN5c3pw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31590</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.AsyncRewriter/1.3.1.1164/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes># 1.3.1.1164

- Set developmentDependency flag on package.

# Previous 

- Support method expression bodies
- Fixed naming bug with calling explicit interface implementations
- Async methods are now generated with XML documentation comments from originals
- Fixed explicitly implemented methods not being called properly 
- Remove dependencies on CodeAnalysis and related packages.
- GeneratedAsync should be generated after references have been copied or compiled
- Changed csproj targets to generate async code after references have been resolved/compile
- Fixed handling of generic method type parameters.
- Fix support for method calls being performed on the result of rewritten async methods.
- Support null conditional member access operator when rewriting normal calls to async.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Automatically generates async versions of your methods</Summary>
      <Tags>shaolinq async await codegen roslyn</Tags>
      <Title>Shaolinq.AsyncRewriter</Title>
      <VersionDownloadCount>34</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.AsyncRewriter/1.3.1.1164</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.5.0.28</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2013-12-01T00:20:32.557</Created>
      <Dependencies>Shaolinq::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.28</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2013-12-01T00:20:32.557</Published>
      <PackageHash>ywTJa41PmuClkQo0KvDYwOBqky7Q4Tc8eot2BsHInso24oPCmwXjtsfgw5qF/x71vJRLnt4fX3S+DDW1Hp4Kyw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10818</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.28/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.5.0.28</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.5.0.29</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2013-12-01T00:42:49.263</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.29</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2013-12-01T00:42:49.263</Published>
      <PackageHash>4IxPCteb05loLMN7OqR/qym9GcJBeM7NEu4U9pPhWEWkv4J+ZrgP09GKZMuvJdl8kViN+PvVMzlbpggQK5m4gA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10823</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.29/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Initial release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.5.0.29</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.5.0.35</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2013-12-08T23:52:54.327</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.35</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:14:07.89</LastUpdated>
      <Published>2013-12-08T23:52:54.327</Published>
      <PackageHash>XVvnBdh4tho3+cOvVrEs9IHRAYT3t76h/u5c6GHy9t2GKo7o0+nmKimmkt8/scQTntVPvz4Gpdy4ED1jSNvLfg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10359</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.35/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Simplified persistence provider model (single database per data access model). Bug fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.5.0.35</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.5.0.36</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2013-12-09T00:23:50.017</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.36</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2013-12-09T00:23:50.017</Published>
      <PackageHash>1gr9gC3amco9KCcjuUmz6oYeXJyoCNwUoRAVCqahp5yKD/ic6/avfNDyHAcg0JaRcTwqufrQEWkyRIiNwC7Xaw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10339</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.36/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Simplified persistence provider model (single database per data access model). Bug fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.5.0.36</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.5.0.51</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-01-05T00:01:49.793</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.51</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-01-05T00:01:49.793</Published>
      <PackageHash>Zt8P/K+VRhmmApsJ5LqIPOnV/Y0bjtSBkm+z94EB8TryYnofeS1sZ96vNpa0M65vbDEYCVJ7PtNqvfeeCbuLTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9773</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.5.0.51/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Big refactor to simplify API and architecture. Lots of support for more Linq features. More extensible expression based SQL generation for SQL DDL as well as for INSERT and UPDATE.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.5.0.51</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.97</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-01-16T16:41:22.517</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.97</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-01-16T16:41:22.517</Published>
      <PackageHash>Du3PYvpsh9T4Cyc3yC7G4wDcC8dSds2Sk4ULZffHp/VKSNcpF4MLuoVDC6cW7ccanhmjR6oWzP95gSldwmYNbA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9564</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.97/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Major update with more optimizations, simplification of the provider API and now full end-end Mono/Linux/OSX support</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>131</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.97</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.101</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-01-21T09:38:44.453</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.101</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-01-21T09:38:44.453</Published>
      <PackageHash>mVRcPz5XTWaGkL2M+pjNoJ3C2q/FQcSSAdi/dcrUk4Bz0haaRjOSMogtLltSF0swLS1bXVJ19IKApkDt+Pe2rA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9528</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.101/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added support for Postgres native enums</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>159</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.101</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.127</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-07-01T10:14:26.827</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.127</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-07-01T10:14:26.827</Published>
      <PackageHash>W0g9uCVr7TOQErQRxJumeFqxPPHT8J3rJcfwrey/J+2GfElJVGlDQHst8mf1015T3WPGnmaGYEwIZPdxgoWANA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9536</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.127/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Lots of refactoring and tidy-ups.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.127</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.130</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-08-04T16:36:19.76</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.130</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-08-04T16:36:19.76</Published>
      <PackageHash>QXEP9dINrswZBKa5vI25kSHMLB5aZMM0kKgMbwnZlPxrvlwLJKrDbyeDRF1m8AS3XPrRDubK8XwLQrMcu5oacQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9602</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.130/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed self referencing one-to-many relationships not creating related property with correct name. Allow related property name to be defined in Backreference attribute.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.130</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.134</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-08-08T12:38:28.987</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.134</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-08-08T12:38:28.987</Published>
      <PackageHash>XRT0r6OCcf1/Kr02lrwgD2L6E2y7xj1WZMQ+noaImytF08XzYZhwKeGzReweR0PR53dl1hGrYyDg5EUklX3ZzQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9595</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.134/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed queried objects not being cached within the current transaction if they were returned as part of an anonymous or complex type.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>120</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.134</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.20.0.756</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-01-30T08:25:10.28</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.756</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-30T08:25:10.28</LastUpdated>
      <Published>2017-01-30T08:25:10.28</Published>
      <PackageHash>bGyGoRC/DFZRB+wF2TSXWnKPVZIK8ybst0lGHlkD+ShmC8TjSoxb5X4UZtX/3lKm9Pe2v5kr97k6BRpyAt3i1g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57315</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.756/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>56</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.20.0.756</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.21.0.756</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-02-09T12:21:32.763</Created>
      <Dependencies>Google.Apis:[1.21.0, ):netstandard1.3|Google.Apis:[1.21.0, ):net45|Google.Apis:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.756</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-09T12:21:32.763</LastUpdated>
      <Published>2017-02-09T12:21:32.763</Published>
      <PackageHash>3RmIv6BC01a7Yo5pOnXWYwzTMxHRB75Wf0eVRRTWvOpJ37um9kaavMNO2MC+lg/NR+i7KB4ho2/IfV+tJa60UA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57316</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.756/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>69</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.756</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.21.0.785</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-02-27T08:23:29.39</Created>
      <Dependencies>Google.Apis:[1.21.0, ):netstandard1.3|Google.Apis:[1.21.0, ):net45|Google.Apis:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.785</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-27T08:23:29.39</LastUpdated>
      <Published>2017-02-27T08:23:29.39</Published>
      <PackageHash>69WGNww+1hEQGLal3z+8uLAO3CJlITumKqeQp5hZD2R4RCx8kr7jBKNirk8hd4M5Ao4DK5LmpM6692y7ymb9AA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57340</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.785/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>61</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.21.0.785</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.22.0.785</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-15T12:03:43.393</Created>
      <Dependencies>Google.Apis:[1.22.0, ):netstandard1.3|Google.Apis:[1.22.0, ):net45|Google.Apis:[1.22.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.22.0.785</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-15T12:03:43.393</LastUpdated>
      <Published>2017-03-15T12:03:43.393</Published>
      <PackageHash>wU5SSSaW9eyCQFFGm953VQ4mDFzz6boMgoDxKgM5WQQAfLYnU1zNfASQ6Wl/8mZR2h0Ld9CYmcRUNQb8lrvHYQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57350</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.22.0.785/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.22.0.785</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.23.0.785</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-27T16:02:10.317</Created>
      <Dependencies>Google.Apis:[1.23.0, ):netstandard1.3|Google.Apis:[1.23.0, ):net45|Google.Apis:[1.23.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.23.0.785</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-27T16:02:10.317</LastUpdated>
      <Published>2017-03-27T16:02:10.317</Published>
      <PackageHash>6s2nA7ZbmlKxknDmrvZvhqK2vyDc6Hnox5hLwF7DQUIsEw9yicrjqLu7i//SIlx6jTTbC+0s3iQKZIhV1LiBCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57069</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.23.0.785/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>48</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.23.0.785</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.24.0.818</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T11:18:09.287</Created>
      <Dependencies>Google.Apis:[1.24.0, ):netstandard1.3|Google.Apis:[1.24.0, ):net45|Google.Apis:[1.24.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.24.0.818</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T11:18:09.287</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>A5e5yaq0XifFOM7F5WwVY9FCdUwjVINcC6h8Dn6AXSS8MFQCLENxh03wzcNQ7mkHgAvU+bk2RSkkV+s1iBOM3A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57726</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.24.0.818/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.24.0.818</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>2017-03-30T17:51:22.743</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.24.1.818</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T15:58:49.537</Created>
      <Dependencies>Google.Apis:[1.24.1, ):netstandard1.3|Google.Apis:[1.24.1, ):net45|Google.Apis:[1.24.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.24.1.818</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T15:58:49.537</LastUpdated>
      <Published>2017-03-30T15:58:49.537</Published>
      <PackageHash>b7GGzvOGyWbLsox1/rahaAe2R2brN6zu0uQniMRDyVuVYabm0TRkSai9KFhqfKiEwDiv5vvmxN0D0dJp2CnLIw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57710</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.24.1.818/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>45</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.24.1.818</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.25.0.818</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-04-10T08:59:02.78</Created>
      <Dependencies>Google.Apis:[1.25.0, ):netstandard1.3|Google.Apis:[1.25.0, ):net45|Google.Apis:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.818</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-10T08:59:02.78</LastUpdated>
      <Published>2017-04-10T08:59:02.78</Published>
      <PackageHash>YVzWDaDIliRq+4OiA9LKPTJdF+M72xP2v23ajNfNX6dT2vXvII76iz4N86DSariaxEbJ5rVeO8LgTgHecTTPsw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57713</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.818/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>46</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.818</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.25.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-05-08T08:26:04.2</Created>
      <Dependencies>Google.Apis:[1.25.0, ):netstandard1.3|Google.Apis:[1.25.0, ):net45|Google.Apis:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-08T08:26:04.2</LastUpdated>
      <Published>2017-05-08T08:26:04.2</Published>
      <PackageHash>P3VFCt40AS7BkF9dfpYFeUYh2c4GWoAA1XW6wPjWqdRNGRipt1Ug+t7UYVh37FHdGhJ1c/cb/y9V1nNIBSOEZA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57697</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Acceleratedmobilepageurl v1 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>48</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.25.0.854</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.26.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-23T12:56:25.08</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.26.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.26.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-23T12:56:25.08</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>lZqkE+RfQh9s/88I7wzZfL46ZndXHFkyqfnc399ZP2Se6nEw+DLEH5dJRHRtbatdKjnaq+XpX6ZWoFam6QhCJA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37245</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>47</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.26.0.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-05-23T13:11:04.73</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.26.1.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-23T14:13:17.263</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.26.1, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.26.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.1.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-23T14:13:17.263</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>l23iwJM+jIXPM6of3DbsupVH5Etloj8hkr4SKlsU+yCCTElUUEgI3fyKe4sScnIbW3re8OS8snih2asNQpl8MA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37210</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.1.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>47</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.26.1.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-05-23T14:42:32.233</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.26.2.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-24T09:08:09.34</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.26.2, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.26.2, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.2.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-24T09:08:09.34</LastUpdated>
      <Published>2017-05-24T09:08:09.34</Published>
      <PackageHash>poBYEyBgjRBw7hCENMsCeazFQeRiwjt9mbPp4iwZy41pIA1SZBJ2lAJ8i2V3ZfuKqjunes06z8v7p+imqGLHGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37233</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.26.2.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>45</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.26.2.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.27.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-01T12:56:30.25</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.27.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.27.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.27.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-01T12:56:30.25</LastUpdated>
      <Published>2017-06-01T12:56:30.25</Published>
      <PackageHash>hhz3MaDPzOjm57NSLQ3v/92ccmg/hSpSjwPjkYR3ty4De1OnR9/ilOwdR3Sa/Gos3sdhsIurYv0RHIHOSD9kOg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37397</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.27.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.27.0.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.27.1.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-06T19:20:16.74</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.27.1, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.27.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.27.1.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-06T19:20:16.74</LastUpdated>
      <Published>2017-06-06T19:20:16.74</Published>
      <PackageHash>C7dOHaztd4PpN+pt5oYh9on2Af/qdsjYho1XuyCgMggRrEgTsEBtraTfJl3QQw2iUefSTy2ZANEpJWSEvnLCwA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37382</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.27.1.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>50</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.27.1.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.28.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-19T10:03:50.063</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.28.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.28.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-19T10:03:50.063</LastUpdated>
      <Published>2017-07-19T10:03:50.063</Published>
      <PackageHash>cBsg6lWVSq1OvoZpj+/3OH8uqB9C7zo65+XGm3JULYRGMgLEvgpdRdkth9kVoHs/Q4FXF3K1FdwMBV4SWSwQcA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37400</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>23</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.854</DownloadUrl>
      <ProjectUrl>https://github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Acceleratedmobilepageurl.v1</Id>
      <Version>1.28.0.929</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-20T08:34:39.713</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis:[1.28.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.28.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Acceleratedmobilepageurl v1.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/acceleratedmobilepageurl/v1

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>2363</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.929</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-20T08:34:39.713</LastUpdated>
      <Published>2017-07-20T08:34:39.713</Published>
      <PackageHash>tk1EH8ysMIKE/vRbxBGzcrmbrmf4KmIIHN289CsvOB+U5r/wE7EkDa8mHeXD4h0pfzjIV9omkYX17a3KkfuiMA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>37401</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.929/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Acceleratedmobilepageurl.v1</Title>
      <VersionDownloadCount>22</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Acceleratedmobilepageurl.v1/1.28.0.929</DownloadUrl>
      <ProjectUrl>https://github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.27-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-19T13:35:57.103</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.27-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:05:44.71</LastUpdated>
      <Published>2013-08-19T13:35:57.103</Published>
      <PackageHash>VCUafz7ZaCP60gvRJt5D4tvO3GvZD4f8AdPYUu+uD9vJcfDPxtQuByriNuC/B4xpRpLXz+Uh5yoWoEd9dEqrNA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22478</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.27-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>120</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.27-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.28-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-20T15:22:26.167</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.28-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-08-20T15:22:26.167</Published>
      <PackageHash>vtafuYuaRktwGWscpZoNIB/umeNeV6xzn1c+8oE95axSQHoMHbBWjGJtnw1ki0aQ1M3Pu010TmG6fd0959wp7g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22472</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.28-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>121</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.28-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.30-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-10T23:17:34.773</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.30-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-09-10T23:17:34.773</Published>
      <PackageHash>zMFx9ezWJtwZiz54dxun1uvNv/Me8Mtr8FnSM4HpwrecPQpcMi+AkWqGBOEg/THLaZCXcqQPxfFKVJVYFzza+g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22477</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.30-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.30-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.31-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-23T15:12:52.53</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.31-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:15:10.807</LastUpdated>
      <Published>2013-09-23T15:12:52.53</Published>
      <PackageHash>UOBvK2Z5G1pSjQAWi6eRAdtiz/znolxuIPF2d5fNJ6jBOULkJPZ2o1xIH1iXye1K5+VdPc+CVexRuk7/xtjXrA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22462</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.31-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>118</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.31-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.32-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-01T14:13:23.537</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.32-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-01T14:13:23.537</Published>
      <PackageHash>AfWDR+pHQrbKgYPNUKVGNUCVwNqQarIMOTgvj0WzgryShI/7SL7MCRUNw02KpDTU1xhs+sEfZyyt3XFENcMATw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22454</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.32-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>121</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.32-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.33-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-09T23:05:47.003</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.33-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-09T23:05:47.003</Published>
      <PackageHash>Xvqj/c94XazbpKJj7Tf8cLcKdqf1wmcDcrIfyllkV0hB4m6W09F5iGXqz8dBxtLpfBFpRdqGaVJIAyRin8kfzQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22458</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.33-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.33-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.5.0.34-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-15T19:04:21.397</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.34-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-15T19:04:21.397</Published>
      <PackageHash>PtqQvxZVAmV4HwGgBHXajIJui9paJuDBash06LJhUNWH0b0RtUwW8fYIdiXgzb/TCy0ZH6Mb8dYjy+7aDSBVPQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22455</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.5.0.34-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>118</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.5.0.34-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.6.0.35-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-23T19:53:46.497</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.6.0.35-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-23T19:53:46.497</Published>
      <PackageHash>Sc69/XaaNSipFJYXoxMxmcs9Oj2gAep+IOxW/83vY01sSuPjXo0vcPo8fYj05mfBPYmukxNtGZGaA65xlycXDw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23107</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.6.0.35-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.6.0.35-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.6.0.36-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-12T16:37:37.407</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.6.0.36-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-12-12T16:37:37.407</Published>
      <PackageHash>jahmyKcWyrK8Zfs2YwGO5bPwrEk0AwWRjLOVARwBhyK+e7zWKVLEzc4HANgQiswp7qs44b282S8L5x52xiq3KA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23060</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.6.0.36-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.6.0.36-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.7.0.37-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-18T01:06:46.673</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.37-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-18T01:06:46.673</Published>
      <PackageHash>OUh9+YrgjQinD5qdnN/6MCZOhhbIsKWlk9Dwt8tNj/ufI65wCUH6DXvAhc0+9Ws4Jvc6I3fgKd1UwWyrGZXWNw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23030</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.37-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>121</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.7.0.37-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.7.0.38-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-01-08T22:57:43.393</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.38-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-01-08T22:57:43.393</Published>
      <PackageHash>tByCLGz+7pCjCiFnKEqDzhXxF01TfpLCVhHOh8B7me4weWVkyjfe9db5T5i40YCzGKaBiT36qBFn9HPvkhnC2w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23039</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.38-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>115</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.7.0.38-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.7.0.39-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-04T17:15:32.733</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.39-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-04T17:15:32.733</Published>
      <PackageHash>/2XPJDfFBb/9878Ljh0yFCTFsm1IGOf/fzSpNlZVpIJGJ1Cf9viW3nlS14dRIZotYhcVOEDIlm7K9aIRrIu7fw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23021</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.7.0.39-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>114</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.7.0.39-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.0.390-rc</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-17T17:58:35.257</Created>
      <Dependencies>Google.Apis:1.8.0-rc:|Google.Apis.Auth:1.8.0-rc:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.0.390-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-17T17:58:35.257</Published>
      <PackageHash>elFl7ROXzEll64TPLgJcRqUFLgXIuSwNBAHHht0fEzKTmVRKwcdAjqbSTs76ua0pkQZrigbwNAuFMvtFexx28w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23031</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.0.390-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.0.390-rc</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.410</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-03-17T14:35:53.547</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.410</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-03-17T14:35:53.547</Published>
      <PackageHash>etC3NjjBYlI/i9kcKntASLGrmE7NyA4z+0lu7sf8fOZtk6OlSYDngUTMHAW5N/kHo/QkYuQyD4sPxseylGQKBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22890</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.410/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>160</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.410</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.420</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-01T22:20:53.567</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.420</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-04-01T22:20:53.567</Published>
      <PackageHash>15pJrD9KOVyorFdH0pJyKxMjufU+clLPoNnZSAke6iSpsKlhpbvMA5bvAyELGGKXkOoDsOphW0FKPM+8l3eXuQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22895</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.420/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.420</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.430</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-08T19:11:25.1</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.430</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-04-08T19:11:25.1</Published>
      <PackageHash>KOO8cVFWXlU+c42f9rZ93zMfqKFEry1Qskqd0H2PXjZcFVXBgp/Rn5bRn9D2yzDZkPF8hx3Z7ia69iQgrvU5nw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22977</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.430/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.430</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.440</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-14T12:44:05.093</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.440</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-04-14T12:44:05.093</Published>
      <PackageHash>qYDaAFV0LW+UIblxW8LKfEephOW4YYFwEaSfSLSlerHiz1ZMNDMuBQn8ZN28OM8z60ijXS/0RhV2WN0a+sbpvA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23135</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.440/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>141</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.440</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.450</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-22T15:57:57.827</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.450</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-04-22T15:57:57.827</Published>
      <PackageHash>ZXh4nMxtkIgJmJ/XPXWXxcL3Fr0xSxy5EL9/qNPFIGNaPX4/51nzv2z0wQFQ3BqEZYxhlnT/bGlFAMkr4Ke6/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23132</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.450/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.450</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.460</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-29T18:50:48.397</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.460</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-04-29T18:50:48.397</Published>
      <PackageHash>zFHhqZt3GJ6cQqD0lLvoz/u09gUyN260yjwKNMemg9846e7/3zFV+5XcazgjOJUz4Xv4CUZ1Bsbkx6ygFmnU8Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23138</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.460/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.460</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.470</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-05-22T18:42:40.99</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.470</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-05-22T18:42:40.99</Published>
      <PackageHash>567RVJ97bJ8F3XYNi3UagSr+9dt7Xy4i+iVMah8A8Ub3Hk9bjguYdqa4163pu5iGWvYj+KF3o6hZqnBkr7mbjw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23073</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.470/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>149</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.470</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.480</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-08T18:17:40.04</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.480</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-07-08T18:17:40.04</Published>
      <PackageHash>UQL0i5yuOtfi5xa2NMdcWBz6MmXs20I9cxkWOgx1TK160Ydrejs+//2W9jN6Dz9ekTxfCoy0blSrXTH5ZlDuUg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23152</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.480/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>139</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.480</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.490</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-15T22:42:47.487</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.490</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-07-15T22:42:47.487</Published>
      <PackageHash>JOB7PE2v+zXKVD3QvU4HQNCNrWqcEpkLIRbV9KGd7L2wUDDE4KSnlugdnloG6NCSsr1CEmqbwwzl6aSxLoYo3A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23151</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.490/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>139</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.490</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.500</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-23T13:31:44.787</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.500</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-07-23T13:31:44.787</Published>
      <PackageHash>90HpSi8YT180VNXF8HXcTdDFqPCTJBlibzbqlBRZINInnK5r57k2GuhaxXf5ZukjUWD3I89P5sBBNYq/v8bR/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23150</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.500/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>139</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.500</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.510</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-30T19:15:17.017</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.510</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-07-30T19:15:17.017</Published>
      <PackageHash>0HxXNTIj4fOrYa57kL9FjHIlxTNmT70VxZ0iVfgertrOWTzbL3aQNwxPjw3BPog1B/d4hV9Y6egAffMGQbFhqQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23150</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.510/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>128</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.510</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.520</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-12T21:17:32.047</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.520</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-08-12T21:17:32.047</Published>
      <PackageHash>Nwc6TkuWRn54A9+R5jc3Xr2S/Wf54syrZfAyuE+/HfjFwBgZyesOUOPXuSrgSTJI1S2BTSUeQ1NiGeZEoxEdAQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23043</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.520/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.520</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.530</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-19T19:32:03.29</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.530</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-08-19T19:32:03.29</Published>
      <PackageHash>vG0+GiNNJtET6aUkr7kDuGj+X0nRdot0xHYjmKHA7ldocBsgJV48QUPx30yfTd9prD79w7csBH4L6AGn4ksWzA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23062</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.530/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.530</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.8.1.560</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-10T13:59:13.87</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.560</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-09-10T13:59:13.87</Published>
      <PackageHash>XXCl00WVpNrXpHClVcFSohFpd9s9ExRLouHCtNFVWwOqe66q8HHfWNPyW6bTvKDA35DPv8X+MytPU+UmMNfmPw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20368</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.8.1.560/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.8.1.560</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.580</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-30T16:10:13.923</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.580</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-09-30T16:10:13.923</Published>
      <PackageHash>JEVMCnSSY9iWIiY9YfFJp+ujNIB08TXzZ9fnvdkg1El4GIEgQD937ErzOASV9hEq/+lppf7uUAvz6OrZ3bWQLw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20441</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.580/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.580</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.600</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-07T20:30:26.807</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.600</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-10-07T20:30:26.807</Published>
      <PackageHash>34p1XFsORcoTsKCHalSCqKU2aGaS6Bt9NOkscBG506/RBXnWgqzi1Zn/pzKJlAxh1Ls4Pnc+dCFQuCcTIDGbLA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20435</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.600/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.600</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.620</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-15T21:49:48.56</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.620</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-10-15T21:49:48.56</Published>
      <PackageHash>LmZTXsf1foJ3nHtnb0Hd2atZlojOLotQrEvE65A1tLUKCwWceG/TGYt6LrDHf0ykUw1jk7nZpBSgcVcTS6Hj0Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20435</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.620/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>134</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.620</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.630</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-22T13:37:04.667</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.630</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-10-22T13:37:04.667</Published>
      <PackageHash>3A1kESNclaNb01Mc3b7jSJ7SD/eiZHQPaEhbAKPl4taWJwAUK8zScquSNmOg4uW8Dw9NUQyfP9KtD6YSO7UE0w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20435</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.630/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.630</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.640</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-30T20:15:31.99</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.640</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-10-30T20:15:31.99</Published>
      <PackageHash>/W3/0tKQfTxKgpThcBDhX7trSiObmlZwsZbMznigybP6wRHAzDweBdSTIgnuLOwOCw4E1wTIcxcOMU3Ugpfgrw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20432</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.640/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>707</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.640</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.650</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-04T21:00:28.7</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.650</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T18:45:07.737</LastUpdated>
      <Published>2014-11-04T21:00:28.7</Published>
      <PackageHash>DIxG+kXa8WeBFa+Kk9/h1JS7UcWDT3gt5kJJ7APKybF98Bs5p4MXVHcSRen51Soydko3TUxBvvSFxgw/kWKHKA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20752</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.650/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>359</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.650</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.670</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-20T21:58:49.077</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.670</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:42:34.833</LastUpdated>
      <Published>2014-11-20T21:58:49.077</Published>
      <PackageHash>PUCYel4ziHrhh04MX30/5lfV+sRKgQ2hTFohbAg4dHpzBZYCflrIqB333zHvVv0E8iPjaqOEfDElFYOPy6xvQA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20835</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.670/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>207</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.670</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1</Id>
      <Version>1.9.0.680</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-12-04T23:06:47.62</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1/csharp</Description>
      <DownloadCount>5705</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.680</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T09:59:59.73</LastUpdated>
      <Published>2014-12-04T23:06:47.62</Published>
      <PackageHash>UAtN99aOmzrZ7nbPfpLloSYG1OSq2KpCLf+rttTnR6fcev+Mg1v7Kc1F3RE/TAYeMMZBla7mHKYhuKNhn4bwCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1/1.9.0.680/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1</Title>
      <VersionDownloadCount>391</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1/1.9.0.680</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>2017-05-23T14:43:50.02</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.21-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-19T13:36:13.667</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.21-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:05:44.71</LastUpdated>
      <Published>2013-08-19T13:36:13.667</Published>
      <PackageHash>aOnSRiF4KvlFOLFf0J7KyDOrBhK761gyn9l6RtH/BzDWyu0Dhqq/+uiQKrf9GgL2uvV4njCFLqwUQI+dPnqCaA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22766</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.21-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.21-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.22-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-20T15:24:34.247</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.22-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-08-20T15:24:34.247</Published>
      <PackageHash>5TZ+tKI6f9wDnefvXfhj9gwGElRwNWU3iS/pQrlUqwh4JbT2EL/VLG5zLRrCCiou6u0vYokTDwJ9V3mvyHAoFQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22773</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.22-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.22-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.24-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-10T23:18:09.957</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.24-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-09-10T23:18:09.957</Published>
      <PackageHash>V/MkfjoC+iCrt++KsM1wBsJkCnPph9S3hR70FucX8NMh2RPBYoBYK6C15xSlRXqBLTJETfs+9CYtUF9eU3VR6A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22769</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.24-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.24-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.25-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-23T15:13:02.05</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.25-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:15:10.807</LastUpdated>
      <Published>2013-09-23T15:13:02.05</Published>
      <PackageHash>HOahbg79FpM0+VLMiAHNYM8yMlPaKjBQNR2hbnk0sHDoAOPoI344Urobqj8EXwRIyLgFgkKj6JfJUfQRaH9p+Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22629</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.25-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.25-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.26-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-01T14:13:30.947</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.26-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-01T14:13:30.947</Published>
      <PackageHash>hU/g6lgHoVUXFP051l3W534cRqJnoRRI3FDrEjQP4OfvutXQXJddeXXpWTZFdlUnVoorBiDB2pmd92IYwHC51A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22639</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.26-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.26-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.27-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-09T23:05:54.173</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.27-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-09T23:05:54.173</Published>
      <PackageHash>6s+xnBdzM66hZdJVpE3TNMVX1OVR0IJ9eqkRpVz8CgsyHyAK0HoazlYnGj5HN0uNbbA5VkVhsobH5l+ckJ6ueg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22762</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.27-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>130</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.27-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.5.0.28-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-15T19:04:28.403</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.28-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-15T19:04:28.403</Published>
      <PackageHash>eVQd/tZaQYLp1J9o5OyBWAove5oBgP949Uje80bZnjcdb8sdJbA/joL/b30HuKLvgDcxRXE59YRuWST9R5K8Nw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22741</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.5.0.28-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.5.0.28-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.6.0.29-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-23T19:54:07.397</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.6.0.29-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-23T19:54:07.397</Published>
      <PackageHash>+0t6ZnWhN3iz4EwV6SDxNmwD+i3xhnHZv6linEXo5vVMT6O+uv5jzyofXm+7VBSpL+3YceL+Thbe4awQDoSHAQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23428</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.6.0.29-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.6.0.29-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.6.0.30-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-12T16:37:50.42</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.6.0.30-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-12-12T16:37:50.42</Published>
      <PackageHash>Qghhh4mYgMmZFxRJ/RJKzQQCvDvjUpsPEfCdXhQcMWiVJlohRIBP1ems0RJuJriL3Il9YAPCxlhR/BhqYBvU6g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23518</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.6.0.30-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.6.0.30-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.7.0.31-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-18T01:06:52.427</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.7.0.31-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-18T01:06:52.427</Published>
      <PackageHash>GBq/jW/pnn1oWA+ku+stT5FqPYidsKZbArACyic6v+zYEeYrZBJ+Ki5k1/u6EJvBCAqjPAu5rieS/cWof/OoOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23226</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.7.0.31-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.7.0.31-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.7.0.33-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-11T18:49:05.853</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.7.0.33-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-11T18:49:05.853</Published>
      <PackageHash>PvWzBFjLYLJn30QasT3ERLkXzA8SU3U2NWBVSIkw6KmZRB/ZoMLWwokJnaEZ8xGv6L+TI4OFvBZOPgbEtXV2xw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23225</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.7.0.33-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.7.0.33-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.0.330-rc</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-17T17:58:42.213</Created>
      <Dependencies>Google.Apis:1.8.0-rc:|Google.Apis.Auth:1.8.0-rc:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.0.330-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-17T17:58:42.213</Published>
      <PackageHash>5kaTAix8mZWq1+juNs8/9IMqIf1lG7FF79TQfn7bXkIcRkszcvZjhSlFt03AHR0jYvhOFumXLoGiFUnh+2Xf9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23229</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.0.330-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.0.330-rc</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.350</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-03-17T14:36:06.97</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.350</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-03-17T14:36:06.97</Published>
      <PackageHash>pvchDpl76G3/InKkXU+cji6T3sLe/DDa89Wmq/SFpcidUB4K7HSRBx7Y7O9DN3ojU/GXYuwwlgXshR80y5w31Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23423</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.350/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>162</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.350</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.360</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-01T22:21:07.287</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.360</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-04-01T22:21:07.287</Published>
      <PackageHash>+X8jebly2g8Y1kuBPdGKqy3uNLLDyrqwMbvhM0G6mqYptW/fJYaBjrhRVM+kAOgYL9TBnNYZbb66lj3KAcdWrA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23305</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.360/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.360</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.370</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-08T19:11:48.807</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.370</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-04-08T19:11:48.807</Published>
      <PackageHash>PP19j8LN96oLuI4UrdVfF1IyIpgy5Bg/nhCYtx62hqy/TvydkjdDxQVf7hxHLkhV6LRcjyqCF++wbyDoIy8hZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23509</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.370/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.370</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.380</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-14T12:45:23.693</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.380</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-04-14T12:45:23.693</Published>
      <PackageHash>Y8zkqLXmlK4qOOXruNPptUpdofn5VXXZprONOtJsJw0pLTZbD0SdenhRT0aRp4xJShc/TGW0+ryaS3Qw7jTPWw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23532</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.380/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.380</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.390</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-22T16:51:23.69</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.390</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-04-22T16:51:23.69</Published>
      <PackageHash>e9D2yzjLJn37UviHOxHlyXq/sufA1ib0Lg6JbtOB0UHAtz+qxtEYM0QMBDmFVzdMY3y8e/7LxjfTOHNt5kUX2g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23546</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.390/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>149</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.390</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.400</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-29T18:51:15.353</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.400</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-04-29T18:51:15.353</Published>
      <PackageHash>iw4gRuU6sy4Iza6qjEycihN4yKl3Jw+UyCs7Y9iramr8LtQg3JawAjNCrRpDmXWV0CT96FMUj6IZOes7RSbwIQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23537</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.400/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>149</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.400</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.410</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-05-22T18:43:03.427</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.410</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-05-22T18:43:03.427</Published>
      <PackageHash>OlYsXT30ZrJVG45e6Rt22c+7Hj1GctUo+EmAnwgFHIrjZ/7VyWg7Finn5Fbh/duLv62sy+zzLWM1HSFM1iAEqw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23466</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.410/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>163</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.410</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.420</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-08T18:18:59.267</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.420</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-07-08T18:18:59.267</Published>
      <PackageHash>mnPzkuJx9IVFLOTNYtu0Y9tfVk3ajnrJ5bMGno7BDoD/9AVYYB2KwdxlAlH8/yvkCO2lc8XB1nugI9jlDnUvFg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23537</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.420/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.420</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.430</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-15T22:43:11.82</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.430</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-07-15T22:43:11.82</Published>
      <PackageHash>0wF3bXDt1B3XJXRQOaNoDTa7kHvQtT6fIRHP1+tb+diJBwII31LJk9uJWLo/s8fX+q92+HF/OBp5Uoy8jEIxJQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.430/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>141</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.430</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.440</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-23T13:32:11.733</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.440</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-07-23T13:32:11.733</Published>
      <PackageHash>DJmhtX3/8T1G/OhCaeKhF8BgulHfAW+b1RSMHsaA1B/eAeQHOb2wZiqbbdgRfOf/0gZNLmUeMM9um0jf74ULxQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.440/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.440</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.450</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-30T19:15:39.063</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.450</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-07-30T19:15:39.063</Published>
      <PackageHash>tdfkOGUX62wwwjP2EllzsmDp0LXzxt5M+cSjO3s6HpoBUCrBm8pYVEBnmQ14JLbaSy/ZFiqLDdHFJh1HyITXsA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23446</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.450/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.450</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.460</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-12T21:17:56.61</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.460</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-08-12T21:17:56.61</Published>
      <PackageHash>KRFdKlp7FmgO+JdYyQkAdPKar5usWckvrGGLdCo5CnMjeMPk8y8gbZnd2vwibaDwJK0ghOWl3aOkCTvhKPrvXQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23453</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.460/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.460</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.8.1.500</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-10T13:59:47.67</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.500</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-09-10T13:59:47.67</Published>
      <PackageHash>mfV1b9hhmqfOI+50U4PwvkAtQ66N0qSMoMt6LiX5UiUP8B1piT5jOHX2nhXzrQfulk1fIjqMHYXGx/vqVDMbhw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20753</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.8.1.500/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.8.1.500</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.520</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-30T16:10:48.797</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.520</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-09-30T16:10:48.797</Published>
      <PackageHash>qYJWHsD93rjgPw1KW4NXhhJC+NRxvyfbpvdXxMOJjaRpVd37xzSt8o3CtbqQfzpQtuhg0MFWnqSy23ZH8mVd4Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20762</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.520/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.520</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.540</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-07T20:30:53.497</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.540</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-10-07T20:30:53.497</Published>
      <PackageHash>Rk7RR5L1bgK3gnrMNCPe0TjK1C2l94CG5ihaUActlC7AgUs7NR6iRKvB5H4KPMRQZH5oLX7AOdIbAhLNgb8y8w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20763</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.540/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>142</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.540</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.560</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-15T21:50:13.347</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.560</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-10-15T21:50:13.347</Published>
      <PackageHash>fnwPgLekbtoaeRdzo1vZX4UiVELb2e12nyE9EJoQz0nfI3/cjMVY8EsNCXNmYkbnWo72LNlcDLQ3B4ld2rQ8Tw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20766</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.560/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.560</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.570</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-22T13:37:29.443</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.570</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-10-22T13:37:29.443</Published>
      <PackageHash>iTFMJOuf5fISnLirDNNyJxYh01sEHJQthjQzpUX+oyA70ayFOyarPhTcshqtvM9o9QJfsvNY+NiQ4z4mQLewsg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20764</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.570/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.570</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.580</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-30T20:16:04.613</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.580</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T00:38:55.923</LastUpdated>
      <Published>2014-10-30T20:16:04.613</Published>
      <PackageHash>cQ+YpiUopc+O55PtADpQpC45mY57NylLmSiuG8ikORlBt4A6ppdB88qaqSWcgIV4QriFllAc+DiBvJhJ1A0UkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20763</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.580/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>705</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.580</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.590</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-04T21:01:02.247</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.590</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T18:45:07.737</LastUpdated>
      <Published>2014-11-04T21:01:02.247</Published>
      <PackageHash>NXsYZqrpSK0Frszz1z0pYuBlboqUQ0HlUDWtuJ87lu1Rxv/e8fGDKGj7E8SnypckfQmnJvONq3H6BQ2IGeGvbw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20979</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.590/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>365</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.590</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_1</Id>
      <Version>1.9.0.610</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-20T21:59:26.96</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.1.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>5536</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.610</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T10:05:03.133</LastUpdated>
      <Published>2014-11-20T21:59:26.96</Published>
      <PackageHash>Co6Kxu0U1crSJwhh0AhjZ7ksJ+2/fLWIGkpYnr4WgABHL7y7P5OpfPs/Ib90n95IvZOr3pbQa4tvn5d/BVf2zA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>20976</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_1/1.9.0.610/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_1</Title>
      <VersionDownloadCount>459</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_1/1.9.0.610</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.13-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-19T13:36:37.507</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.13-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:05:44.71</LastUpdated>
      <Published>2013-08-19T13:36:37.507</Published>
      <PackageHash>eJGT41c4ErqyJ4kUuy68pz9vpeRhNPhIV+1t7T1Fjqq61/+N/pDVP4Www8+6HTzF2+z9CiOvGxs2sbx3AjoSZw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26151</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.13-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.13-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.14-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-20T15:24:58.163</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.14-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-08-20T15:24:58.163</Published>
      <PackageHash>A6a3lCaVAh1rT5DYqadOtwwg2xdzTm8XGukUJhaNIhANjMOuyn45DUPZpz40JUSlwq3paycnrD/DMXkvX0ra+w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26153</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.14-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.14-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.16-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-10T23:18:22.617</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.16-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-09-10T23:18:22.617</Published>
      <PackageHash>KvtZFrZkeo0nzVDS1NoTnbJmR88/4DYCFWnQtn8DjxsiGvof/oF99TaUM+g/efGJRvfCNUnfFbI/mej2ZDKSig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27201</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.16-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.16-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.17-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-23T15:13:10.467</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.17-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:15:10.807</LastUpdated>
      <Published>2013-09-23T15:13:10.467</Published>
      <PackageHash>QFJ9d6QrhRrnkrNA/yqZ7wuls+k5ebiWUicm5KQ/ac5ircysqAgUiVv6le/H8vSnb1+bmHFy+0sTBNJhcxcb/w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27192</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.17-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.17-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.18-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-01T14:13:51.723</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.18-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-01T14:13:51.723</Published>
      <PackageHash>ZLdLsW4FvQOqWuMBwn4V2RupupixCqVA12zbAJZw8JhPdl+x4e5l+0O9Ye8WWQec3Tig8FAHWRP56eiAf3C3bA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27073</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.18-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.18-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.19-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-09T23:05:58.787</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.19-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-09T23:05:58.787</Published>
      <PackageHash>ON2sFDNqHXZkMfWoJEYmPIKevmOOUVdKwEmYNYo9HCVj0punNKBwCsIfg1t9RK5lUSk1M6uESZvaSI+wigo2BQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27074</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.19-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.19-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.5.0.20-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-15T19:04:32.497</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.20-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-15T19:04:32.497</Published>
      <PackageHash>dU0rEsLsk3E3eli/lXEMftJdLyZ48MrhpFaaaSBIKGbMrDghkxW6rCf/xnRW704Yu6QFzfKqLM7MMkLOp2eMtw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27059</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.5.0.20-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.5.0.20-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.6.0.21-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-23T19:54:12.59</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.6.0.21-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-23T19:54:12.59</Published>
      <PackageHash>7uVyIYN41FhHlTYvI0Cs+kVGg0YYIx4j7AlxLM0UCEYrHzoMEfOyrl9smkOVWNKyZA/ZyGSZQKBiXYnUXnHNVg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27712</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.6.0.21-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.6.0.21-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.6.0.22-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-11T22:59:40.93</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.6.0.22-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-11T22:59:40.93</Published>
      <PackageHash>SDjM2DjGmFHmGBgw2yrWqq2gxX0BE5dBfVa6W8sbuTsryME/dCtD++1Y+kXSCxSZOt20LZi9OWoqGBZgbFCjTw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27789</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.6.0.22-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.6.0.22-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.7.0.23-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-18T01:06:57.337</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.7.0.23-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-18T01:06:57.337</Published>
      <PackageHash>ruwAFuWKUHb+je01fbifnB6R3wuOFMHBIpDwNTeMccIw2547J73LatPFX9DsJ/GoIIDyDOKdm+WcQVPGKYEZeA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27760</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.7.0.23-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.7.0.23-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.7.0.25-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-04T17:16:36.593</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.7.0.25-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-04T17:16:36.593</Published>
      <PackageHash>oPEfoJTLmxO4iMz+ndsWTHq5J2NXQkT2YZUovnvft9B19fqEiHdZDjmQEbPjkH20NJBpYq9/dkRhSKniskWF3Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27760</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.7.0.25-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.7.0.25-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.0.250-rc</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-17T17:58:53.643</Created>
      <Dependencies>Google.Apis:1.8.0-rc:|Google.Apis.Auth:1.8.0-rc:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.0.250-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-17T17:58:53.643</Published>
      <PackageHash>lFgV4aUvclBG7Kn/qzDoGeEOwKIfcvKFN8YvqS5b3T+itJ1cHpaoewz3YI8Kqnf20EEOzbeBcL7eF2PFs0y8Kw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27758</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.0.250-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.0.250-rc</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.270</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-03-17T14:36:20.03</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.270</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-03-17T14:36:20.03</Published>
      <PackageHash>VB81D4RWx6IDgtJPGihfcNyCOIrfVxRDFV7HUeD3hElTJ7Sz7PCVeGMwTn4zxhoBMNms/7CCztM0iFyXIuImYw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27760</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.270/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>165</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.270</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.280</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-01T22:21:21.5</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.280</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-04-01T22:21:21.5</Published>
      <PackageHash>1EV4AryDg2WqlpyDNvesTQBrPMtY6/6VHlVShqml+V2xFb84NjF+z1p58c7AfeiRdFUTVF/Yw7WnmBJP6oqjCA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27886</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.280/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.280</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.290</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-08T19:12:05.083</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.290</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-04-08T19:12:05.083</Published>
      <PackageHash>FxekoaIseFnwz/yaK6jI5NM5js3c0Njmkwz6TcC1oQr0yZzZgLL1g/mbfapAPE4MJXpM125QU5zm+qu87LT1Mg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27965</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.290/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>151</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.290</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.300</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-14T12:45:46.347</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.300</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-04-14T12:45:46.347</Published>
      <PackageHash>ryH/6JO3pisc38pXpBA0C0NsH+UuQbm2K7hRjEXTtmAuEv092nkXY8tTq+drpFDJZ4pIPq53B/xuIbCWxXTt6Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27919</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.300/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>157</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.300</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.310</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-22T16:52:29.54</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.310</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-04-22T16:52:29.54</Published>
      <PackageHash>G9EhoO5B4rKKeMFBn+QOheQyPXa1EyD15RsnEM3x53es6SQBpBIIYnPKa2k+f5JTzlyk8dNmU62sIbs2NXwG2A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27920</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.310/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.310</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.1.32</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-09-27T14:10:59.92</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.32</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-09-27T14:10:59.92</Published>
      <PackageHash>bHvvtCm8j04GrPy1hmeGqcSkZimpEFjVlE3jlq3/feulhRg6KOl/IISq6M5wpo5MfHP1Gw7GQu6LOxvRsKoCUQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>42403</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.32/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>226</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.1.32</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.1.33</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-10-01T12:59:24.217</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.33</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-10-01T12:59:24.217</Published>
      <PackageHash>xWop8eYuWw4qjMbUWrl7BIY8RBvN/41S6qRgVeL3JkOzrz7wMeoj+SQ//9iZVoaBlO0OGvvHkoa1s/bH4HUHYA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>58957</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.1.33/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>216</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.1.33</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.2.34</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-10-02T15:20:36.607</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.2.34</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-10-02T15:20:36.607</Published>
      <PackageHash>Az6aSdEo3B9dmRj1yuGuOHGIXD9omTwwSlzldOmNqi1zx+B+N0J83GxEVcr9nJif/kDB+VHFyOR3ex1P6sErvg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61058</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.2.34/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>210</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.2.34</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.7.2.35</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-10-03T13:59:52.663</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.7.2.35</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-10-03T13:59:52.663</Published>
      <PackageHash>b6JcCawmQsbe6RNmQg3U8W+QNsmkxsRIBBPJPQJLUZl6uqzHwQWInpJafTaY1jeCsc0j7IePAo1JE34eufNleQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61173</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.7.2.35/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>366</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.7.2.35</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.0.36</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-10-05T15:12:27.43</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.0.36</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-10-05T15:12:27.43</Published>
      <PackageHash>e46vf68AVbRZ63uAdnSda2bN9LhtDfAieBWxiR8/wJxYIU6wChJ1NYiDywiozWTK4C+GMlBVWxdJg3bC4TXSQw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61811</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.0.36/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>209</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.0.36</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.1.37</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-10-08T17:40:09.253</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.1.37</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T13:34:04.397</LastUpdated>
      <Published>2012-10-08T17:40:09.253</Published>
      <PackageHash>ohLF1+GTc099wXU0NRIKw9gMy0wgzIxyfJ6lgcOXN4D1PMdlLGcM8+88PgjlqDa0AMVmGAy1KXtMPpOLHZKAkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61916</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.1.37/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>3709</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.1.37</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.2.38</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-06T11:58:12.62</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.2.38</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-06T11:58:12.62</Published>
      <PackageHash>3PnmRUUBtKXaxaZFv4xhmeRghspDYDhyuA+D4LetoG4FlgWfknTIa/7tx2YipHv+sVYRYgBqV9skRVexiOJ0Rg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>65021</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.2.38/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>191</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.2.38</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.2.39</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-06T13:12:28.827</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.2.39</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-06T13:12:28.827</Published>
      <PackageHash>Sv/bKohOApoeSkUzcMrKDAMpL9mpoRUDUNnVq2LyCrXicgJHlAaPYKlO+2MuQa9MJEEE/AcsIc0t8UZPkRiL3g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>65522</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.2.39/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>220</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.2.39</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.3.40</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-09T10:52:44.517</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.3.40</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-09T10:52:44.517</Published>
      <PackageHash>Ndve4rlVNVyfyYLK4S94kSf/Rnb28mPnNt6AHGMgg3Hz5P3hYus7Ovbdb/De/mjiaSf/7BYlOvK++lbBs2hjYg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>65846</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.3.40/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>221</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.3.40</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.8.4.41</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-12T17:03:22.803</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.8.4.41</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-09T12:09:26.007</LastUpdated>
      <Published>2012-11-12T17:03:22.803</Published>
      <PackageHash>Fs5CVKn11jl7GfeljzKKR70CutYipEcx5zUJciJyvGSGTZ0aSgToCLSaNa88F9VJtngVNb3Hu8aj+Uxxw2mjeQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66510</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.8.4.41/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2887</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.8.4.41</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.42</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-13T12:24:38.847</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.42</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-13T12:24:38.847</Published>
      <PackageHash>T2wODQjR7oRYiCqqAk0T3ZbsKcNIJwqxknbgOTiWIXajQVWqHerna6lGAmTWEmbsemafXd/OdCNCxBkYfjMX5A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66509</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.42/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>190</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.42</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.44</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-13T12:55:16.063</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.44</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-13T12:55:16.063</Published>
      <PackageHash>FbFFHRVrn9fCm6cxK8Rf8gll26NrGavoRRExFtzpTFXCtIhrqhm5vERj5QMlWA1Hr5n8WFEFAeubPYb6amA1XA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66511</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.44/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>229</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.44</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.45</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-14T16:59:19.713</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.45</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-14T16:59:19.713</Published>
      <PackageHash>sCJeFxHyfVqpf2BaEzvevZjWOGYNzMLPhi4GM4gWd9qzXEIix3Mhr0JPoCqt3xVwkNesYsj7nLxaL8D8e9NL7w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66514</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.45/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>213</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.45</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.46</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-16T11:38:48.067</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.46</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-16T11:38:48.067</Published>
      <PackageHash>oFq3pdqd53Abj/zLWXCnTpbNiAtsVxO3GIuD20rCe7jz0IifEZ/KavQ++gTyp+itLDRQ5kLrhdJ7Lzg3VggdiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66480</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.46/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>192</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.46</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.47</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-16T11:53:50.557</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.47</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-16T11:53:50.557</Published>
      <PackageHash>oRH0OwJtrMgA/ZI2ya9uwYwDuF0kWTP+2JSMNEWjxOV2mafR1nQe8dARjDJzX3Ukgun2XSto7s2gJ3/Prne30g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66484</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.47/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>475</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.47</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.48</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-20T10:04:52.167</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.48</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-20T10:04:52.167</Published>
      <PackageHash>EH4/+mIQR0/ukAGf8ustwol5bSYN+hMiAwuyNK62h4/f9qhbJd5DhzbKE+CGZkacLrv8mNU/PTbOZ/CDVcm6pg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66473</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.48/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>190</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.48</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.49</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-20T10:25:36.933</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.49</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-20T10:25:36.933</Published>
      <PackageHash>wQdGoDukyBONBLbVlHrkDILyEmZ/AjHPDCogMZBdlZ5CW+ehw/GD4LDOVv3DjbXf82ZpsjZw1RcEQpqFrpfaVA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66534</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.49/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>197</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.49</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.50</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-20T16:54:41.153</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.50</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-20T16:54:41.153</Published>
      <PackageHash>kv3F+JFjMajyAPchsBiwuzMoNRv/kFjqANuhp4WIskFd1HX37luAHppMHFTLzmhcpoUYs3fx56GYC51IBIjtMg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66523</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.50/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>207</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.50</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.0.51</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-21T10:36:11.89</Created>
      <Dependencies>RabbitMQ.Client:[2.8.6.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.51</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-11-21T10:36:11.89</Published>
      <PackageHash>zn5vRkWscCtLvhcvZRiHXHKDPXEib9sjJHjCJ3/6M3FqbY9LfjNKOjbrCimCPBhFC8jxWjHFw9I6a9nloCxR2Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66872</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.0.51/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>189</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.0.51</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.1.52</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-11-21T11:52:14.53</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.52</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T16:47:00.137</LastUpdated>
      <Published>2012-11-21T11:52:14.53</Published>
      <PackageHash>tJADvgk4357pEHVlPdFY2mpPsyVfRVT8tt2gorxzqUY8YdWExxcdJlvqJgYMS7C/KUiw0lxrqRS9OOFh5/Xacg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>66862</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.52/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>811</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.1.52</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.1.54</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-03T12:12:56.353</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.54</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-16T20:20:04.173</LastUpdated>
      <Published>2012-12-03T12:12:56.353</Published>
      <PackageHash>JVElCdb8tvIjZA2aC2aHoa+DdbixB92d9DcgMaHnP0bMhiC5pRHRUMxuQcjtMueGnAv+hWn/mTk9oKl4hKnl9Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67033</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.54/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>343</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.1.54</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.1.55</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-06T09:10:55.447</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.55</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-12-06T09:10:55.447</Published>
      <PackageHash>wHB35AWggy9mDen1V0e1mwVxXO8PyQlGgaLyoqQKqD4nwTLZ/kpj9vmhlaqgKT2G1xXC7glUps64BPQFgKOvsg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67101</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.55/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>206</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.1.55</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.1.59</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-06T16:25:59.647</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.59</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-12-06T16:25:59.647</Published>
      <PackageHash>2w6pH/xR6zIX/IQgiIDcyXoD7Ypnei2E81e+zflSOEW4KRvCnUxSQRKOGoV4jCrfzP9PqrIFXSrxEkmoacIOxQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67107</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.59/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>228</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.1.59</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.1.60</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-08T08:51:13.62</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.60</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-12-08T08:51:13.62</Published>
      <PackageHash>Zvw//ygHnmJkt3Z7fKQCRswzg9hSOx3CiPz+Wfwjbcocc4QC5k7MRoZEw086/sOdHpDJjwmM/cn7AO+lZ2C8AQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67257</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.1.60/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>538</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.1.60</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.62</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-10T15:12:23.75</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.62</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T20:39:29.11</LastUpdated>
      <Published>2012-12-10T15:12:23.75</Published>
      <PackageHash>Z+ky0h0XQbu+/kZ8ryE16fw56Rpe7OHCw313iZNBHoOqFe5QCZeH+F0cVKlv/8tWlbgS1Qyz7jL5Cca+2cYO0Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67258</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.62/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>386</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.62</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.63</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-12T09:05:31.627</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.63</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-12-12T09:05:31.627</Published>
      <PackageHash>JfSBNsR9XJifUJGuQJB0r7N1YQJ2Rf9YujWsUz+gqmYKEVqiJDFVZZRsu4IlcYIh9ukurwF/bv/qiHb/x4it+g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67353</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.63/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>202</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.63</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.64</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-12T10:07:20.723</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.64</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2012-12-12T10:07:20.723</Published>
      <PackageHash>wW36Fq369zIAJ/noOBEg/hHuu0MMrwY6tHD59iI9NQIsEphFZRqHJIwK4hFIQvMCDHXVONn6uijuOTxNW0GSfw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67352</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.64/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>241</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.64</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.65</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-13T14:16:38.2</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.65</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-25T10:58:50.427</LastUpdated>
      <Published>2012-12-13T14:16:38.2</Published>
      <PackageHash>2WvjUKfjuGeiyhy63psE8LaZSC1F8uCutuu+x/YayAQrB6Shkf49ItVzp481SSVnzIy4KhTx3pRD4QkjVFr8NA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67934</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.65/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>879</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.65</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.66</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2012-12-17T15:32:15.007</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.66</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T01:30:23.333</LastUpdated>
      <Published>2012-12-17T15:32:15.007</Published>
      <PackageHash>67zscZqlFCd1/Zu2AdwwLEuZkAUClxpP7RmCH6ReZ1cUmLg5+M4NPCC1U4Jsm1D7p1dk2w0jwWhcUEq4FyvcQQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67933</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.66/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>904</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.66</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.68</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-01-10T07:59:01.02</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.68</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T01:25:19.867</LastUpdated>
      <Published>2013-01-10T07:59:01.02</Published>
      <PackageHash>2NM75ZqKV0+krr/D2nvNVueQoXmeR99YTSpVA0/bc5Eue+Pzz1XcjH0N89WkgPD2qGzmgrwfvoGbzsaOI6R9bw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67936</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.68/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>8019</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.68</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.70</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-02-05T12:27:55.85</Created>
      <Dependencies>RabbitMQ.Client:[3.0.0.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.70</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T00:19:36.66</LastUpdated>
      <Published>2013-02-05T12:27:55.85</Published>
      <PackageHash>n9Bj7uYo1Bg5hlnbt+k3+FHwzGEdreDGAFvDP+VD4sIuG4MsL6eLmJ7v3bzNvpAeLWDTfu7p+PZ2eVoGteL7Dg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67608</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.70/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>535</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.70</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.72</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-02-05T14:51:20.65</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.72</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T00:19:36.66</LastUpdated>
      <Published>2013-02-05T14:51:20.65</Published>
      <PackageHash>VNnctl0uZw6mn3bwS6/pLMf+Qg12S04JRj6AeUGBA9BecJuFUJO8pDkF+2o7sJxxkUHrpQ79rX8TDhyVzHaJvA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67613</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.72/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>977</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.72</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.73</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-02-25T10:06:06.09</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.73</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T01:30:23.333</LastUpdated>
      <Published>2013-02-25T10:06:06.09</Published>
      <PackageHash>inm4ZqAnjBgkkTSEmHljHTh4i1WkI176VlidN/BzduFr8FWuEa0NAm+QOqgMnY5fxSSrDUCo9UwW71Ggsnt9Bg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67364</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.73/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>411</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.73</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.74</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-02-28T09:42:12.783</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.74</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T23:39:05.73</LastUpdated>
      <Published>2013-02-28T09:42:12.783</Published>
      <PackageHash>vDYMffk4UaoeleRulJUdjEpA4wRYL4MBfwRiO9MROvAO/Vc/uZ7WXE9LyfPsT6UNIYR63Bpjol96s47tMYIwaQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67367</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.74/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>333</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.74</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.75</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-03-04T12:02:39.543</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.75</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T13:30:30.633</LastUpdated>
      <Published>2013-03-04T12:02:39.543</Published>
      <PackageHash>7C6XZ8/uETEenT/rIdhpse20v+S04+Y/trQfSXS7gJoETVu+cVc/abWfOuok+2aRi7YUJ0QapkMhOvIE/rDlUA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>67496</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.75/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> RabbitMQ Messaging AMQP </Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1639</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.75</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.9.2.76</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-03-19T07:34:56.147</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.76</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-30T07:36:26.467</LastUpdated>
      <Published>2013-03-19T07:34:56.147</Published>
      <PackageHash>J8bCxVpP4MyMT3x69UVhL+YG4qgkGOPNHlMknOqedCpbkyWaJVMGljiFNzEL8Yx9e/PzTUtXfM2gspcx+9BmbQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>68449</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.9.2.76/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2456</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.9.2.76</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.77</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-03-20T09:02:26.323</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.77</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T23:03:40.583</LastUpdated>
      <Published>2013-03-20T09:02:26.323</Published>
      <PackageHash>ONcciqE9U7jjhNT+qksQWvwjbwxj7cCqOBiej9wc/iMfY6X7xZZfRbgyG6ttE/2AyjK7V5voqJ2uD2sB5c1zKQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>68449</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.77/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>162</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.77</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.78</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-03-20T09:07:28.323</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.78</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T23:03:40.583</LastUpdated>
      <Published>2013-03-20T09:07:28.323</Published>
      <PackageHash>2ey5pzKmGB5vVKABfftDOJAwJBye5KgaE9Jk6G9JLZ4J+ewPJrmxWMdFQhxOM73UGeuSGmru9SXbYhDgqEAhlw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>68447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.78/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>163</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.78</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.79</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-03-20T10:25:06.793</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.79</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T23:03:40.583</LastUpdated>
      <Published>2013-03-20T10:25:06.793</Published>
      <PackageHash>3KIElIzexCD2WNpU7Aps5ENDisoASE/0bSduUlQhW13EuPuRW4iBY4SWh/Sty9VTHJuLQhFALraVj1q2STh7wA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>68446</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.79/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>982</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.79</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.80</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-04-12T08:54:57.95</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.80</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T15:06:43.117</LastUpdated>
      <Published>2013-04-12T08:54:57.95</Published>
      <PackageHash>LLvnywJs2AVUWa0S+mgwPh+EGk6I9fp902wPEs5EIgE6SyiQ2zPSFdHrv7QFo5nxQTwz+Ot+5w63AVVTbq5/fQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>68556</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.80/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1460</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.80</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.81</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-04-25T11:12:16.783</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.81</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T22:08:00.79</LastUpdated>
      <Published>2013-04-25T11:12:16.783</Published>
      <PackageHash>85cp05aTgNioJ5G2naKVAY/lq/M3Q100ErHLO2h66DE72OpydldiCeoJG7mYmryDAlC4VE1ryPoRlUj5efwDFA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69418</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.81/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>775</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.81</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.82</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-07T16:11:47.207</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.82</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:47:47.227</LastUpdated>
      <Published>2013-05-07T16:11:47.207</Published>
      <PackageHash>tHx48A+SUMrx3Sl1YyJk/fFr8gMUzjcDxnpmXHwlBLvqxArSCsvvT2Pr7lRtuFW0u6xedROhfdH2F8Ba927PdA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69415</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.82/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>248</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.82</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.84</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-10T09:16:52.167</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.84</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:42:43.737</LastUpdated>
      <Published>2013-05-10T09:16:52.167</Published>
      <PackageHash>sjDBPQcz7myOatWKTkG6rwA//QpwcKs9PQVUuHVfafY3Y2FWjhPp+PGWqvV4Ct0HrnJRRcqQKvWkt4YmVUQl0w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69421</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.84/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>526</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.84</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.85</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-21T07:50:26.41</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.85</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:22:25.223</LastUpdated>
      <Published>2013-05-21T07:50:26.41</Published>
      <PackageHash>ftV+RxwL/AKh9UUhBdaQWbdvD8Ar/UeOSxW+80K4opB5Lfa9tBdZ2OGfp1tav1lecBKcse9t4AQ/nePCNSxWLQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69642</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.85/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>203</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.85</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.86</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-22T13:35:44.07</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.86</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:22:25.223</LastUpdated>
      <Published>2013-05-22T13:35:44.07</Published>
      <PackageHash>s8x33IhhHtlXzUfYxTnH+57M0YRYKp+7K2cpjvds8lUi1/K9TuDIyZjvcfg0GhLAP6xqzcYIHILM6Rdoox2AiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69859</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.86/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>454</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.86</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.87</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-24T07:46:36.28</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.87</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:22:25.223</LastUpdated>
      <Published>2013-05-24T07:46:36.28</Published>
      <PackageHash>/0CxxrEDppBcSYW36clA5Sqsyl1FiMdXsnmuRxLmkAayOKwRZh0ZOnqxxHeqtx/c/SKgMFo1T7HXbGtGk3q33w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>69861</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.87/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>408</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.87</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.0.88</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-29T14:19:47.11</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.88</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:12:17.257</LastUpdated>
      <Published>2013-05-29T14:19:47.11</Published>
      <PackageHash>znj0UFsWH4CUoZDhqAOASn2OfUcCUBH73jfI03eHXQ6y3aqZSrmIXp0V2nngGwNGQM9tLyMhPIp5goayvAkvDg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70045</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.0.88/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>251</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.0.88</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.1.89</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-05-31T10:03:34.843</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.89</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:12:17.257</LastUpdated>
      <Published>2013-05-31T10:03:34.843</Published>
      <PackageHash>fPfjLw13yjLMsUNyfj8q6h95spSWct2XNy2EBx2YZsKWrQxJ0H1jT9OjLZstZiTjL+hXmEXh1fJxVBzNpT2Jrg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70046</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.89/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1674</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.1.89</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.1.90</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-06-05T10:58:40.72</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.90</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T21:07:13.44</LastUpdated>
      <Published>2013-06-05T10:58:40.72</Published>
      <PackageHash>v+x5vauOU6SamFMQH4w/WQQHQLr2F3e8xMhG/lxPG+qo5dWLv+ypc6zTInQM8NeSjVmtMNE2hSnQCnqmwVDZeA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70050</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.90/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>665</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.1.90</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.1.91</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-06-12T15:24:17.867</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.91</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T13:34:04.397</LastUpdated>
      <Published>2013-06-12T15:24:17.867</Published>
      <PackageHash>Hf60fTVpqeArm4pCjt4SQ/hff/0z/6ylnDRqcY5mujDlulImPq+wxEZuiOY5ErkP/ot6k5yUG2hjkVbd8EU43w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70053</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.91/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>182</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.1.91</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.10.1.92</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-06-13T08:09:45.29</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.92</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T20:47:01.023</LastUpdated>
      <Published>2013-06-13T08:09:45.29</Published>
      <PackageHash>eZdu061j/ZouyokqlAmSwRQ1cA8ND5WNJmtXD/+JK9tXNi6FDGyneY9BSDmd4XqJyJ/LcpxSvG/4HW/IOeScfw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70049</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.10.1.92/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>766</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.10.1.92</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.0.93</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-06-26T10:12:53.13</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.93</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T20:26:47.937</LastUpdated>
      <Published>2013-06-26T10:12:53.13</Published>
      <PackageHash>2kAue/FqA+6o1WiXk7qg4xTef0zDrQWaGZC8iHEm5fns98buaf7jg7R4cga0N16GnnSfiwU2Vu3N7WNY8O+psw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70168</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.93/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>370</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.0.93</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.0.95</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-07-02T14:46:07.317</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.95</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T20:16:39.04</LastUpdated>
      <Published>2013-07-02T14:46:07.317</Published>
      <PackageHash>7sE7TRL65Jxa/SDgC+iw1K94S9+ZDmzSrmRCcJ0ePcS/gInRbpKPxGEVcMIhmfBxF0pYSJbKMoN6gFGXPEPmGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70173</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.95/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>327</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.0.95</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.0.96</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-07-08T10:57:09.757</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.96</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T20:06:30.073</LastUpdated>
      <Published>2013-07-08T10:57:09.757</Published>
      <PackageHash>xA8mvfJXfx+O9LJHE/HvAgRjKOXRV0kgF4TYkHXqEQ8rbev+duWaOFRKgvq/5TAKZ/Veh8tgTDGa1pCedKomEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70387</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.0.96/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>175</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.0.96</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.97</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-07-08T11:01:39.8</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.97</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T20:06:30.073</LastUpdated>
      <Published>2013-07-08T11:01:39.8</Published>
      <PackageHash>7Vs/tjAKrny0+8VTYnGCW3XpX0tu9mtGwrszZ1y4Szp9buoC8VxjZfm0oCMrKdi7NJVz3JkHNet/oPUFHgy94g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70384</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.97/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1059</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.97</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.98</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-07-19T10:46:52.85</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.98</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:51:18.877</LastUpdated>
      <Published>2013-07-19T10:46:52.85</Published>
      <PackageHash>Ci2rInGMXIQLDpBdIgFi5Ux8+ofmp41ycPuLQvq9RgZee5P/PqTkeHUL94GPs4ReGRcVvfmgzGlqBNAGsaHR5Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70385</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.98/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>470</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.98</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.100</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-07-23T09:28:35.877</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.100</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-13T12:49:17.1</LastUpdated>
      <Published>2013-07-23T09:28:35.877</Published>
      <PackageHash>j5MvRPCdrWkUfwVPWHp4ATTa/IjjdQRI0VeLvpHYpQuKy4wLDKasnPtX8s4fqDsPdw4RK+plcyZ1WCeji8cHPg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70388</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.100/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>992</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.100</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.101</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-02T10:38:33.237</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.101</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-13T12:36:45.433</LastUpdated>
      <Published>2013-08-02T10:38:33.237</Published>
      <PackageHash>RxOFOul6OgXadznNX2br6QRkeNCtTsKynxhmVPQEc9SDZNJ7xse3yHDD/itgGrJDwB94bSV8pdpRg4pt0NhkZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70555</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.101/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>676</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.101</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.104</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-13T10:52:06.837</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.104</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:10:49.36</LastUpdated>
      <Published>2013-08-13T10:52:06.837</Published>
      <PackageHash>uWlmk017KCnyCRkGZuOE+02LhhCVioSzEduuGP4dR2GqpsYD2F1c13jROHo7jpyzod6qN8ew6zGvIFoYWjiInQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70563</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.104/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1011</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.104</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.105</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-14T14:54:41.34</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.105</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:10:49.36</LastUpdated>
      <Published>2013-08-14T14:54:41.34</Published>
      <PackageHash>D7Wt5SL/wAJmAMztzdRwz7+XAXuWF0BLLANPGR8bCiJ4QX38Dw0FCpw+vsmvXZQ/86ckWkwhLI3gx2qbL8l1/Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>71808</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.105/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>437</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.105</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.108</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-21T07:22:13.153</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.108</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T01:30:23.333</LastUpdated>
      <Published>2013-08-21T07:22:13.153</Published>
      <PackageHash>ssNWDBWG+Hq601KDeRukT2G5nIC59j/Ci6msE5HpdgMW+bo9eWGqpRIEyOxqXzIsiAe9cOjxrKQz4LKvYHX2Aw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>71924</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.108/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>549</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.108</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.109</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-28T11:28:30.43</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.109</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:50:34.35</LastUpdated>
      <Published>2013-08-28T11:28:30.43</Published>
      <PackageHash>eoyq7abnfjnSeTmvnSujtTboMav2W3jjRBbA7ydOmrcS9lSGuhhAP5NSRZ7AHEQvFW1ed3tE/yaSMqwE7u1NEg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>71929</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.109/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>183</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.109</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.110</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-28T15:35:52.077</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.110</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T01:30:23.333</LastUpdated>
      <Published>2013-08-28T15:35:52.077</Published>
      <PackageHash>HSSMXnCztXFAKV4zB5W+FdwM34geh8yN0ohXH4Esm/1bc7ejb9L5vJ7GPYxFJUcs1d8oUTS6w9X6YIPYIVAEpg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>71926</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.110/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.110</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.113</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-08-30T15:01:05.23</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.113</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T15:01:42.78</LastUpdated>
      <Published>2013-08-30T15:01:05.23</Published>
      <PackageHash>fsPtvuZfClSeYwMukvm3T4ewRZXwEAif49lfkZgNdWAFLnWxtKQx7fpTz0Rwo32dBHMv7l9xnrGVfV620G4C/w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>72041</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.113/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2031</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.113</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>2013-09-05T11:18:19.99</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.11.1.114</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-09T14:52:07.797</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.114</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:35:24.58</LastUpdated>
      <Published>2013-09-09T14:52:07.797</Published>
      <PackageHash>SLRYNZr79tXfvzQyqAjdAhQJ78Rq2Gk49RxeDmMCEkiRrG0TfkaYnOJbTvz6F+s6A5lId/19lDIPoJ8ywbtbMw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70775</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.11.1.114/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>635</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.11.1.114</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.12.1.115</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-10T09:47:10.103</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.12.1.115</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:30:21.437</LastUpdated>
      <Published>2013-09-10T09:47:10.103</Published>
      <PackageHash>vBOU0Yz2mid8OhB52b3e5ztSLK5INQGzZn7p77CeorFqJl5ci+hnunKuWA7hN0pZbn1AO2H946WahTnsVwHhnA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70781</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.12.1.115/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>204</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.12.1.115</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.12.0.116</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-10T09:52:28.967</Created>
      <Dependencies>RabbitMQ.Client:[3.0.2.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.12.0.116</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:30:21.437</LastUpdated>
      <Published>2013-09-10T09:52:28.967</Published>
      <PackageHash>I6/eFTgqEx3ZxjY2EfE5IvqTLyZDJPSmmPDjfHhK3C3c6joG/Mf3MfmgD+rHq9dPJBc01R3D1lL/oXKsfeXGOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70778</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.12.0.116/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>149</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.12.0.116</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.12.3.117</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-11T12:19:13.14</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.12.3.117</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:30:21.437</LastUpdated>
      <Published>2013-09-11T12:19:13.14</Published>
      <PackageHash>m7qf/d3yDM2vLYiIGaPbB2cds3um9Le/NLI2OjU9t3Pzs5InLeqtmP7qHCgjRN+suX06WXY5s85slCe4HDAN6A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>70785</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.12.3.117/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>272</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.12.3.117</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.12.4.119</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-13T16:16:53.473</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.12.4.119</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:30:21.437</LastUpdated>
      <Published>2013-09-13T16:16:53.473</Published>
      <PackageHash>nshcrGqD8Nd/qEu7CAFBfrL7uWajTTGpIdzsKmgG55P5OUEM8GISiggmiqUnc6XQqcylrtkabOOU9qz7jCrqhw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>71709</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.12.4.119/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>951</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.12.4.119</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.0.120</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-24T11:31:51.703</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.0.120</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:15:10.807</LastUpdated>
      <Published>2013-09-24T11:31:51.703</Published>
      <PackageHash>CV6kvKKFxlM8gLY4lQt22DYJY0omiGZeuCHqeoR48WgkGvG252HVNZNa50ieNS+WlmPiebeliH0PG0Hb38i3jA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>73046</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.0.120/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>296</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.0.120</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.1.121</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-09-26T11:27:20.51</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.1.121</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:10:06.967</LastUpdated>
      <Published>2013-09-26T11:27:20.51</Published>
      <PackageHash>ZcZuZJfF+bmqDEjZcrHYFf53ZQeZrM3kq/ZdL49ybyMUB3T4ErC//TiLikqHoqVA1ZCVTkPUeggjcuUsSh4VQg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>72991</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.1.121/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>640</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.1.121</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.2.122</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-02T12:45:15.68</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.2.122</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:59:58.78</LastUpdated>
      <Published>2013-10-02T12:45:15.68</Published>
      <PackageHash>sOkH88SIpUO3ZHm6slSBquHWgpsUV+o2y8SDLFQJ24YQKSTICxk5EQDP+bKLpqrKSBk8AvXTxU0JkJ5ovs5h2A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>73844</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.2.122/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>263</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.2.122</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.3.123</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-03T09:55:39.23</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.3.123</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:59:58.78</LastUpdated>
      <Published>2013-10-03T09:55:39.23</Published>
      <PackageHash>5UO8lntglYCU2ko7Elk9wq8Dsc+/nwGlZCE2eXQIWF8VUT2a16s64jEHRBN7ZEUholaZ3FeIIKciYTpewSualw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>73832</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.3.123/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>879</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.3.123</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.124</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-08T15:16:59.77</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.124</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T07:37:48.42</LastUpdated>
      <Published>2013-10-08T15:16:59.77</Published>
      <PackageHash>wMzN82YHIYMtDUrLyRcPecXhq6qGfvQA0p2ACaXPJAPGwBONbLRuhck3DxkhUN71rDA0MDBpqm21vEBx8Ra23Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74163</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.124/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>342</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.124</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.126</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-10T15:10:34.883</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.126</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:49:51.2</LastUpdated>
      <Published>2013-10-10T15:10:34.883</Published>
      <PackageHash>dwBB/AaC0bk2rlRqsBS2fOpRQbIIANzd0PWujUaJ6B/XYa8EJRqmYR8hb0z1BlRozctO84n/ZgVS0QQlylqLHQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74144</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.126/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>634</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.126</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.127</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-15T07:49:21.06</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.127</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:44:47.163</LastUpdated>
      <Published>2013-10-15T07:49:21.06</Published>
      <PackageHash>K36EtPnevURaU8qXkYUJ1u96y1+X6rwz2+eiLcBqcZZmrCEaLN0O8dybhkzdYspwjPSkKkIoAwwW/OnA/TqPwg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74163</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.127/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>210</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.127</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.128</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-15T07:54:21.647</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.128</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:44:47.163</LastUpdated>
      <Published>2013-10-15T07:54:21.647</Published>
      <PackageHash>PRC7Ek8O595iOGWCwlcGPweBKmL7HRfHJ2xUzlR8o1tUg4xC6i8CJ5xmVRc/WTB/Zz+mx4fSOIZBmfIu/Pke3A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74157</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.128/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>418</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.128</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.130</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-16T08:31:44.11</Created>
      <Dependencies>RabbitMQ.Client:[3.1.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.130</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:39:44.097</LastUpdated>
      <Published>2013-10-16T08:31:44.11</Published>
      <PackageHash>SBeYH4woywmy1Db1yvF3Pq8AaPpJ+wvm9rf4P4DYhrNBaPGkd0Jj6nSjy5l0KPUi/DOjG4oPCBO7bj3C1oAPVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74307</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.130/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>781</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.130</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.4.131</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-21T10:11:16.323</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.131</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:34:40.647</LastUpdated>
      <Published>2013-10-21T10:11:16.323</Published>
      <PackageHash>HWnm2MXKa15UbwqZu+wFrf11G20aK7t6yX1pwTvSeOjIqwO/My39aAyO9XE8L7xqcLM4tU/V/ywl4pb74WPxrQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74310</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.4.131/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>279</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.4.131</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.14.5.132</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-21T10:14:46.357</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.14.5.132</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:34:40.647</LastUpdated>
      <Published>2013-10-21T10:14:46.357</Published>
      <PackageHash>mcUhdFk7UmdSrxOcxZoxGHPK0CD17RcyxLzMyOV7GvloZ7mmvA+nSloYP9DCb7px2lNoRLwCB5Iavex9LJwiTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>74311</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.14.5.132/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>496</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.14.5.132</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.15.2.138</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-21T13:58:06.42</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.138</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:34:40.647</LastUpdated>
      <Published>2013-10-21T13:58:06.42</Published>
      <PackageHash>pdu/zKTYO725TRzHwdVQ5s5gBIQjU2hgXOd4TbVbbkOhO4nhauWXQwi9B33OvPQG8IDlwLwViEA9kTKakMDaaQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>82738</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.138/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>165</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.15.2.138</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.15.2.139</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-21T14:30:57.033</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.139</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-13T20:29:41.19</LastUpdated>
      <Published>2013-10-21T14:30:57.033</Published>
      <PackageHash>Umtx+O2vTLX7aPsbMbVkhPkljoCE0UUuXjjyphf+rTW/AJEZfqrqYfjBlKjHU/2btht/4D4XSm8lhtBAtkrmqA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>82739</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.139/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1877</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.15.2.139</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.15.2.142</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-23T11:09:17.89</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.142</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2013-10-23T11:09:17.89</Published>
      <PackageHash>EY6BxH1ONQRMs2Wz4x4bQdlSqMeBRCA5qF1WvO0dSLoDOPlJ6EH8h+YHaPZKTj9hpflF9gXpf8idkGjMMjcbag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>82763</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.15.2.142/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>159</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.15.2.142</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.15.3.143</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-23T13:52:15.767</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.15.3.143</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T20:57:24.703</LastUpdated>
      <Published>2013-10-23T13:52:15.767</Published>
      <PackageHash>VaqvbP7zlZRXTMcECQCkWYzAnckTIWNi7Bdys8pT5iy2YCFZKhF9Xiop/yDS7XCRxRX7LSilLdufZODZrs4dWg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>82974</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.15.3.143/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2033</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.15.3.143</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.16.0.144</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-29T10:53:57.4</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.144</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:19:30.523</LastUpdated>
      <Published>2013-10-29T10:53:57.4</Published>
      <PackageHash>g1gUKpqj+/7uETyTfBiVf0ITXlTKfnJWNzmL9y2ykyxhN1t0Stc9HbN2+LUin0bhIEer+JH4TS59qhFBKxxhoQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>83496</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.144/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>206</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.16.0.144</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.16.0.145</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-30T09:48:01.427</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.145</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:19:30.523</LastUpdated>
      <Published>2013-10-30T09:48:01.427</Published>
      <PackageHash>qhzQLBYPUoyK76glxd+4GTVBpVWhknDGOLXpLbmU2AVg8MhpFX7ND7EuKlqkiTiiJ1puNlKQXnj2yJXxvNfL+w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>83490</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.145/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>233</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.16.0.145</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.16.0.146</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-10-31T09:04:21.923</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.146</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:19:30.523</LastUpdated>
      <Published>2013-10-31T09:04:21.923</Published>
      <PackageHash>CytOQ/A8Ru8cv6acSy2H+dk2Y9oac0KY/BumUyGKRvWFsK1ajZ/g4jr4LNAlFroGVaJUiYgifVcH1QnZ63RFfg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>92849</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.16.0.146/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>271</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.16.0.146</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.17.0.148</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-01T15:46:25.623</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.17.0.148</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-04T12:28:58.57</LastUpdated>
      <Published>2013-11-01T15:46:25.623</Published>
      <PackageHash>vwski2OAZxsTC6LIYPeBBtHhDwEYKKrV6eL1rp7zgIcnygfOHf+8j6/5zipLIWrDTFmQR+pBPuuQD+hdw4WarA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94710</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.17.0.148/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>359</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.17.0.148</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.18.0.149</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-04T14:11:31.97</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.18.0.149</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:09:24.17</LastUpdated>
      <Published>2013-11-04T14:11:31.97</Published>
      <PackageHash>lAmIdC0Pa2eaJP7Jf1sTF1UrD6vPuCctQgfa3leMmRgvYdmC5SbU/jipqVAkiHe5vjUIXAMTBOguwKb48Q/nyA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>95020</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.18.0.149/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>199</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.18.0.149</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.18.1.150</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-05T10:35:34.25</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.18.1.150</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2013-11-05T10:35:34.25</Published>
      <PackageHash>GaWD9Oh2ArjHIIELXPgws3mCtBQT7APjc6b/0Wc9K0ZfQLbGj3lncw+xJbJErFbEh/pMMjriBtQoXe0X0Dy27A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94959</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.18.1.150/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>154</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.18.1.150</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.18.1.151</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-05T12:15:17.277</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.18.1.151</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2013-11-05T12:15:17.277</Published>
      <PackageHash>KkIA4xjqAVzx6esRC5ac57SABKTZp0K+Sa67xKMZPiKcA4VZAcIiRz3UtWe4PScNr4YjwZwshWjka5pj1mkDLQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94222</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.18.1.151/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>241</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.18.1.151</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.19.0.154</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-06T15:10:58.297</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.19.0.154</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T17:09:24.17</LastUpdated>
      <Published>2013-11-06T15:10:58.297</Published>
      <PackageHash>WPPGAj9WbakIGEpmKS2CQjWkr1kPLhTEA8enAbXtBy0mbfGkY0SYFV2RzNUoMAFzseLJo/m3GrLBeVxSHpFNXg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>94822</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.19.0.154/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>743</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.19.0.154</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.20.0.155</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-13T15:18:07.37</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.20.0.155</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T13:31:26.083</LastUpdated>
      <Published>2013-11-13T15:18:07.37</Published>
      <PackageHash>qzB5sQLXr+Dy1i8/Wpv8/9XhrYtcwi1FJxh2NHAQmnMVwvXGxv1cmYuLchqCNNZKD/iXujqr++xfcoBTy8jRTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>97748</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.20.0.155/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>382</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.20.0.155</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.20.0.157</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-15T14:42:09.823</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.20.0.157</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T16:54:14.687</LastUpdated>
      <Published>2013-11-15T14:42:09.823</Published>
      <PackageHash>Y3HcD3hGKp87nwXa1Vu0wbd/rdRHZX5s7LJwv+OLztdpeb1vxNSFQu1T65KgVf2upaDFBMzaxMxTlMu4hoOytg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>97789</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.20.0.157/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>291</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.20.0.157</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.21.0.159</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-18T12:08:08.03</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.21.0.159</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2013-11-18T12:08:08.03</Published>
      <PackageHash>LN2PZvBQK4MKLVuOtG9s6n8lrvxoUmbAj9P5S/ks0tYpU9vItCt1895ogdO45/yHnnWncuXK/aS3ViWxSxAURg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>100058</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.21.0.159/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>205</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.21.0.159</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.22.0.161</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-19T11:08:21.31</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.22.0.161</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T16:49:11.68</LastUpdated>
      <Published>2013-11-19T11:08:21.31</Published>
      <PackageHash>SmpQ6GQt2vTPKnusYS1fSiaCFkk9lhQwZ0LUc1Mc5+80A8OVtnkWIzlwzj8w77VE859FFNEApoMgiQX7TPzFyw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>100390</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.22.0.161/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>151</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.22.0.161</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.22.1.162</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-19T12:18:41.87</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.22.1.162</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T16:49:11.68</LastUpdated>
      <Published>2013-11-19T12:18:41.87</Published>
      <PackageHash>hrXZGwEwwN7tjvu629hDvWU3gCpiD6HB0eHTgT/HwCUD4/5wWaIW50mZvJBAgGa7lmKjstY0nQf8aFB4epUCjQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>100424</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.22.1.162/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>185</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.22.1.162</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.23.0.163</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-19T12:53:14.61</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.23.0.163</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T16:49:11.68</LastUpdated>
      <Published>2013-11-19T12:53:14.61</Published>
      <PackageHash>6ovAUb40JzhAwtcrV+6csrbRYq4Jbx0jv8f6Dmq6/V+F4eaZuoKVNv7/JemN7BlyYXkA1co8aFGd5YxEkIL2Wg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>100466</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.23.0.163/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>355</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.23.0.163</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.24.0.165</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-11-21T15:30:52.717</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.24.0.165</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T16:44:08.31</LastUpdated>
      <Published>2013-11-21T15:30:52.717</Published>
      <PackageHash>DQQW8Fw7k3/k7F/D62wNzTzs81OPjRytnEYXYF6gft4/NwfIQ4Pc2cKgGqNVmRTiBOZfzg3lH3OU64sDy8MAGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101203</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.24.0.165/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>3719</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.24.0.165</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.24.0.169</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-09T13:44:34.137</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.24.0.169</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-09T13:44:34.137</Published>
      <PackageHash>YNTtrivHh3fndyo5JSp0LXuw9zHvaHhOz98MIiPKaI2PhHi7uvFUPW7tPBbLUcCwp0Uw7u6YSdM95i+8mqpa2g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101573</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.24.0.169/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>155</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.24.0.169</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>1.0.0</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-05-30T09:25:49.687</Created>
      <Dependencies />
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T16:59:19.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>FgolqhK28wyCt9Umci+AnpSSste8QkIAot93chRUGDwytAPyPPfq5r1VneaNRjP+4FzGzRKrdiE8AYgLlecajw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>251107</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>1.0.1</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-05-30T16:50:24.17</Created>
      <Dependencies />
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T16:59:19.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>k4DRdT/TM3VC5ez9VCqqiLHo1cM9d/UyehDs4covouEahFqAaznvk/LndTzzrvSIK9savzyodK1p6VVvawaXKw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>242444</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/1.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>1.0.2</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-06-03T10:48:31.827</Created>
      <Dependencies />
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/1.0.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T16:59:19.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>paBKrrSkAZtYklSdpOkOMPxAgUUn5N/LaZtIqblcKJNJdB9Mb1pC08NGt/FWKcL8Cm0A2R249XLZ5yJqoBDA/Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>257268</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/1.0.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/1.0.2</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>1.1.0</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-06-04T10:54:00.76</Created>
      <Dependencies />
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T16:59:19.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>/8R6yRR/s615RcKON3nAu0wiwsox5uUG52TGBA1uHea9AMMfIFLQI7Mwn2DypfrmdHg80Pw8v0KpmrFwCz6eJw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>201693</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>211</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/1.1.0</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>2.0.0</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2014-09-24T12:06:41.977</Created>
      <Dependencies>Newtonsoft.Json::</Dependencies>
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/2.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T16:59:19.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>z7hXrTB4MwO2iOQknEZCME9wjdXBx06pCN983lqTbE5HrECP8sf4pZQRcq2HQlgUjg4MBQf27uYTpOb8sDJx2w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33877</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/2.0.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend</Id>
      <Version>2.0.1</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2014-09-27T10:30:41.227</Created>
      <Dependencies>Newtonsoft.Json::</Dependencies>
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>1171</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend/2.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T07:30:05.493</LastUpdated>
      <Published>2014-09-27T10:30:41.227</Published>
      <PackageHash>O/MCZvYVELV7r/oTuveoAtg6yY2HyLe8UCQgTHXZXvg9BRDhZ4mfTU40knODxqOt3UorNbzh9+uza4WcZOrXNA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>33962</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend/2.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend</Title>
      <VersionDownloadCount>457</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend/2.0.1</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moosend.Api.Client</Id>
      <Version>3.0.0.6</Version>
      <Authors>Administrator</Authors>
      <Copyright>Copyright ©  2016</Copyright>
      <Created>2016-08-05T14:15:50.53</Created>
      <Dependencies>Newtonsoft.Json:[8.0.3, ):</Dependencies>
      <Description>Description</Description>
      <DownloadCount>70</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moosend.Api.Client/3.0.0.6</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-05T14:15:50.53</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>mAk+VlpKhiRCeZbKURfyOOqmVs2D+FHK2nwXS4FrJB8HQcpzGAMUEu/Xj2fCWTMQ5Iif+qiKr78dWAx2Gl7yyg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43737</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moosend.Api.Client/3.0.0.6/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>Moosend.Api.Client</Title>
      <VersionDownloadCount>70</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moosend.Api.Client/3.0.0.6</DownloadUrl>
      <ProjectUrl />
      <LastEdited>2016-08-05T14:17:23.927</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend-api-wrapper</Id>
      <Version>3.0.0.21</Version>
      <Authors>Moosend Ltd</Authors>
      <Copyright />
      <Created>2017-06-26T08:55:59.713</Created>
      <Dependencies>Newtonsoft.Json:[8.0.3, ):</Dependencies>
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>110</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.0.21</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-26T08:55:59.713</LastUpdated>
      <Published>2017-06-26T08:55:59.713</Published>
      <PackageHash>wvNnW1LsqzQ+wkQksnwl3fOPJr5pJmrqPO0DA++7ppMKee0ylZvvF2WVR3auomiSPTd5yl3fX03+WY5AwGeXAQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43063</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.0.21/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend-api-wrapper</Title>
      <VersionDownloadCount>36</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend-api-wrapper/3.0.0.21</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend-api-wrapper</Id>
      <Version>3.0.0.22</Version>
      <Authors>Moosend Ltd</Authors>
      <Copyright />
      <Created>2017-06-26T10:19:27.123</Created>
      <Dependencies>Newtonsoft.Json:[8.0.3, ):</Dependencies>
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>110</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.0.22</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-26T10:19:27.123</LastUpdated>
      <Published>2017-06-26T10:19:27.123</Published>
      <PackageHash>C3BYy+dIEm2UPXlS31Xr8XphxAKyx7r45IO8EvqkZMkbJIxw0H5kuZqt3Mdf3FP4w2JAn1S8/KvwG8qr1//3pg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43062</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.0.22/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend-api-wrapper</Title>
      <VersionDownloadCount>33</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend-api-wrapper/3.0.0.22</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>moosend-api-wrapper</Id>
      <Version>3.0.1.29</Version>
      <Authors>Moosend Ltd</Authors>
      <Copyright />
      <Created>2017-06-26T11:11:41.833</Created>
      <Dependencies>Newtonsoft.Json:[8.0.3, ):</Dependencies>
      <Description>Complete control over your Moosend (www.moosend.com) account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>110</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.1.29</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-26T11:11:41.833</LastUpdated>
      <Published>2017-06-26T11:11:41.833</Published>
      <PackageHash>4n7RTLiZ+UHGZPXanNjpSoQxjegTsGeM82naEXPEOkvJnGB5kX7q8DnDpw6Hfrx9Vug12Z+Z2fMvnt/vDEo2HQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>43037</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/moosend-api-wrapper/3.0.1.29/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>moosend-api-wrapper</Title>
      <VersionDownloadCount>41</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/moosend-api-wrapper/3.0.1.29</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoosendDotNetWrapper</Id>
      <Version>1.0.0</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-05-28T18:25:54.06</Created>
      <Dependencies />
      <Description>Complete control over your Moosend account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>258</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoosendDotNetWrapper/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T22:01:05.697</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>wWiT6i6LfZ/UrgwuIWUa9g/Srnj3ANh6+utcRXczRKMikx8E9LTwu03zSUapSDiHm7rfpKDsJlFTEFq4GCzT4Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>251117</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoosendDotNetWrapper/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoosendDotNetWrapper</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoosendDotNetWrapper/1.0.0</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MoosendDotNetWrapper</Id>
      <Version>1.0.1</Version>
      <Authors>Moosend</Authors>
      <Copyright />
      <Created>2013-05-28T18:41:20.26</Created>
      <Dependencies />
      <Description>Complete control over your Moosend account. Manage mailing lists, subscribers and email campaigns with just a few lines of code!</Description>
      <DownloadCount>258</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MoosendDotNetWrapper/1.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-04-23T22:01:05.697</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>ezqBPhr6dQstd5gn8XPa5TKmO+YBSP4guaMAm7W0PX7eYi2z0/Pj/LE/7UjoqbUIj4U3wGhB5qatQgrdrDcQqg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>251133</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MoosendDotNetWrapper/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>MoosendDotNetWrapper</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MoosendDotNetWrapper/1.0.1</DownloadUrl>
      <ProjectUrl>https://github.com/moosend/dotnetwrapper</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moosh</Id>
      <Version>1.0.0</Version>
      <Authors>Tobe O.</Authors>
      <Copyright>Universal Future 2015</Copyright>
      <Created>2015-09-29T03:06:35.753</Created>
      <Dependencies />
      <Description>A C# framework for productivity, speed and fluency.</Description>
      <DownloadCount>367</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moosh/1.0.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-02T02:42:29.2</LastUpdated>
      <Published>2015-09-29T03:06:35.753</Published>
      <PackageHash>tlX2QyQ5CGQj7lbqby3uV0mrEVyVp/+438aEPMVc7epbDjWtJ1UbkQ9o4efeHzlPNcjoG3S/KWS253ycMpqE6w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7684</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moosh/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>C# VB.NET .NET F# Framework productivity code moosh</Tags>
      <Title>Moosh</Title>
      <VersionDownloadCount>153</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moosh/1.0.0</DownloadUrl>
      <ProjectUrl>http://blog.thosakwe.com/2015/moosh/</ProjectUrl>
      <LastEdited>2015-09-29T03:44:26.693</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moosh</Id>
      <Version>1.1.0</Version>
      <Authors>Tobe O.</Authors>
      <Copyright>Universal Future 2015</Copyright>
      <Created>2015-10-02T02:42:29.2</Created>
      <Dependencies />
      <Description>A C# framework for productivity, speed and fluency.</Description>
      <DownloadCount>367</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moosh/1.1.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language>en-US</Language>
      <LastUpdated>2015-10-02T02:44:17.96</LastUpdated>
      <Published>2015-10-02T02:42:29.2</Published>
      <PackageHash>yMBxZk3ofWZeaWOdybCOJ5GZuqcq0U6wipbKJCc774xn1NMef2XHqSeRB75+h6A4bVA9QLBYbYKysZT0obL2nA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>7712</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moosh/1.1.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed package.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>C# VB.NET .NET F# Framework productivity code moosh</Tags>
      <Title>Moosh</Title>
      <VersionDownloadCount>214</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moosh/1.1.0</DownloadUrl>
      <ProjectUrl>http://universalfuture.github.io/moosh/</ProjectUrl>
      <LastEdited>2015-10-02T02:44:17.96</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>MooTools</Id>
      <Version>1.4.5</Version>
      <Authors>mattpodwysocki</Authors>
      <Copyright>2006-2012 Valerio Proietti</Copyright>
      <Created>2012-03-10T07:12:56.993</Created>
      <Dependencies />
      <Description>MooTools is a compact, modular, Object-Oriented JavaScript framework designed for the intermediate to advanced JavaScript developer. It allows you to write powerful, flexible, and cross-browser code with its elegant, well documented, and coherent API.</Description>
      <DownloadCount>1816</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/MooTools/1.4.5</GalleryDetailsUrl>
      <IconUrl>http://mootools.net/assets/images/mootools.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T07:07:15.147</LastUpdated>
      <Published>2012-03-10T07:12:56.993</Published>
      <PackageHash>3dT0PgnQQDmSgXP7vPWyI6XPx0ayPtjwExw0DP8U7GvqIyPAzgNtRkvzXBYEA257ZFE3/tBngj8FY1RrxRAHGg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>73081</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/MooTools/1.4.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags> MooTools </Tags>
      <Title>MooTools</Title>
      <VersionDownloadCount>1816</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mootools/mootools-core/blob/master/Source/license.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/MooTools/1.4.5</DownloadUrl>
      <ProjectUrl>http://mootools.net/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moov</Id>
      <Version>1.0.0</Version>
      <Authors>Sebastiano Galazzo</Authors>
      <Copyright />
      <Created>2014-10-31T15:36:00.507</Created>
      <Dependencies />
      <Description>Moov is a Bluetooth LE smart device that enable real-time coaching based on how you move.

There is still not an official Windows Phone support by Moov.

This SDK porting provide support for 9-axis motion sensing data access ( accelerometer,gyroscope ), main button pressure management and LED light control.

This is enough to begin creating great apps controlled by the Moov. Next releases will provide smart artificial intelligence algorithms for gestures analysis.</Description>
      <DownloadCount>1980</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moov/1.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.witinside.net/moov/moov.jpg</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T07:16:22.14</LastUpdated>
      <Published>2014-10-31T15:36:00.507</Published>
      <PackageHash>SpHkPy2lv1559A5OksPFBnToxCvlfYR/d8hpTmkcFqG5OqhQfyBaZFv/vPH/puivrDwgLhnpsLxz7LS6GB7AHQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>14961</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moov/1.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>SDK for Moov Bluetooth LE smart werable device.</Summary>
      <Tags>Moov Smart Devices Wearable Bluetooth LE</Tags>
      <Title>Moov</Title>
      <VersionDownloadCount>680</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/ms-pl.html</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moov/1.0.0</DownloadUrl>
      <ProjectUrl>http://preorder.moov.cc/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moov</Id>
      <Version>1.0.1</Version>
      <Authors>Sebastiano Galazzo</Authors>
      <Copyright />
      <Created>2014-10-31T15:48:35.273</Created>
      <Dependencies />
      <Description>Moov is a Bluetooth LE smart device that enable real-time coaching based on how you move.

There is still not an official Windows Phone support by Moov.

This SDK porting provide support for 9-axis motion sensing data access ( accelerometer,gyroscope ), main button pressure management and LED light control.

This is enough to begin creating great apps controlled by the Moov. Next releases will provide smart artificial intelligence algorithms for gestures analysis.</Description>
      <DownloadCount>1980</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moov/1.0.1</GalleryDetailsUrl>
      <IconUrl>http://www.witinside.net/moov/moov.jpg</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T06:49:09.143</LastUpdated>
      <Published>2014-10-31T15:48:35.273</Published>
      <PackageHash>iiAaemeyRBo8nck2AKabgbD2ijhkd/EcowXeMnsWh2/XLYv1L15E8I5VjEX13laxBvjqPy/9TOgQvnJg1rzX7A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>14954</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moov/1.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>SDK for Moov Bluetooth LE smart wearable device.</Summary>
      <Tags>Moov Smart Devices Wearable Bluetooth LE</Tags>
      <Title>Moov</Title>
      <VersionDownloadCount>912</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/ms-pl.html</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moov/1.0.1</DownloadUrl>
      <ProjectUrl>http://preorder.moov.cc/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moov</Id>
      <Version>2.0.0</Version>
      <Authors>Sebastiano Galazzo</Authors>
      <Copyright />
      <Created>2016-02-29T13:43:56.21</Created>
      <Dependencies />
      <Description>Moov is a Bluetooth LE smart device that enable real-time coaching based on how you move.

There is still not an official Windows Phone support by Moov.

This SDK porting provide support for 9-axis motion sensing data access ( accelerometer,gyroscope ), main button pressure management and LED light control.

This is enough to begin creating great apps controlled by the Moov. Next releases will provide smart artificial intelligence algorithms for gestures analysis.</Description>
      <DownloadCount>1980</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moov/2.0.0</GalleryDetailsUrl>
      <IconUrl>http://www.witinside.net/moov/moov.jpg</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-29T13:43:56.21</LastUpdated>
      <Published>2016-02-29T13:43:56.21</Published>
      <PackageHash>seD9gOKczRtH5y3rgTVdltTVIMzQyOvX1AKLCY7+vLMbmAjPOBv/SsKcxqvpZLuBYyWdNYH665xR3mQHle6GgA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>15838</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moov/2.0.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Moov Bluetooth LE smart wearable device SDK for UWP</Summary>
      <Tags>Moov Smart Devices Wearable Bluetooth LE</Tags>
      <Title>Moov</Title>
      <VersionDownloadCount>94</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/ms-pl.html</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moov/2.0.0</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moov</Id>
      <Version>2.0.5</Version>
      <Authors>Sebastiano Galazzo</Authors>
      <Copyright />
      <Created>2016-03-04T10:52:17.653</Created>
      <Dependencies />
      <Description>Moov is a Bluetooth LE smart device that enable real-time coaching based on how you move.

There is still not an official Windows Phone support by Moov.

This SDK porting provide support for 9-axis motion sensing data access ( accelerometer,gyroscope ), main button pressure management and LED light control.

This is enough to begin creating great apps controlled by the Moov. Next releases will provide smart artificial intelligence algorithms for gestures analysis.</Description>
      <DownloadCount>1980</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moov/2.0.5</GalleryDetailsUrl>
      <IconUrl>http://www.witinside.net/moov/moov.jpg</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-04T10:52:17.653</LastUpdated>
      <Published>2016-03-04T10:52:17.653</Published>
      <PackageHash>FfGRciz4eKrJ8QuCJiOoQz1ZMLU5SrfOwMJ9ea4wgRfgXnssga43XJZaVEhnJtebVXrkZu5QrXyM6U5R+0yX/w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>15889</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moov/2.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Moov Bluetooth LE smart wearable device SDK for UWP</Summary>
      <Tags>Moov Smart Devices Wearable Bluetooth LE</Tags>
      <Title>Moov</Title>
      <VersionDownloadCount>294</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://opensource.org/licenses/ms-pl.html</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moov/2.0.5</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopac</Id>
      <Version>0.0.1</Version>
      <Authors>Larry Foulkrod</Authors>
      <Copyright />
      <Created>2016-04-13T14:12:18.673</Created>
      <Dependencies />
      <Description>A collection of useful functions for .net.</Description>
      <DownloadCount>116</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopac/0.0.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-04-13T14:12:18.673</LastUpdated>
      <Published>2016-04-13T14:12:18.673</Published>
      <PackageHash>A7NZ4xZ61d1v1Mce8qzHjsDM5SaV86AcSbGAoF006FER79Br4z1a1mLiyT1YP3ZY8zndy7SPGZp8jlilFnOa5Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>3415</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopac/0.0.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags />
      <Title>Mopac</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopac/0.0.1</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.5</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-13T11:10:51.97</Created>
      <Dependencies>Dynamit:[0.1.4, ):|RESTar:[0.1.5, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.5</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-13T11:31:03.947</LastUpdated>
      <Published>2017-03-13T11:10:51.97</Published>
      <PackageHash>U/kFMRdJCM+pQB/CJVlK1CWiJAnT3eXeeZszYQUVRcICB5Pv91Q6YE/SCDFagQzDvZhQ/nnlJfpVymkxoQtT6A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104000</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.5/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>First release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>54</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.5</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-03-13T11:31:03.947</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.7</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-14T13:44:18.34</Created>
      <Dependencies>Dynamit:[0.1.4, ):|RESTar:[0.1.5, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.7</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-14T13:44:18.34</LastUpdated>
      <Published>2017-03-14T13:44:18.34</Published>
      <PackageHash>4rqCMtli8u43dSXqDdFiT0Kf14A8HF5AZKQobBS307QmcOCg7ScpTYUg9kfcAVBYhGg3HMYACDyY0aDkermNGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>64193</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>First release</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.7</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.8</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-15T15:14:11.26</Created>
      <Dependencies>Dynamit:[0.1.5, ):|RESTar:[0.1.7, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.8</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-15T15:14:11.26</LastUpdated>
      <Published>2017-03-15T15:14:11.26</Published>
      <PackageHash>I+4gF/nhcJFoVNwkrnB+hzfO413Sfvf/jaJEelrGsO3emdQjRX/6zRFos9x4EL4eyc2tbYimi4JQGOstSYHutg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>64185</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Assorted improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.8</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.9</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-16T11:30:01.73</Created>
      <Dependencies>Dynamit:[0.1.5, ):|RESTar:[0.1.7, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.9</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-16T11:30:01.73</LastUpdated>
      <Published>2017-03-16T11:30:01.73</Published>
      <PackageHash>ivGhwPakjq3uCRsoG2ng7LBH3HfGd+h6IYYDpBclHjorFNv1y7qwGhEjGuGZx8ISLlJMlxHauELP3hZKj/HA8w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104191</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixes for missing referenced assemblies</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>45</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.9</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.10</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-16T23:47:50.82</Created>
      <Dependencies>Dynamit:[0.1.5, ):|RESTar:[0.1.8, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.10</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-16T23:49:13.553</LastUpdated>
      <Published>2017-03-16T23:47:50.82</Published>
      <PackageHash>bTLfk5lqFwnbNy2U/lEegbuJGMJaHFUUc3I3OYbgrl/fbXG6TBGEiiQAM6NTrAHRQREhoEa6SW9FqU4XL0MtYw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104148</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>RESTar 0.1.8 with uri component decoding fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>53</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.10</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-03-16T23:49:13.553</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.11</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-17T10:07:53.453</Created>
      <Dependencies>Dynamit:[0.1.5, ):|RESTar:[0.1.8, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.11</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-17T10:07:53.453</LastUpdated>
      <Published>2017-03-17T10:07:53.453</Published>
      <PackageHash>kkQIpmC9N657MOOb3YeATC0FYQWO02YzCfSnnenNoeeY5yWbzUchzGoTbyhLKGhTe4UUSiIELD7vd3BdwAceuA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104299</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.11/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixes for bid rule sorting</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>46</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.11</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.12</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-17T13:47:03.237</Created>
      <Dependencies>Dynamit:[0.1.5, ):|RESTar:[0.1.9, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.12</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-17T13:47:03.237</LastUpdated>
      <Published>2017-03-17T13:47:03.237</Published>
      <PackageHash>gHnPhgEfRogUEhdVa/6WNSIHUjuNARaAdYfsaAXPrLTIsomTraMM94R1Sxtm7iLafXCdFV7pcSv+cf/dAVyFBQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105630</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.12/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixes for bid rule sorting</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.12</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.13</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-21T13:08:04.367</Created>
      <Dependencies>Dynamit:[0.1.6, ):|RESTar:[0.1.10, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.13</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T15:30:38.803</LastUpdated>
      <Published>2017-03-21T13:08:04.367</Published>
      <PackageHash>a9jmLv7sy3RKJV0hYuKyQIqqDJ7SJlp9EyN1uqNW9AvlWAFBs3gQIDFlME+C+D+KcE8TS0f53PGCeu6umUgcdQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>108562</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.13/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>New report resources, new RESTar</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>56</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.13</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-03-21T13:09:09.2</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.14</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-03-23T15:30:37.757</Created>
      <Dependencies>Dynamit:[0.1.6, ):|RESTar:[0.1.11, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.14</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-23T15:30:38.803</LastUpdated>
      <Published>2017-03-23T15:30:37.757</Published>
      <PackageHash>m5coaHjL+QnWoDavbGcbV1hBiSiI9kFqoHk9vWF6G0Q4ZRAYoZUzYf96NpQuJ3uTv6bDp4mLbtB6vkR9H3v73Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109821</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.14/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.14</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.15</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-04-11T12:35:20.13</Created>
      <Dependencies>Dynamit:[0.1.6, ):|RESTar:[0.2.0, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.15</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-11T12:35:20.13</LastUpdated>
      <Published>2017-04-11T12:35:20.13</Published>
      <PackageHash>Od2s2BbFckz4lI0tS7d8JUzV62zT6XuNYpT+aRKYt3rU+aJoGZgdJeW3xDBLf4qc4WsFjtyQpfRqYAccwQ+SRw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110310</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.15/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements, new version of RESTar</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.15</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.17</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-04-13T14:50:28.287</Created>
      <Dependencies>Dynamit:[0.1.7, ):|RESTar:[0.2.1, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.17</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-13T14:50:28.287</LastUpdated>
      <Published>2017-04-13T14:50:28.287</Published>
      <PackageHash>B6eUdljR3uIZOAalC07IGOu11MCQMW10tJd+OpXKW/PDwlxzgH4fABn+UkikyPPeD7QlkebFROM0rWln5/hx2A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110313</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.17/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements, new versions of RESTar and Dynamit</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>47</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.17</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.22</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-04T09:39:11.643</Created>
      <Dependencies>Dynamit:[0.1.8, ):|RESTar:[0.2.3, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.22</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-04T09:39:11.643</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>256DaQ3T5jElqadcB0aQuRNWqwijpCSf+OF8KtYHSRTIFgnjHdt/c9Y3c8vFSI8l3Rz38HLlVHIK7g/54XgJPQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>115699</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.22/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements, new versions of RESTar and Dynamit</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.22</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-06-04T12:07:34.86</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.23</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-04T12:07:27.3</Created>
      <Dependencies>Dynamit:[0.1.8, ):|RESTar:[0.2.4, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.23</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-04T12:07:27.3</LastUpdated>
      <Published>2017-06-04T12:07:27.3</Published>
      <PackageHash>ezBAcvkXPhVws72Go+mxIeqbz7uy7Yg1CDx0wphcnwOUwTTFuYjNrDP5xCqUv2Ox2NwxVcj4l9vI2giSQsk06Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>115299</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.23/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>40</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.23</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.24</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-21T14:18:13.87</Created>
      <Dependencies>Dynamit:[0.1.8, ):|RESTar:[0.2.5, ):|Jil:[2.15.0, ):|log4net:[2.0.7, ):|Newtonsoft.Json:[9.0.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.24</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-21T14:18:13.87</LastUpdated>
      <Published>2017-06-21T14:18:13.87</Published>
      <PackageHash>XkXCtav3ggYw63dXsJidDIF7nw4rik9kat9A61qVMiGLnWPxlCX4CxhGfVUS0KWCOB4mbz/PGtQYPGNqFnaVdA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>121815</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.24/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>35</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.24</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.25</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-22T00:54:58.36</Created>
      <Dependencies>Dynamit:[0.1.9, ):|RESTar:[0.2.6, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.25</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T00:54:58.36</LastUpdated>
      <Published>2017-06-22T00:54:58.36</Published>
      <PackageHash>IzMlRahiS/2UfdR+wj48d+Ob7WdTAEZy+7EnRjjeHsh46zI847cox83lYixP11pMPNC1XZKWkUJjN5YewXoT0Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>121804</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.25/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>33</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.25</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.26</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-22T01:19:40.94</Created>
      <Dependencies>Dynamit:[0.1.9, ):|RESTar:[0.2.6, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.26</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T01:19:40.94</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>UjJZyGXPUBOWZTx2hiFFlLuJeOrmX6l+0kytzRis0gHs1XKTHIZn0AOsCdIXkmPbU7qwWS8WQItYZOkXcUFJkw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>121802</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.26/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.26</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-06-22T01:47:07.523</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.27</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-22T01:33:37.92</Created>
      <Dependencies>Dynamit:[0.1.9, ):|RESTar:[0.2.6, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.27</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T01:33:37.92</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>kXY2mJ4auH7PtQ3Nk55T5KOt1An/rHU37VCFoVsnU4M6cqZkYTiPq2QtQOb4iWVPGp51i283D/KPVJytO8UVOQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>121804</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.27/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>42</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.27</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-06-22T01:47:00.133</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.28</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-22T01:46:50.633</Created>
      <Dependencies>Dynamit:[0.1.10, ):|RESTar:[0.2.7, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.28</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-22T01:46:50.633</LastUpdated>
      <Published>2017-06-22T01:46:50.633</Published>
      <PackageHash>nLNjh1QqDVjAM1bCmfVXQ67sdakZ8DAkAOhlxVuNqYFiUTYr0qwirAO7u5+YZeOUcgGxsnXOydUGx74+LFIovQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>117146</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.28/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>34</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.28</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.29</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-27T12:35:56.79</Created>
      <Dependencies>Dynamit:[0.1.10, ):|RESTar:[0.2.8, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.29</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-27T12:35:56.79</LastUpdated>
      <Published>2017-06-27T12:35:56.79</Published>
      <PackageHash>1yQx/zLz3SCqK/AT5yjkU8zLBqzVcD4BHWojP2+DCdFYbx89D48RWl6o61VAeLww2QDgCyVABIaLXA/s4fp7Rg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>117077</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.29/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>36</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.29</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.31</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-30T12:44:23.823</Created>
      <Dependencies>Dynamit:[0.1.12, ):|RESTar:[0.2.10, ):|Jil:[2.15.0, ):|Newtonsoft.Json:[10.0.3, ):|System.ValueTuple:[4.3.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.31</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-30T12:44:23.823</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>jU+345CAkUDJ6s6Z6+DJmqv3xOro0FCC7Cw9VI4nVSr4DI+UUUhIcThERbDLijWFEFj1x35C6g0Zl+wJhKmoWw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>126447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.31/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>41</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.31</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>2017-06-30T13:04:50.12</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.32</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-06-30T13:04:38.48</Created>
      <Dependencies>Dynamit:[0.1.12, ):|RESTar:[0.2.10, ):|Jil:[2.15.1, ):|Newtonsoft.Json:[10.0.3, ):|System.ValueTuple:[4.3.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.32</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-30T13:04:38.48</LastUpdated>
      <Published>2017-06-30T13:04:38.48</Published>
      <PackageHash>wYa4aFhOknYovNYQUDNpekv2LIFRZpqF04BO3yJjdIMei1ZkRKGQf7k8mpeHk1PGCgQiHLXidSngJVinQlbTSA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>126447</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.32/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>33</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.32</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Mopedo</Id>
      <Version>1.0.0.33</Version>
      <Authors>Erik von Krusenstierna</Authors>
      <Copyright>Copyright 2017 Mopedo AB. All rights reserved.</Copyright>
      <Created>2017-07-01T15:50:38.79</Created>
      <Dependencies>Dynamit:[0.1.12, ):|RESTar:[0.2.11, ):|Jil:[2.15.1, ):|Newtonsoft.Json:[10.0.3, ):|System.ValueTuple:[4.3.1, ):</Dependencies>
      <Description>Create custom-tailored demand side applications on the Mopedo platform. Requires Starcounter.</Description>
      <DownloadCount>938</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Mopedo/1.0.0.33</GalleryDetailsUrl>
      <IconUrl>https://storage.googleapis.com/mopedo-resources/Mopedo_logo_whitefull.png</IconUrl>
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-01T15:50:38.79</LastUpdated>
      <Published>2017-07-01T15:50:38.79</Published>
      <PackageHash>nKh1CtJqxNc5NhI2I+2Ce9l5kpM7u4BBM1QQifDadJRAKP8xa7udv35hBugetp2/OOZ65brArWzk0cS0W4ZYkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>126594</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Mopedo/1.0.0.33/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Minor improvements</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Mopedo DSP RTB</Tags>
      <Title>Mopedo</Title>
      <VersionDownloadCount>36</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://goo.gl/eJS8o9</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Mopedo/1.0.0.33</DownloadUrl>
      <ProjectUrl>https://github.com/Mopedo/Example</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moppet.Lapa</Id>
      <Version>1.2.0</Version>
      <Authors>Alexander Yaroslavov</Authors>
      <Copyright>Yaroslavov Alexander 2013</Copyright>
      <Created>2013-11-19T09:40:55.79</Created>
      <Dependencies />
      <Description>Package description: Moppet.Lapa.dll, Moppet.Lapa.xml</Description>
      <DownloadCount>913</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T19:57:58.693</LastUpdated>
      <Published>2013-11-19T09:40:55.79</Published>
      <PackageHash>RsGc1XQOgxfa6YSkBJe1Pwx2ILz4MDZOjzcpR/VBzylDxJ9stG30rFZp90s949iTBuulIoY3NsBvhaAEHHQSbQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57221</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Very light parser generator based on combinations of lambda functions.
Without language of grammar descriptions.
Defining parsers in the code directly.</Summary>
      <Tags>"Text parser" "Parser generator" Lambda functions LALR LR AST Moppet Moppet.Lapa</Tags>
      <Title>Moppet.Lapa</Title>
      <VersionDownloadCount>175</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://moppetlapa.codeplex.com/license</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moppet.Lapa/1.2.0</DownloadUrl>
      <ProjectUrl>http://moppetlapa.codeplex.com/</ProjectUrl>
      <LastEdited>2013-11-19T10:16:37.637</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moppet.Lapa</Id>
      <Version>1.2.1</Version>
      <Authors>Alexander Yaroslavov</Authors>
      <Copyright>Yaroslavov Alexander 2013</Copyright>
      <Created>2013-11-19T10:29:34.55</Created>
      <Dependencies />
      <Description>Package description: Moppet.Lapa.dll, Moppet.Lapa.xml</Description>
      <DownloadCount>913</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.1</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T18:20:40.793</LastUpdated>
      <Published>2013-11-19T10:29:34.55</Published>
      <PackageHash>YRy7Q1jPFN1wqjGSE+l9p6JicOgfbgwncraghqhuSOxBoncwPhKsDU7PTwDG73GzQreCEXtoKUFxJSLg3ibZ6g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57413</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.1/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Very light parser generator based on combinations of lambda functions.
Without language of grammar descriptions.
Defining parsers in the code directly.</Summary>
      <Tags>Text parser generator Lambda functions LALR LR AST Moppet Moppet.Lapa</Tags>
      <Title>Moppet.Lapa</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://moppetlapa.codeplex.com/license</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moppet.Lapa/1.2.1</DownloadUrl>
      <ProjectUrl>http://moppetlapa.codeplex.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moppet.Lapa</Id>
      <Version>1.2.2</Version>
      <Authors>Alexander Yaroslavov</Authors>
      <Copyright>Yaroslavov Alexander 2013</Copyright>
      <Created>2013-11-20T15:17:45.83</Created>
      <Dependencies />
      <Description>Package description: Moppet.Lapa.dll, Moppet.Lapa.xml</Description>
      <DownloadCount>913</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.2</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-23T18:20:40.793</LastUpdated>
      <Published>2013-11-20T15:17:45.83</Published>
      <PackageHash>s2CVhfytkOccyiubHAT39g5x8aitn+3DgdvaDlZnOiKwM3ZiER+z1FpEZugX+ZTp5pH6PC6ZswQVRun1vqHz+A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57440</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.2/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Very light parser generator based on combinations of lambda functions.
Without language of grammar descriptions.
Defining parsers in the code directly.</Summary>
      <Tags>Text parser generator Lambda functions LALR LR AST Yacc Peg LPG Lex ANTLR Moppet</Tags>
      <Title>Moppet.Lapa</Title>
      <VersionDownloadCount>143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://moppetlapa.codeplex.com/license</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moppet.Lapa/1.2.2</DownloadUrl>
      <ProjectUrl>http://moppetlapa.codeplex.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moppet.Lapa</Id>
      <Version>1.2.3</Version>
      <Authors>Alexander Yaroslavov</Authors>
      <Copyright>Yaroslavov Alexander 2013</Copyright>
      <Created>2013-11-20T15:37:50.033</Created>
      <Dependencies />
      <Description>Package description: Moppet.Lapa.dll, Moppet.Lapa.xml</Description>
      <DownloadCount>913</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T09:19:13.47</LastUpdated>
      <Published>2013-11-20T15:37:50.033</Published>
      <PackageHash>QLBBrZmYXCOdvBoQtki/y3k2VA1HlLNdDJzP2tSkC/W0a1RPTLtkRmj/jZkexFruc1JY1UNQ59AooekPtdWB/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57294</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moppet.Lapa/1.2.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Very light parser generator based on combinations of lambda functions.
Without language of grammar descriptions.
Defining parsers in the code directly.</Summary>
      <Tags>Text parser generator Lambda functions LALR LR AST Yacc Peg LPG Lex ANTLR Moppet</Tags>
      <Title>Moppet.Lapa</Title>
      <VersionDownloadCount>449</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://moppetlapa.codeplex.com/license</LicenseUrl>
      <LicenseNames>MS-PL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moppet.Lapa/1.2.3</DownloadUrl>
      <ProjectUrl>http://moppetlapa.codeplex.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>3.1.416.3</Version>
      <Authors>Kzu</Authors>
      <Copyright />
      <Created>2011-01-07T07:55:42.573</Created>
      <Dependencies />
      <Description>Moq (pronounced "Mock-you" or just "Mock") is the only mocking library for .NET developed from scratch to take full advantage of .NET 3.5 (i.e. Linq expression trees) and C# 3.0 features (i.e. lambda expressions) that make it the most productive, type-safe and refactoring-friendly mocking library available</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/3.1.416.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-05T07:28:29.49</LastUpdated>
      <Published>2011-02-09T15:34:08.763</Published>
      <PackageHash>rChp3XDMsDnFaznElHZHqysZpCw0cy5+LHIRHmaoGs/l33QoyJLr+HbZcvlzN5D2fjn/nDA8X939C4QsSNYs4Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>143200</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/3.1.416.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Moq (pronounced "Mock-you" or just "Mock") is the only mocking library for .NET developed from scratch to take full advantage of .NET 3.5 (i.e. Linq expression trees) and C# 3.0 features (i.e. lambda expressions) that make it the most productive, type-safe and refactoring-friendly mocking library available</Summary>
      <Tags />
      <Title>Moq</Title>
      <VersionDownloadCount>38469</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl />
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/3.1.416.3</DownloadUrl>
      <ProjectUrl />
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.0.10827</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright>Copyright (c) 2007. Clarius Consulting, Manas Technology Solutions, InSTEDD</Copyright>
      <Created>2011-02-09T07:04:35.037</Created>
      <Dependencies />
      <Description>The simplest mocking library for .NET 3.5/4.0 and Silverlight with deep C# 3.0 integration.</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.0.10827</GalleryDetailsUrl>
      <IconUrl>http://code.google.com/p/moq/logo?cct=1288040343</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:15:27.047</LastUpdated>
      <Published>2011-02-09T15:28:49.56</Published>
      <PackageHash>MiSRqZ+Dj3mF3I/KSC9uWQZK7G4FgR6eM5/EWSVE3H/x8xu5EMsMaLeZfgGGbu0Difk2nllSsepa8F7ahl/tsg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>1605195</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.0.10827/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>The simplest mocking library for .NET 3.5/4.0 and Silverlight with deep C# 3.0 integration.</Summary>
      <Tags>tdd mocking mocks unittesting</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1532731</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.0.10827</DownloadUrl>
      <ProjectUrl>http://moq.me/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1308.2120</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-08-21T20:20:29.247</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1308.2120</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T13:11:20.94</LastUpdated>
      <Published>2013-08-21T20:20:29.247</Published>
      <PackageHash>HyvoHvSWedidancoSBeyNcASfq7y8Bm5o0/tFsSfCxSWp162zJ/ld1q0PpP2HeAGuJAJyU1TgA/yJhrjXO8Cyg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>623677</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1308.2120/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>52137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1308.2120</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1308.2316</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-08-23T16:08:14.647</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1308.2316</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T21:24:17.75</LastUpdated>
      <Published>2013-08-23T16:08:14.647</Published>
      <PackageHash>KR4Rc0F/nrYnU+hMzAP+MNmISJtsV+jLrV+ibqh5itFgSxroR9WJPoRLWh/tddKyi6zDkEmYGmUkYL0m+aYgBg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>623754</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1308.2316/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1156</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1308.2316</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1308.2321</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-08-23T21:34:43.077</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1308.2321</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-23T07:45:17.007</LastUpdated>
      <Published>2013-08-23T21:34:43.077</Published>
      <PackageHash>Mt1Z8RZ5xSuUgsvMip/YWnueIxfJ5IR3+uD8glui7NrUyYmV4j3eIIifWiDi/g1NainnIm6wc5hNmJBRNbyigA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>638245</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1308.2321/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>71605</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1308.2321</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1309.0800</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-09-08T00:23:38.167</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1309.800</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-18T16:08:40.55</LastUpdated>
      <Published>2013-09-08T00:23:38.167</Published>
      <PackageHash>V4PWoyYHwhBCq9T9wU/p4cneFE/z8M/rtued/lAkkcq3yytcUBmus1UVu/8XvTXWP9E6pVJrll+4gbTQ32rx+A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>638236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1309.800/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1070</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1309.800</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1309.0801</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-09-08T01:32:26.763</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1309.801</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T15:52:24.153</LastUpdated>
      <Published>2013-09-08T01:32:26.763</Published>
      <PackageHash>LXTGm5AnXJtiXBrO3ODQpeGiPNlA/EWTn7QlCmCauQ7oy8x8CLYxMh1lvDWPFQeOrz3SIo/jykG8G7AKUStBaw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>638838</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1309.801/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>5250</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1309.801</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1309.0919</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-09-09T19:27:25.543</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1309.919</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-24T21:44:03.253</LastUpdated>
      <Published>2013-09-09T19:27:25.543</Published>
      <PackageHash>H+iMWQG/Mvk9ifvHMo1BhNpdvPPg4HTqCI9ofeZdEEPvLRWWxZBGn/KCHQD690bJmAqzb1KC0s+G2N3i/bTHVQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>639242</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1309.919/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>220379</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1309.919</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1309.1617</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-09-16T17:08:29.993</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1309.1617</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-05T07:23:28.98</LastUpdated>
      <Published>2013-09-16T17:08:29.993</Published>
      <PackageHash>ADJISA8aTk17VKncwCjRUehxKdAowXYCEoK6QL9kDTj+jEmpo/2aDD2aBPzoVOSVhv58kYKU3UImbp6y3r5+EQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>639235</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1309.1617/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>265288</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1309.1617</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.1.1311.0615</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-11-18T19:28:54</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.1.1311.615</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:04:50.27</LastUpdated>
      <Published>2013-11-18T19:28:54</Published>
      <PackageHash>wth9mOvSVXK9SblHq0x8H1BYJAzqiqKx/Mseii5zY8b9mLdBaZsCNkTwQul0bDcAlDVnsbu0+ABtTe7pOnLCVg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>639417</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.1.1311.615/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>213799</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.1.1311.615</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1319</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-13T19:39:12.777</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1319</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T11:50:52.073</LastUpdated>
      <Published>2013-12-13T19:39:12.777</Published>
      <PackageHash>J2h1C1jfiGOr84l3Gau+LqjNsKrNo11mhU7nbuXUKFzSZG21CfbZ/34B26ZPcQmdbyE5I/lJCGFcqojabSegJA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>639891</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1319/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>7885</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1319</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1323</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-14T00:08:57.147</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1323</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:04:00.38</LastUpdated>
      <Published>2013-12-14T00:08:57.147</Published>
      <PackageHash>WugxoE31fFx/UNsePSCLC7fB1E4nnz4VlVvrzLdz0uRKgihJ6MUqnUk5ZrXeZbtmxPINK/CSitKTQjjeSmFAAA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>639920</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1323/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1099</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1323</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1416</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-14T16:52:34.617</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1416</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-23T07:50:17.47</LastUpdated>
      <Published>2013-12-14T16:52:34.617</Published>
      <PackageHash>icGUM/nWlOspR9cOI0DyMRk5a1Vshbo5Cq6yTgIfPFXKliHAxHpK8qnmUh8haaHpC/Ww8hWCHIqinBXP3HsxHQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>640362</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1416/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>10354</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1416</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1615</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-16T15:09:17.017</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1615</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-07T12:51:57.853</LastUpdated>
      <Published>2013-12-16T15:09:17.017</Published>
      <PackageHash>hysJ+2nrnbn8JKAE6tCE8KR9yd5zoQzlXrASZ9Qpfy8nT4Rcz0YIeD952rWDQ9+ILkWpO4ba4iikLUyNMOqcpw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>640376</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1615/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing


Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1811</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1615</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1621</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-16T21:34:17.607</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1621</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T09:20:02.377</LastUpdated>
      <Published>2013-12-16T21:34:17.607</Published>
      <PackageHash>fd6708oH53sc7tPLeHMLOzdam0gaQCeMMmXf7WVO9WBN1dya7pFPLa6uWcj3nQNdeftktS+LBv3ATcPXr0vr1Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>640367</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1621/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing


Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1167</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1621</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1312.1622</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2013-12-17T03:10:44.343</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1312.1622</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:10:26.483</LastUpdated>
      <Published>2013-12-17T03:10:44.343</Published>
      <PackageHash>mPAjm1Kv9jX745D3hEYDBycRT0T8gnAJE2dutbfP9meyHiRrCgQarHajEvKh5SMKM1D3RcHGr/Pg3JJEtKhu9Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>640094</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1312.1622/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>365392</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1312.1622</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1401.2701</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2014-02-20T18:43:49.883</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1401.2701</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:04:55.563</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>sdNz+4+DShbWtjqWRikRNzy2fYzhfldJODiXSrsuWbNRpZXgf2h2sQrdakJEi1Ls/cB2mW6zGxISYn2N7tIjRw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>643120</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1401.2701/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>482</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1401.2701</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1402.2112</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2014-02-21T14:29:17.22</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1402.2112</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:15:27.047</LastUpdated>
      <Published>2014-02-21T14:29:17.22</Published>
      <PackageHash>/TWoXE2OIjJjSvcxER7HMoZwpgETSGlKbLZiME7sVVoPMoqgLvDyjSISveTyHxNoDXd18cZlM8aHdS9ZOAbjMw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>643853</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1402.2112/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1052647</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1402.2112</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1408.0511</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2014-08-05T11:03:24.94</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1408.511</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:08:11.913</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>dpidkLmlh+Zh/2EGf9Ywq1RUU6uoskU479sVG+t/F8eDSTiUYMqsDwKEDk+NhBBYItY0oukFpsOrFMX6kQcrnQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>644019</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1408.511/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>53150</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1408.511</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1408.0619</Version>
      <Authors>Daniel Cazzulino</Authors>
      <Copyright />
      <Created>2014-08-06T20:18:12.267</Created>
      <Dependencies />
      <Description>The most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1408.619</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T13:06:15.48</LastUpdated>
      <Published>2014-08-06T20:18:12.267</Published>
      <PackageHash>KRY3xcC8Z2KN/gDgTbX38yx6Uw1p+p6svWBybgjgtyid/spAZc2UxYi+nRmccPlMwfeaV8LCd0/j2m/nTLX94Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>644905</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1408.619/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>tdd mocking mocks unittesting agile</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>16820</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1408.619</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1408.0717</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2014-08-07T17:32:43.59</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1408.717</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:04:50.27</LastUpdated>
      <Published>2014-08-07T17:32:43.59</Published>
      <PackageHash>AkC+iGMF3CqeUuSgI/FVcZWLCc+HJ2MNGtWZa03a5CiLku+vLFJVU7lWO7I5CoASU73KYqtivfnCq2U4fljByQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>644945</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1408.717/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>524339</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1408.717</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1409.1722</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2014-09-17T22:04:14.997</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1409.1722</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:10:26.483</LastUpdated>
      <Published>2014-09-17T22:04:14.997</Published>
      <PackageHash>3wsnbR9obUoZK1zR+X2c+Rc0+bLXItfmCFSmcHE3vs/TIYGjYStWGxqUJHScCvBbfvr7Cs6uiSGvc1jmgc/DgA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>644929</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1409.1722/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>755183</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1409.1722</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1502.0911</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2015-02-09T12:00:47.12</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1502.911</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:15:27.047</LastUpdated>
      <Published>2015-02-09T12:00:47.12</Published>
      <PackageHash>Ng1jKw2jlwaBEh16+AeIfoS7jj9Hd9Zzf7OafgTsl9fIRv0bICqhAsmLaPHTsnpd4ReJyMMUyNGUGKpyp+mqkg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>645358</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1502.911/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1165241</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1502.911</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1506.2016</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2015-06-20T17:52:43.003</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1506.2016</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T12:05:57.24</LastUpdated>
      <Published>2015-06-20T17:52:43.003</Published>
      <PackageHash>hTcUugkNxrC2Dn6owVgHu8fv3ELlDfr12xqK1AMNXjhZK9z5MrxNGA6b9Xu2tp6kIUV7MFrOyB/uvbdwY7bE/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>645674</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1506.2016/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>30623</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1506.2016</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1506.2515</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2015-06-25T15:55:04.413</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1506.2515</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-09T16:08:11.913</LastUpdated>
      <Published>2015-06-25T15:55:04.413</Published>
      <PackageHash>9ERfZrgzUOet/hl6fmvYGUHiQqfM9aRsv0FO+0ICk6Ub5/Ce07TIy+t+YfKpfY9uNGJLCZHQ6np9QdR9QcK0wQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>645958</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1506.2515/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>50455</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1506.2515</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1507.0118</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2015-07-01T18:16:27.513</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1507.118</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-22T05:23:13.767</LastUpdated>
      <Published>2015-07-01T18:16:27.513</Published>
      <PackageHash>QfnD/kZcaV6mX1cWHta3yMn/d9ly9Q62yNmHQVArKaZcFcuFb4USYeHR/4XoA258WeJ2XfrGMPVQVIURRCoyNw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>645973</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1507.118/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>895380</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1507.118</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.2.1510.2205</Version>
      <Authors>Daniel Cazzulino,  kzu</Authors>
      <Copyright />
      <Created>2015-10-22T05:23:13.767</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.2.1510.2205</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-22T05:23:13.767</LastUpdated>
      <Published>2015-10-22T05:23:13.767</Published>
      <PackageHash>nqMoHSP5f04/kyKbRUjGgzqtIb5LUUs0H6llHOkQJ5Takx4Ezr2H+59pkIgxkmpbHAcGmc/KsyRZUs1ehnPYag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>648088</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.2.1510.2205/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>2077937</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.2.1510.2205</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.6-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-22T06:37:30.8</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.6-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-22T06:37:30.8</LastUpdated>
      <Published>2016-05-22T06:37:30.8</Published>
      <PackageHash>f9dK6X8KM7/xTpQqPDTnNAKtr5s9LiZLDxNP76LbB3TgQxQLHsEj7ptL/Vu+ef7vsemOaXa7kHgA0ehaXtLO/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371347</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.6-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Add support for .NET Core

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>314</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.6-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.7-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-22T06:40:44.987</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.7-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-22T06:40:44.987</LastUpdated>
      <Published>2016-05-22T06:40:44.987</Published>
      <PackageHash>q7bcW/mHiIYkTwkFySDSWe9BtekVRYeC+lpjijDuG1HBBcJLt1JRhyAqjwAdFLEXb/pIXu9j6suBTIiQ8R6ueA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371221</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.7-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>258</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.7-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.9-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-22T14:12:37.32</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.9-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-22T14:12:37.32</LastUpdated>
      <Published>2016-05-22T14:12:37.32</Published>
      <PackageHash>j+H4hSpllPHzbqnEvukxE/SE7IOfgXVW78A+fLO2TsvCWK9OBJjNr6TtzlHsABENTJ7HNbc6xxhvOfS1/a7sjg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371266</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.9-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>4908</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.9-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.0</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-24T10:09:17.24</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-24T10:09:17.24</LastUpdated>
      <Published>2016-05-24T10:09:17.24</Published>
      <PackageHash>RMXNiLcvhdpGYZcN41pbJc9HC+PYB7+0a9QteJDKQ6sadFgo1FuYFV+xyADfFJalXzoZx5T40ypx8yX3bk0b5A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371334</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>37694</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.0</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.3</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-25T22:12:10.58</Created>
      <Dependencies />
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.3</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-25T22:12:10.58</LastUpdated>
      <Published>2016-05-25T22:12:10.58</Published>
      <PackageHash>3vBJ2OWHm1H0zGAEFhtehp0OZ5uUNHCKVQsoU6mGGpJHpY2gC8ypg53Cfb+SfLXG5DQDW0eTVWzCvwiSrWr+ag==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371549</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.3/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>46254</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.3</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.7</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-26T16:42:19.983</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.7</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-26T16:42:19.983</LastUpdated>
      <Published>2016-05-26T16:42:19.983</Published>
      <PackageHash>WmNI3s4dZh3XCNkuJC3YDOMxS723n9m6hJatV30LVSX0L6NnkTsoKRtth6FmrpJdo3lCTVXJ4+7ULxCvM7MlRw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104707</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.7/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>2282</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.7</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.8</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-05-26T19:08:51.523</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.8</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-26T19:08:51.523</LastUpdated>
      <Published>2016-05-26T19:08:51.523</Published>
      <PackageHash>yplrG5oRCTstEBjmhtKh2Vc3vjiAvEW9k4DdSrCkRs7bGvSes4MTCWQxM1eV3AJ53w0TcoKKIga433DOXUrc3Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104703</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.8/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>141299</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.8</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.25-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-06-06T00:53:58.597</Created>
      <Dependencies>Castle.Core:[4.0.0-alpha001, ):net45|Castle.Core:[4.0.0-alpha001, ):netstandard1.3|System.Collections:[4.0.11-rc2-24027, ):netstandard1.3|System.Collections.Concurrent:[4.0.12-rc2-24027, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11-rc2-24027, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1-rc2-24027, ):netstandard1.3|System.Globalization:[4.0.11-rc2-24027, ):netstandard1.3|System.Linq:[4.1.0-rc2-24027, ):netstandard1.3|System.Linq.Expressions:[4.0.11-rc2-24027, ):netstandard1.3|System.Linq.Queryable:[4.0.1-rc2-24027, ):netstandard1.3|System.Reflection:[4.1.0-rc2-24027, ):netstandard1.3|System.Reflection.Emit:[4.0.1-rc2-24027, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1-rc2-24027, ):netstandard1.3|System.Reflection.Extensions:[4.0.1-rc2-24027, ):netstandard1.3|System.Reflection.Primitives:[4.0.1-rc2-24027, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0-rc2-24027, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1-rc2-24027, ):netstandard1.3|System.Runtime:[4.1.0-rc2-24027, ):netstandard1.3|System.Runtime.Extensions:[4.1.0-rc2-24027, ):netstandard1.3|System.Text.RegularExpressions:[4.0.12-rc2-24027, ):netstandard1.3|System.Threading:[4.0.11-rc2-24027, ):netstandard1.3|System.Threading.Tasks:[4.0.11-rc2-24027, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.25-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-06T00:53:58.597</LastUpdated>
      <Published>2016-06-06T00:53:58.597</Published>
      <PackageHash>YYZ5oARSosC7l7THN2qJCvcaZhONWMzuh2rsRIP0X7x5oE8wEtElxh/Xr8KpgeTGCbqtVHA/Bx3hr8woOoPP/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>198127</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.25-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>63385</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.25-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.9</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-06-09T10:36:55.037</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.9</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-09T10:36:55.037</LastUpdated>
      <Published>2016-06-09T10:36:55.037</Published>
      <PackageHash>dhVX8Gn/84kucjMnMTv/StGBBsCGacPjGYU9v7yn/cRZVFVZbkhTyg9qt+df/zTvdx+civ6F3qNgh4S9HgiyxQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104692</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.9/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>115613</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.9</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.10</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-06-21T15:21:49.763</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.10</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-21T15:21:49.763</LastUpdated>
      <Published>2016-06-21T15:21:49.763</Published>
      <PackageHash>Tt00mMHd99mCL/NSvQLmmlu/vSergn4b23wrYc7NgJhjM0+pjS1JP4k5pq/a8wb4kiuaZnbQ2VSaBbSQNmUowQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105835</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.10/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>205246</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.10</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.13</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-07-11T16:45:45.653</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.13</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-11T16:45:45.653</LastUpdated>
      <Published>2016-07-11T16:45:45.653</Published>
      <PackageHash>vwi8eVkcs51MkmgKhawUq77pbczQYH+vbBq7My+Gii9DCB8nVmH5uFpnQGxGpZ9y2Q0pqyUr4qSVlWoYdwKGOg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105897</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.13/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>63708</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.13</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.16</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-07-18T15:24:39.937</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.16</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-18T15:24:39.937</LastUpdated>
      <Published>2016-07-18T15:24:39.937</Published>
      <PackageHash>FcOiXrD8TjECDSuyt/8sstiZh8gcvwE8fGEH55WV7nCWtO7gHRmNdEB9cDH7f6JwdD/A04KszwA+bONsRo85Kg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105708</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.16/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>191564</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.16</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.36-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-07-20T23:02:11.667</Created>
      <Dependencies>Castle.Core:[4.0.0-beta001, ):net45|Castle.Core:[4.0.0-beta001, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.36-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-20T23:02:11.667</LastUpdated>
      <Published>2016-07-20T23:02:11.667</Published>
      <PackageHash>kzWy3IwRi4igVGlUi/tM0x8CKQ1UrFRELIYyyKhLd5N+Afi34p0H3+J01/kavDAlUm6pcYh+b24bV84UJixBZg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>200383</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.36-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>141435</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.36-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.18</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-08-10T12:25:52.81</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.18</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-10T12:25:52.81</LastUpdated>
      <Published>2016-08-10T12:25:52.81</Published>
      <PackageHash>kvK2S2MhYUk4WHNHwo3qHs+JennIWaq+2tlRN69Qp4ddSeo3l4XA+3dg0yj4B92h1uA3D/+inOZK/GTrCDPmOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105858</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.18/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1211</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.18</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.19</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-08-10T14:13:35.29</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.19</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-10T14:13:35.29</LastUpdated>
      <Published>2016-08-10T14:13:35.29</Published>
      <PackageHash>X4xxRSSGZ0dkPYlIE4yfxD3PGNvm8vnhn3SUWImQEO1NjIS+IcR5vcsvpD9wwXaGPbHHYIMHtvwCCyAj1gIXCw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106389</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.19/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>27143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.19</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.20</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-08-12T14:52:44.627</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.20</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-12T14:52:44.627</LastUpdated>
      <Published>2016-08-12T14:52:44.627</Published>
      <PackageHash>wH7eRAjcw1+FjLFT+gc0bAG1WdDfPJMVpF/YAIdRmQp+y+SaaEuV+tn/FKvFo6ZCt70k9uH8mCNBbciZBni/5A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106372</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.20/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>1320</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.20</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.21</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-08-12T14:54:14.447</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.21</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-12T14:54:14.447</LastUpdated>
      <Published>2016-08-12T14:54:14.447</Published>
      <PackageHash>fs7WZs0w3NIunxMRN3Qv3Bp2Zkw6F0p0+376/9fqmgEpDcA6aU4zP0bco/JNLG6mDEIpKAPmWXavBMviJYPw+g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106390</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.21/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>417342</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.21</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.38-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-08-20T12:04:10.923</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45|Castle.Core:[4.0.0-beta001, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.38-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-20T12:04:10.923</LastUpdated>
      <Published>2016-08-20T12:04:10.923</Published>
      <PackageHash>avMAfImICo7K8kkSqZDnwS7qvwyyNzNDQQFtnsI4CxAgi+ESOLFr1j5ucAE2hGoG1k5A0B1+3zfNYhHkozW1EA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>200392</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.38-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>429572</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.38-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.22</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-09-20T21:38:16.847</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.22</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-20T21:38:16.847</LastUpdated>
      <Published>2016-09-20T21:38:16.847</Published>
      <PackageHash>poJ0kRbxNGupAvlGJ0lppL4o/vRDO05+bL05x9v4q53JogGVZFU17tlFLsIpQPvxhl6Poj5vA1ro4ePGTnnkUw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106710</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.22/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>209242</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.22</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.23</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-10-11T21:20:17.07</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.23</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-11T21:20:17.07</LastUpdated>
      <Published>2016-10-11T21:20:17.07</Published>
      <PackageHash>oS7D0vA+ltfyrZ/wXd1HYl8j5B9MAnTiluTeZXiyE07dQPRWG/i9O5+HJpor5F3sVoWLU/gDb8lQgHeb5dfrsg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106720</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.23/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>276194</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.23</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.28</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-11-10T23:33:04.653</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.28</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-10T23:33:04.653</LastUpdated>
      <Published>2016-11-10T23:33:04.653</Published>
      <PackageHash>Vt+0fc8+CHpO9OKLcmZ86whC4bMkolCNKxLs/sTENfqbGwTCs+WgzI+p1NP7po1Mh4gfzQZBk6kzzA6HJ1T78g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111318</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.28/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>281876</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.28</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.29</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2016-12-10T17:36:19.627</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.29</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-10T17:36:19.627</LastUpdated>
      <Published>2016-12-10T17:36:19.627</Published>
      <PackageHash>iLhUfoKC4n5/gsWYzfP8p8884UJz8lJAZ3SY6RgpWcuN+qAZ5rhEtLzAZeNgeZroNVeIsOnfpctQXkNaC74plw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111666</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.29/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>238568</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.29</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.5.30</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2017-01-09T04:04:32.56</Created>
      <Dependencies>Castle.Core:[3.3.3, ):net45</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.5.30</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-09T04:04:32.56</LastUpdated>
      <Published>2017-01-09T04:04:32.56</Published>
      <PackageHash>+PsSIGUQmEqgS9JJ87lRJXExkR2sTSGC3Rg6v/gJ4zObsI+AaGLxvHvG/oeUnS4zZW6gMw9wCDA4w0Jf+qo+vA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111662</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.5.30/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>406539</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames>BSD-2-Clause</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.5.30</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.39-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2017-02-18T18:29:31.57</Created>
      <Dependencies>Castle.Core:[4.0.0, ):net45|Castle.Core:[4.0.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.39-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-18T18:29:31.57</LastUpdated>
      <Published>2017-02-18T18:29:31.57</Published>
      <PackageHash>l+9WZDJ0gCImgDboZ4lV+5OOsCCeQ/DQgTq/1WjLNVdpApprjq8+5zIDfxu9gyiJ/lLy6szl+yJlaOlA5h/tQg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>200390</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.39-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>3203</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.39-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.62-alpha</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2017-02-21T20:43:34.95</Created>
      <Dependencies>Castle.Core:[4.0.0, ):net45|Castle.Core:[4.0.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.62-alpha</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-21T20:43:34.95</LastUpdated>
      <Published>2017-02-21T20:43:34.95</Published>
      <PackageHash>bpTlQg5faIbtK3wDNhRvOIMf2VQMkBvzdn1siTKxzcOFEebjW63UcvkxI1JbgF13FKywkcdTC6Zjelt0/bADPg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>212020</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.62-alpha/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>945</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.62-alpha</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.6.0</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2017-02-21T20:51:22.433</Created>
      <Dependencies>Castle.Core:[4.0.0, ):net45|Castle.Core:[4.0.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.6.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-21T20:51:22.433</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>T5YHRT10YZVNWqs4MY89yvl8iZKu3dbBINgFi8qn4YcATUJWanrpFoO8bVdE7+Ma7IqBLnn33u9xRBGUDAZMdA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>211929</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.6.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>3398</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.6.0</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>2017-02-22T15:00:17.897</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Moq</Id>
      <Version>4.7.0</Version>
      <Authors>Daniel Cazzulino, kzu</Authors>
      <Copyright />
      <Created>2017-02-22T03:05:12.363</Created>
      <Dependencies>Castle.Core:[4.0.0, ):net45|Castle.Core:[4.0.0, ):netstandard1.3|System.Collections:[4.0.11, ):netstandard1.3|System.Collections.Concurrent:[4.0.12, ):netstandard1.3|System.Diagnostics.Debug:[4.0.11, ):netstandard1.3|System.Diagnostics.Tools:[4.0.1, ):netstandard1.3|System.Globalization:[4.0.11, ):netstandard1.3|System.Linq:[4.1.0, ):netstandard1.3|System.Linq.Expressions:[4.1.0, ):netstandard1.3|System.Linq.Queryable:[4.0.1, ):netstandard1.3|System.Reflection:[4.1.0, ):netstandard1.3|System.Reflection.Emit:[4.0.1, ):netstandard1.3|System.Reflection.Emit.ILGeneration:[4.0.1, ):netstandard1.3|System.Reflection.Extensions:[4.0.1, ):netstandard1.3|System.Reflection.Primitives:[4.0.1, ):netstandard1.3|System.Reflection.TypeExtensions:[4.1.0, ):netstandard1.3|System.Resources.ResourceManager:[4.0.1, ):netstandard1.3|System.Runtime:[4.1.0, ):netstandard1.3|System.Runtime.Extensions:[4.1.0, ):netstandard1.3|System.Text.RegularExpressions:[4.1.0, ):netstandard1.3|System.Threading:[4.0.11, ):netstandard1.3|System.Threading.Tasks:[4.0.11, ):netstandard1.3</Dependencies>
      <Description>Moq is the most popular and friendly mocking framework for .NET</Description>
      <DownloadCount>14172563</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Moq/4.7.0</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-22T03:05:12.363</LastUpdated>
      <Published>2017-02-22T03:05:12.363</Published>
      <PackageHash>EARB1hiT51yYWHynI+7FWOIZ9Lc3Pf83DlE3yROrgkiQ7xJy3+I52A5yMgvFe9GhOdXmXhBxZKApeOtWTV5MEQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>211919</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Moq/4.7.0/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Version 4.5
* Updated to .NET 4.5
* Dropped support for .NET &lt; 4.5 and Silverlight
* Remove ILMerge. Depend on Castle NuGet package instead.

Version 4.3
* Added support for Roslyn
* Automatically add implemented interfaces to mock

Version 4.2
* Improved support for async APIs by making default value a completed task
* Added support for async Returns and Throws
* Improved mock invocation sequence testing
* Improved support for multi-threaded tests
* Added support for named mocks

Version 4.1
* Added covariant IMock&lt;out T&gt; interface to Mock&lt;T&gt;
* Added It.IsNotNull&lt;T&gt;
* Fix: 'NullReferenceException when subscribing to an event'
* Added overloads to Verify to accept Times as a Method Group
* Feature request: It.IsIn(..), It.IsNotIn(...)
* Corrected Verify method behavior for generic methods calls
* Differentiate verification error from mock crash
* Fix: Adding (and removing) handlers for events declared on interfaces works
when CallBase = true.
* Update to latest Castle
* Fix: Mock.Of (Functional Syntax) doesn't work on properties with non-public setters
* Fix: Allow to use CallBase instead of Returns
* Fix: Solved Multi-threading issue - IndexOutOfRangeException
* Capability of mocking delegates (event handlers)

Version 4.0
* Linq to Mocks: Mock.Of&lt;T&gt;(x =&gt; x.Id == 23 &amp;&amp; x.Title == "Rocks!")
* Fixed issues:
  *  87	BadImageFormatException when using a mock with a Visual Studio generated Accessor object
  *  166	Unable to use a delegate to mock a function that takes 5 or more parameters.
  *  168	Call count failure message never says which is the actual invocation count
  *  175	theMock.Object failing on VS2010 Beta 1
  *  177	Generic constraint on interface method causes BadImageFormatException when getting Object.
  *  183	Display what invocations were recieved when the expected one hasn't been met
  *  186	Methods that are not virtual gives non-sense-exception message
  *  188	More Callback Overloads
  *  199	Simplify SetupAllProperties implementation to simply iterate and call SetupProperty
  *  200	Fluent mock does not honor parent mock CallBase setting.
  *  202	Mock.Protected().Expect() deprecated with no work-around
  *  204	Allow default return values to be specified (per-mock)
  *  205	Error calling SetupAllProperties for Mock&lt;IDataErrorInfo&gt;
  *  206	Linq-to-Mocks Never Returns on Implicit Boolean Property
  *  207	NullReferenceException thrown when using Mocks.CreateQuery with implicit boolean expression
  *  208	Can't setup a mock for method that accept lambda expression as argument.
  *  211	SetupAllProperties should return the Mock&lt;T&gt; instead of void. 
  *  223	When a method is defined to make the setup an asserts mock fails
  *  226	Can't raise events on mocked Interop interfaces
  *  229	CallBase is not working for virtual events
  *  238	Moq fails to mock events defined in F# 
  *  239	Use Func instead of Predicate
  *  250	4.0 Beta 2 regression - cannot mock MethodInfo when targetting .NET 4
  *  251	When a generic interface also implements a non-generic version, Verify does not work in some cases
  *  254	Unable to create mock of EnvDTE.DTE
  *  261	Can not use protected setter in public property
  *  267	Generic argument as dependency for method Setup overrides all previous method setups for a given method
  *  273	Attempting to create a mock thrown a Type Load exception. The message refers to an inaccessible interface.
  *  276	.Net 3.5 no more supported

Version 3.0

* Silverlight support! Finally integrated Jason's Silverlight contribution! Issue #73
* Brand-new simplified event raising syntax (#130): mock.Raise(foo =&gt; foo.MyEvent += null, new MyArgs(...));
* Support for custom event signatures (not compatible with EventHandler): mock.Raise(foo =&gt; foo.MyEvent += null, arg1, arg2, arg3);
* Substantially improved property setter behavior: mock.VerifySet(foo =&gt; foo.Value = "foo");  //(also available for SetupSet
* Renamed Expect* with Setup*
* Vastly simplified custom argument matchers: public int IsOdd() &lt; return Match&lt;int&gt;.Create(v =&gt; i % 2 == 0); &gt;
* Added support for verifying how many times a member was invoked: mock.Verify(foo =&gt; foo.Do(), Times.Never());
* Added simple sample app named StoreSample
* Moved Stub functionality to the core API (SetupProperty and SetupAllProperties)
* Fixed sample ASP.NET MVC app to work with latest version
* Allow custom matchers to be created with a substantially simpler API
* Fixed issue #145 which prevented discrimination of setups by generic method argument types
* Fixed issue #141 which prevented ref arguments matching value types (i.e. a Guid)
* Implemented improvement #131: Add support for It.IsAny and custom argument matchers for SetupSet/VerifySet
* Implemented improvement #124 to render better error messages
* Applied patch from David Kirkland for improvement #125 to improve matching of enumerable parameters
* Implemented improvement #122 to provide custom errors for Verify
* Implemented improvement #121 to provide null as default value for Nullable&lt;T&gt;
* Fixed issue #112 which fixes passing a null argument to a mock constructor
* Implemented improvement #111 to better support params arguments
* Fixed bug #105 about improperly overwriting setups for property getter and setter
* Applied patch from Ihar.Bury for issue #99 related to protected expectations 
* Fixed issue #97 on not being able to use SetupSet/VerifySet if property did not have a getter
* Better integration with Pex (http://research.microsoft.com/en-us/projects/Pex/)
* Various other minor fixes (#134, #135, #137, #138, #140, etc.)
    

Version 2.6

* Implemented Issue #55: We now provide a mock.DefaultValue = [DefaultValue.Empty | DefaultValue.Mock] which will provide the current behavior (default) or mocks for mockeable return types for loose mock invocations without expectations.
* Added support for stubbing properties from moq-contrib: now you can do mock.Stub(m =&gt; m.Value) and add stub behavior to the property. mock.StubAll() is also provided. This integrates with the DefaultValue behavior too, so you can stub entire hierarchies :).
* Added support for mocking methods with out and ref parameters (Issue #50)
* Applied patch contributed by slava for Issue #72: add support to limit numbor of calls on mocked method (we now have mock.Expect(...).AtMost(5))
* Implemented Issue #94: Easier setter verification: Now we support ExpectSet(m = m.Value, "foo") and VerifySet(m = m.Value, 5) (Thanks ASP.NET MVC Team!)
* Implemented issue #96: Automatically chain mocks when setting expectations. It's now possible to specify expectations for an entire hierarchy of objects just starting from the root mock. THIS IS REALLY COOL!!!
* Fixed Issue #89: Expects() does not always return last expectation
* Implemented Issue 91: Expect a method/property to never be called (added Never() method to an expectation. Can be used on methods, property getters and setters)
* Fixed Issue 86: IsAny&lt;T&gt; should check if the value is actually of type T
* Fixed Issue 88: Cannot mock protected internal virtual methods using Moq.Protected
* Fixed Issue 90: Removing event handlers from mocked objects
* Updated demo and added one more test for the dynamic addition of interfaces

Version 2.5

* Added support for mocking protected members
* Added new way of extending argument matchers which is now very straightforward
* Added support for mocking events
* Added support for firing events from expectations
* Removed usage of MBROs which caused inconsistencies in mocking features
* Added ExpectGet and ExpectSet to better support properties, and provide better intellisense.
* Added verification with expressions, which better supports Arrange-Act-Assert testing model (can do Verify(m =&gt; m.Do(...)))
* Added Throws&lt;TException&gt;
* Added mock.CallBase property to specify whether the virtual members base implementation should be called
* Added support for implementing and setting expectations and verifying additional interfaces in the mock, via the new mock.As&lt;TInterface&gt;() method (thanks Fernando Simonazzi!)
* Improved argument type matching for Is/IsAny  (thanks Jeremy.Skinner!)


Version 2.0

* Refactored fluent API on mocks. This may cause some existing tests to fail, but the fix is trivial (just reorder the calls to Callback, Returns and Verifiable)
* Added support for retrieving a Mock&lt;T&gt; from a T instance created by a mock.
* Added support for retrieving the invocation arguments from a Callback or Returns.
* Implemented AtMostOnce() constraint 
* Added support for creating MBROs with protected constructors
* Loose mocks now return default empty arrays and IEnumerables instead of nulls


Version 1.5.1

* Refactored MockFactory to make it simpler and more explicit to use with regards to verification. Thanks Garry Shutler for the feedback! 

Version 1.5

* Added MockFactory to allow easy construction of multiple mocks with the same behavior and verification 

Version 1.4

* Added support for passing constructor arguments for mocked classes.
* Improved code documentation 

Version 1.3

 * Added support for overriding expectations set previously on a Mock. Now adding a second expectation for the same method/property call will override the existing one. This facilitates setting up default expectations in a fixture setup and overriding when necessary in a specific test.
 * Added support for mock verification. Both Verify and VerifyAll are provided for more flexibility (the former only verifies methods marked Verifiable) 

Version 1.2

* Added support for MockBehavior mock constructor argument to affect the way the mocks expect or throw on calls. 

Version 1.1

* Merged branch for dynamic types. Now Moq is based on Castle DynamicProxy2 to support a wider range of mock targets.
* Added ILMerge so that Castle libraries are merged into Moq assembly (no need for external references and avoid conflicts) 

Version 1.0

* Initial release, initial documentation process in place, etc.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>moq tdd mocking mocks unittesting agile unittest</Tags>
      <Title>Moq</Title>
      <VersionDownloadCount>138447</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.opensource.org/licenses/bsd-license.php</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Moq/4.7.0</DownloadUrl>
      <ProjectUrl>http://www.moqthis.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.330</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-29T18:51:42.903</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.330</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-04-29T18:51:42.903</Published>
      <PackageHash>0O9FVf7g8jFwc/n2lI5ITy2SCzR+HdB0kO/7DeKbl8IY3sqDMkkQ8e4u2vmMTJVyAXR6oYYpFwBEGL9jwXoRzQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24285</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.330/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>145</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.330</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.340</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-05-22T20:44:24.483</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.340</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-05-22T20:44:24.483</Published>
      <PackageHash>FcC7vH+m/VgejL0NOYBN+b26Eu64bqH8T7E3UE0LoH/ubwxgs+Fr6su3yL4u8UEvMx9jTMxm0Z3Nv2miJdfoGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24268</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.340/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>158</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.340</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.350</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-08T18:20:51.257</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.350</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-07-08T18:20:51.257</Published>
      <PackageHash>7XxAbujEqpZYNmhoUaZ3rZZfqeoAKewsp7KMGZLJXgRIZ8miLDHe2nG7qr6EFBOgj1g8zug+AODOPS+5WNQSpQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.350/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>141</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.350</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.360</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-15T22:43:33.703</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.360</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-07-15T22:43:33.703</Published>
      <PackageHash>sEIkR2wMt0RQSp+O5zzFu7LtrRI8UQjxtyxDSGwp3QNwPiXsA+SUl3+E1xTqvNT4+pi2GFZVdoQIL0ReCrDuSg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24300</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.360/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.360</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.370</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-23T13:32:44.813</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.370</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-07-23T13:32:44.813</Published>
      <PackageHash>Kgbx2N1Ua0kq/75E6aHoL1/qbZfz/VmNeEiVJDUlTSQ24vnUtc+NCY3FMfqSyq0bZJqJlLJhYr3v51qBZMZODA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24303</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.370/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.370</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.380</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-30T19:17:36.897</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.380</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-07-30T19:17:36.897</Published>
      <PackageHash>0YemQK8ydGRUB3p7/EHuddDhvVCUsDc2X01GfwbAgD3VygV2jpsmt2DHZxqF2NvFILtT3s3QacfQ8MPfA9xZug==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24300</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.380/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.380</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.390</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-12T21:18:17.397</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.390</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-08-12T21:18:17.397</Published>
      <PackageHash>TN7HQDdsVNZtudHYeYZ/Osx1iq07mr8eWgPgujIKtPEqwCPOarsD6KkaDj9sH3iwJhOAg887GedxoUepe12SKg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24299</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.390/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.390</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.400</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-19T19:32:33.247</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.400</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-08-19T19:32:33.247</Published>
      <PackageHash>xGqw0mZqvMachYMoylKL9bTom6Vu9JG3W2YG7a6+OC4EwVl43/WRAnBO27FYmk2c8RtxrGgbZkmw4n16zAWkuA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>24299</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.400/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>139</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.400</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.8.1.430</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-10T14:00:14.123</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.430</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-09-10T14:00:14.123</Published>
      <PackageHash>k4Rs/+21GohCWPHtDC+RP16ja3BAyMAi9fy8v6IcjG09er+Xnta54KgEaJaog1Xq2wykl91BOJcQKNa8jlgyIw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21322</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.8.1.430/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>153</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.8.1.430</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.450</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-30T16:11:30.163</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.450</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-09-30T16:11:30.163</Published>
      <PackageHash>fwZRal18oue82LYT37PjnBN0pLYa/tmnqcsBZt3yzCEH+vVQpELwxPvOlkF6MkhkayTAt4puBcdR8SKRZ2FV+g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21327</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.450/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.450</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.460</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-07T20:31:18.42</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.460</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-10-07T20:31:18.42</Published>
      <PackageHash>8gH9IT+FGOAlVAwkjzzhK/K0fKCQKSe/HaN8MKqWxLXPRS7JhqUnJ0dVT+7SplAuQE48NH5NYmwfsTaLZ7bqqw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21337</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.460/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>138</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.460</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.470</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-08T15:31:20.667</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.470</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-10-08T15:31:20.667</Published>
      <PackageHash>O++JxgeuhCAXBLci/lfcDsdm4UPJQmPBhFk1bvFPxJyx1makIkLcBF7p7X1IwRExEB76V96xYzLWhztlWrjApQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21247</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.470/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>143</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.470</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.490</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-15T21:50:46.083</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.490</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-10-15T21:50:46.083</Published>
      <PackageHash>8Ay1unBvICtOkZ3uxX4gWJSk32rhhQXN7X58PgpqSNcQ9lm4YdKNnIykCsbUS/+acxfbOStGhNlrYuqrpzrmPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21332</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.490/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>137</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.490</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.500</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-22T13:37:57.367</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.500</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-10-22T13:37:57.367</Published>
      <PackageHash>+DWkDuGbANLhr9v/rmA16uVYjtRZ1QDsP3LUkCT9wb1CmhDaUCCG74dyaqN+XWk4ZuPOMRDNge4QwxlDJ6+N/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21326</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.500/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.500</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.510</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-30T20:16:39.503</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.510</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-10-30T20:16:39.503</Published>
      <PackageHash>6L7r1TMjA6nsgR2HcPTjeqhzuFxxnCwmqcgeYb5/KwzM0fqAdlr1HAJuaC1bSKhrHusQUPU5je74XKEMNdQ2Fw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21319</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.510/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>712</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.510</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.520</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-04T21:01:32.667</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.520</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T18:45:07.737</LastUpdated>
      <Published>2014-11-04T21:01:32.667</Published>
      <PackageHash>9TVoEI1S5x7J8jet0XUk31QS+5hslJ29OOAAGstwMIxfxfwii5L/IS3zc/w7N30EGOx1zBFPRRVi65pGoU3lOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21599</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.520/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>362</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.520</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.540</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-11-20T21:59:54.72</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.540</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-11-20T21:59:54.72</Published>
      <PackageHash>u7zh3v+6T2uH/sB7ggr8VJ50IPsTFRTmNsfOTV6tJBkNPJ6YnTeLNK69PlKvteprWAQCHHxG2dfxgjmnUSL3UA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21594</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.540/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>170</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.540</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.550</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-12-11T01:16:22.547</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.550</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-12-11T01:16:22.547</Published>
      <PackageHash>qF8dxTe70AJEyLkn5g9mANDVNsZqj1rOpeYmKotegKdmUT8Bz92vWYTDl0XI/S1ahjidpomDmIkRvvYO6wXK9A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21922</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.550/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>129</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.550</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.560</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-12-19T15:10:42.233</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.560</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2014-12-19T15:10:42.233</Published>
      <PackageHash>H40yxBBo1aXYz0+DZksDOmRNrsEDeuqtzZYCtEwIiRgYTtrcXx4BmKIO6tL+68a4WVdch6vfLPms9HWa4DjrGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21917</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.560/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.560</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.570</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-02-26T21:59:48.267</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.570</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2015-02-26T21:59:48.267</Published>
      <PackageHash>EC8P3nN9sB27yHe9BOXwLb0zdiAnb66IfxVKmrxYbNUNMqLy8QG9rWRoWdZK9JHVlljOIfasL7ppAZFBPWfv/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>21926</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.570/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.570</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.580</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-04-01T11:44:57.627</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.580</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T23:22:02.897</LastUpdated>
      <Published>2015-04-01T11:44:57.627</Published>
      <PackageHash>yc7QVQh6wmGQb1Q3KjZNyEUXfSFHOxDXxpjoSyQUXACRyD8eSJ/DfmF2bqEmr/v+UzDFHiHalm+tY0AFjktkhw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22557</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.580/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.580</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.590</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-04-15T19:39:19.393</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.590</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-05T21:24:23.45</LastUpdated>
      <Published>2015-04-15T19:39:19.393</Published>
      <PackageHash>Ydmy+ha4Ky7rFZtuPjK26mSi3j1rsgJwFBNv+hmh95Xcr77irdPjzh7QIcOlppz3A5mBdNiZLZcc6MQGm/z3rQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22536</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.590/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.590</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.0.600</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-06-05T21:24:23.45</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.600</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-23T03:59:54.433</LastUpdated>
      <Published>2015-06-05T21:24:23.45</Published>
      <PackageHash>I+awrwBd7lRDB6/XNyTkge9QUpEzQ9f+Sf/GwtxO/6blzj9lhcO29zZTGhRyzXMPnCW8i6qQIH0K9G/m7wYtpw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22525</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.0.600/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.0.600</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.2.610</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-07-23T03:59:54.433</Created>
      <Dependencies>Google.Apis:1.9.2:|Google.Apis.Auth:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.610</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-03T17:40:32.717</LastUpdated>
      <Published>2015-07-23T03:59:54.433</Published>
      <PackageHash>fRLKJDX/qKnX2QTGCKAPYmfyuO31tAq6Gxyw8UviA/Y6K8qrgT7K2yt4nH5z+WNhFOUsL13urgXWpOwVcqXo0A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>22996</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.610/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>161</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.2.610</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.2.620</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-09-03T17:40:32.717</Created>
      <Dependencies>Google.Apis:1.9.2:|Google.Apis.Auth:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.620</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-23T00:06:20.627</LastUpdated>
      <Published>2015-09-03T17:40:32.717</Published>
      <PackageHash>ZO8JLO5L0ekjBZ2I3+R6ZogNpWbnAb/hhIAuC87iq3CPXPllnMHUW4j3tMrU5cNcR4p34bR9/ZFkI3g68De56g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23091</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.620/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>159</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.2.620</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.2.630</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-09-23T00:06:20.517</Created>
      <Dependencies>Google.Apis:1.9.2:|Google.Apis.Auth:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.630</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-05T19:42:48.073</LastUpdated>
      <Published>2015-09-23T00:06:20.517</Published>
      <PackageHash>AzZXkj9pvFOo9Znv/mOJa/mGYNyUekCn1xz1u+mPLKGPq9WjhhwQ+/HTIzjIndvpuAv24VTLtiiRq8jI5bGYbA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23682</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.630/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>162</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.2.630</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.2.640</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-11-05T19:42:48.073</Created>
      <Dependencies>Google.Apis:1.9.2:|Google.Apis.Auth:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.640</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-05T19:42:48.073</LastUpdated>
      <Published>2015-11-05T19:42:48.073</Published>
      <PackageHash>qbQW9U+H1bP1V7Vbvmdc4BfV6zx2Y/rr0G9jWyHsE6R9E+gptOtqtLhVlx9ZoViKjKeAaB0xAsYjl9IK+2XW1Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23637</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.640/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.2.640</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.9.2.650</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-12-11T20:44:06.36</Created>
      <Dependencies>Google.Apis:1.9.2:|Google.Apis.Auth:1.9.2:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.650</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-11T20:44:06.36</LastUpdated>
      <Published>2015-12-11T20:44:06.36</Published>
      <PackageHash>eJj0693a0+emQpi8PgdX6Bt+Y6U6q4IlfZfAPFzkDpF4ndtCVe/zE3/yXQiHYfOTBO1i5DdDrJymsMMWzUTvBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23641</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.9.2.650/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>153</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.9.2.650</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.640</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-12-15T22:57:45.81</Created>
      <Dependencies>Google.Apis:1.10.0:|Google.Apis.Auth:1.10.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.640</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-15T22:57:45.81</LastUpdated>
      <Published>2015-12-15T22:57:45.81</Published>
      <PackageHash>G7U8YQlmrb+giZ5TxFvNo8K7VVVs4OvBupA6Lrqw2xAcjrO7Vb87C7mARutkmAS2Gfw+8BqKdeQK1+puTNYFSg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31167</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.640/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.640</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.650</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2015-12-15T23:50:59.647</Created>
      <Dependencies>Google.Apis:1.10.0:|Google.Apis.Auth:1.10.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.650</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-15T23:50:59.647</LastUpdated>
      <Published>2015-12-15T23:50:59.647</Published>
      <PackageHash>vq4iyR8ry0km6tium1ZC4UdbrNYqEvl3XahveJVVIUaWXU12w9QRiE5sr0fO581cpktRsSrowuJ//lwSWV/ovg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23859</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.650/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.650</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.660</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-01-15T01:37:13.31</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.660</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-01-15T01:37:13.31</LastUpdated>
      <Published>2016-01-15T01:37:13.31</Published>
      <PackageHash>qBBCrJqrSYPvknCmQvN+rSwgi7EFFDWK+YbyqZtuSEevitRY0wixEVKLXtVgxyVsS5eVbzQRaAfwGlxjXJ8kqQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23800</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.660/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>154</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.660</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.690</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-02-09T20:34:27.607</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.690</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-09T20:34:27.607</LastUpdated>
      <Published>2016-02-09T20:34:27.607</Published>
      <PackageHash>kXandNi6aOvoIGZ01xrAX3FeM0F9v0DjQ9whAOyXKmYY5sJojGMubD2kAxfmzgdRJ14qZ2sZ5fXkPKD8dEVyZA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23754</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.690/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>95</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.690</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.710</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-02-11T20:34:24.167</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.710</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-11T20:34:24.167</LastUpdated>
      <Published>2016-02-11T20:34:24.167</Published>
      <PackageHash>2Zke4ZlXTO04bKGrevVg4FKhs/VUfNIa8yWjUdt2szf10J4ISBO7AcgLtetv7dPKn2owm36Koer27tN4mGG17Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23761</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.710/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.710</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.730</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-02-28T22:13:46.39</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.730</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-02-28T22:13:46.39</LastUpdated>
      <Published>2016-02-28T22:13:46.39</Published>
      <PackageHash>0fzggp3Gh8mmUGvNEW3kKecCll1k5OCyZUWl4UKj2Quu9KJATWEg1r9tcT8a5OfEbt8Jy9C1jJmPdlPlqq8mMQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23757</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.730/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>97</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.730</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.0.740</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-07T05:21:22.033</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://developers.google.com/resources/api-libraries/download/adexchangebuyer/v1.2/csharp</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.740</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-07T05:21:22.033</LastUpdated>
      <Published>2016-03-07T05:21:22.033</Published>
      <PackageHash>JNDGJ5/qajIxrOSbZNpwvxRvQVmzYzNAgojP9O17Qm6rpCOJS4oGnq0NvR2XqNnA9mhunPYprXPGyUZsG6yMiQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>23763</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.0.740/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>106</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.0.740</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.10.1.434</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-14T23:05:10.467</Created>
      <Dependencies>Google.Apis:[1.10.0, ):|Google.Apis.Auth:[1.10.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.1.434</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-14T23:05:10.467</LastUpdated>
      <Published>2016-03-14T23:05:10.467</Published>
      <PackageHash>yUTb4QZKNWP0sjmQR3KqYex9tF1SM3bGQKSayEzSWaf/6aDFJeoO+h8slkTt1yHDr9dNhfmyFtFjejW4/CTk+Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31200</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.10.1.434/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>96</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.10.1.434</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.11.0.442</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-22T19:54:43.82</Created>
      <Dependencies>Google.Apis:[1.11.0, ):|Google.Apis.Auth:[1.11.0, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.11.0.442</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-22T19:54:43.82</LastUpdated>
      <Published>2016-03-22T19:54:43.82</Published>
      <PackageHash>uhYkJLpogDraUfLCaJphzGD9qewMi7N0tKlCTnS1yp1CYR7PZ6ZKulUlBP4IOJER9jYH2bLh+lUe1Y4j2BfAnA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31239</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.11.0.442/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>91</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.11.0.442</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.11.1.442</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-03-22T22:38:38.813</Created>
      <Dependencies>Google.Apis:[1.11.1, ):|Google.Apis.Auth:[1.11.1, ):</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.11.1.442</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-03-22T22:38:38.813</LastUpdated>
      <Published>2016-03-22T22:38:38.813</Published>
      <PackageHash>ZWAEPzpV2cAK3cT7LS5sP/ijofClmnfDdA9Yfid3ncb5c4W1+srHJNBFoxNTmcKrzWuZZKws6Y4lR8C44ESDEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>31236</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.11.1.442/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.11.1.442</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.12.0.442</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-04-04T23:07:01.203</Created>
      <Dependencies>Google.Apis:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.442</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-04-04T23:07:01.203</LastUpdated>
      <Published>2016-04-04T23:07:01.203</Published>
      <PackageHash>ViLbM8Kl5+0WXjCRXYteq9zRCjfqYv0Rg6c14Y3Enwf+9HX58J6MnqfAo8O2gmxmHfqRNbT/Ne8h7+iaWumTIw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>58836</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.442/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>98</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.12.0.442</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.12.0.460</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-04-13T00:14:40.303</Created>
      <Dependencies>Google.Apis:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.460</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-04-13T00:14:40.303</LastUpdated>
      <Published>2016-04-13T00:14:40.303</Published>
      <PackageHash>OgBr3LImUJ0zpoWvKTtSffVZIvX3l3l7Zi+atFTJCDkYEIqNQ5U5f1KJmJYRvC/OhO065pYFSQvP4sKzfYkYKA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>58852</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.460/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.12.0.460</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.12.0.484</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-04-30T00:14:12.27</Created>
      <Dependencies>Google.Apis:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.11.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.484</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-04-30T00:14:12.27</LastUpdated>
      <Published>2016-04-30T00:14:12.27</Published>
      <PackageHash>1MyT3RUeOBNlhlzvtYNVg3OVlKQP6IFsBf8SABcNGceDJ9dxhhkWJlLqNnU+s2dT8UnXAI8RMm9CXvoTFdQhFQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57432</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.12.0.484/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>120</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.12.0.484</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.13.0.494</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-12T13:45:36.17</Created>
      <Dependencies>Google.Apis:[1.13.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.13.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.0.494</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-12T13:45:36.17</LastUpdated>
      <Published>2016-05-12T13:45:36.17</Published>
      <PackageHash>LlkgaAuc20sl3z7wRrVAF6lgCXedtXc+31tYIdZ3oEROe5R2GfCza37DvA3fR6AecYMxqzsmaMigPch5ESYTOA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57422</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.0.494/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>104</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.13.0.494</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.13.1.494</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-05-31T10:45:44.163</Created>
      <Dependencies>Google.Apis:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.1.494</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-05-31T10:45:44.163</LastUpdated>
      <Published>2016-05-31T10:45:44.163</Published>
      <PackageHash>FijPuyakvEr55r8S9maaW+/UehO59F0eXeyJdwCDUk4SjQCt379SnJVaZhNfBEp3/L+WApUNxMQHN0HxTXhLjA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57399</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.1.494/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>90</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.13.1.494</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.13.1.522</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-06-07T06:53:03.74</Created>
      <Dependencies>Google.Apis:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.13.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.1.522</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-06-07T06:53:03.74</LastUpdated>
      <Published>2016-06-07T06:53:03.74</Published>
      <PackageHash>cyXDgSwOcHage9lc/5Pk+o80stW68NuUh9p2YlEq/QNdQog+XFg1YDbRcrHKIAx9CnLdKE/ozVyAVPXvndECqg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57423</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.13.1.522/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>117</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.13.1.522</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.14.0.522</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-05T16:17:09.927</Created>
      <Dependencies>Google.Apis:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.0.522</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-05T16:17:09.927</LastUpdated>
      <Published>2016-07-05T16:17:09.927</Published>
      <PackageHash>Wgof1gBRHPSf47F36/h2vGEhEt2Y4kGhDvVjlg1Efc2pTD99u5kS+dYPMGXvi7vpOUy0Sspp/xMd1achdrLW/w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57421</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.0.522/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>106</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.14.0.522</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.14.0.567</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-26T08:08:36.31</Created>
      <Dependencies>Google.Apis:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.14.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.0.567</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-26T08:08:36.31</LastUpdated>
      <Published>2016-07-26T08:08:36.31</Published>
      <PackageHash>7AFAkAS/blDyrCOta9i/WHppz1Si78tqDEOEeAM9LN8u28fworLfrDmtBN7c4VvPLultxEi8aW1fc4rfMdE6IQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57380</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.0.567/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>93</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.14.0.567</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.14.1.567</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-07-28T15:37:43.03</Created>
      <Dependencies>Google.Apis:[1.14.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.14.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.1.567</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-07-28T15:37:43.03</LastUpdated>
      <Published>2016-07-28T15:37:43.03</Published>
      <PackageHash>LDDunnI9K9R1ML3Eif8K3v1PZ9dBHWArVRLGeHa0Q50Q89g0PA9zS0o6qc24Na7CDcvyBUF4VZTZg391nPyUNQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>57454</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.14.1.567/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>84</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.14.1.567</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.15.0.567</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-04T16:45:03.79</Created>
      <Dependencies>Google.Apis:[1.15.0, ):netstandard1.3|Google.Apis.Auth:[1.15.0, ):netstandard1.3|Google.Apis:[1.15.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.15.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.15.0.567</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-04T16:45:03.79</LastUpdated>
      <Published>2016-08-04T16:45:03.79</Published>
      <PackageHash>rX8d6eo7s68PcacQetoHWISZKcUXfoUrCMRUc/OlDsDXSAOa8LC8A64yCpAWAabA+4kq0H9Xv/7FnSa3YVnJNw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>84400</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.15.0.567/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>94</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.15.0.567</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.16.0.567</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-08-22T13:28:43.527</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis.Auth:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.567</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-08-22T13:28:43.527</LastUpdated>
      <Published>2016-08-22T13:28:43.527</Published>
      <PackageHash>QB4lTHKkTA2LB2qRiyVS36FUuqfec8m7rO1vZVW49UDhQQQRTf6lQaCOFsjm4XfxXzWNIuqWmSpt6eHjUe7lMw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>84768</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.567/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>84</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.16.0.567</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.16.0.608</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-09-01T08:21:24.8</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis.Auth:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.608</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-09-01T08:21:24.8</LastUpdated>
      <Published>2016-09-01T08:21:24.8</Published>
      <PackageHash>PfhIjOY+RuNNZlfW/r7wflvSFsYgPdZq8WoEylBbTIaFFtTvPj2b2UeuoO+ItZnVnA0p2gBZd0PN11+0YhJfug==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>84723</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.608/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.16.0.608</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.16.0.641</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-04T08:18:42.68</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis.Auth:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.641</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-04T08:18:42.68</LastUpdated>
      <Published>2016-10-04T08:18:42.68</Published>
      <PackageHash>luWWE1LRLQF0sToslACw6/ni6F7RqiHCi3qVKlidQU032ezZn7hz6j7G5CvuKu02FQiu7+1NOXimCEELypbONA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>84747</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.641/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>98</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.16.0.641</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.16.0.644</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-12T08:18:28.237</Created>
      <Dependencies>Google.Apis:[1.16.0, ):netstandard1.3|Google.Apis.Auth:[1.16.0, ):netstandard1.3|Google.Apis:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.16.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.644</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-12T08:18:28.237</LastUpdated>
      <Published>2016-10-12T08:18:28.237</Published>
      <PackageHash>vqKc9snf/fX5EJ3gGD2Gqt6fUcE6IzkRWlPzi0MaDBOMYWMr2rOwz8a4BTP5fSxAt3tMLOrAVLhRpasytGTDsw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>84745</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.16.0.644/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>70</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.16.0.644</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.17.0.644</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-12T13:14:45.717</Created>
      <Dependencies>Google.Apis:[1.17.0, ):netstandard1.3|Google.Apis.Auth:[1.17.0, ):netstandard1.3|Google.Apis:[1.17.0, ):net45|Google.Apis.Auth:[1.17.0, ):net45|Google.Apis:[1.17.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.17.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.
          Supported Platforms:

          - .NET Framework 4 and 4.5+

          - NetStandard1.3

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.17.0.644</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-12T13:14:45.717</LastUpdated>
      <Published>2016-10-12T13:14:45.717</Published>
      <PackageHash>f4dKj2S3wYq6z7R1/nX3mbuXfct3wJ99obpXt1lmSFWMULFAvZfmJCzjgKI2dyZ/IWhW9aIrxQ5qnUGIwJ/Byg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112079</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.17.0.644/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.17.0.644</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.18.0.658</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-10-24T17:34:12.27</Created>
      <Dependencies>Google.Apis:[1.18.0, ):netstandard1.3|Google.Apis.Auth:[1.18.0, ):netstandard1.3|Google.Apis:[1.18.0, ):net45|Google.Apis.Auth:[1.18.0, ):net45|Google.Apis:[1.18.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.18.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.18.0.658</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-10-24T17:34:12.27</LastUpdated>
      <Published>2016-10-24T17:34:12.27</Published>
      <PackageHash>p8bo1QsHvXLm7wMB/P3ujq3BpjrfrJwBH225rwEdOUL8qpGMUrNWUvHj/7t/iNFKnXgs4LZ766+Yi3qB71ii2Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112038</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.18.0.658/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>74</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.18.0.658</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.19.0.658</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-11-08T08:22:15.807</Created>
      <Dependencies>Google.Apis:[1.19.0, ):netstandard1.3|Google.Apis.Auth:[1.19.0, ):netstandard1.3|Google.Apis:[1.19.0, ):net45|Google.Apis.Auth:[1.19.0, ):net45|Google.Apis:[1.19.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.19.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.19.0.658</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-11-08T08:22:15.807</LastUpdated>
      <Published>2016-11-08T08:22:15.807</Published>
      <PackageHash>02G+Zm5doOUNDTAxmpYzIIrnTwGM+JITupfZPdffLE97y60/BnvyMk23E9m0ksOS2VwPBf138dEfrJwLLKgneQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112046</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.19.0.658/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>81</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.19.0.658</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.20.0.658</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2016-12-14T08:21:50.583</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis.Auth:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis.Auth:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.658</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2016-12-14T08:21:50.583</LastUpdated>
      <Published>2016-12-14T08:21:50.583</Published>
      <PackageHash>XCKElWcbu14ayH6/XnV+IPx4NDt7G4jonvNIK+RV/R0vz+v6thsXln8L+stsKxtz/wZwbu43fq6UcsMgS6lRGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111978</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.658/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.20.0.658</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.20.0.734</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-01-05T08:21:56.36</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis.Auth:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis.Auth:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.734</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-05T08:21:56.36</LastUpdated>
      <Published>2017-01-05T08:21:56.36</Published>
      <PackageHash>Ho7HImG/bjDlRw6FupP4OySEwasPFCGYd0JLdMelGC2qoW02367R7DUV3ElzKULypFAcOkmk03Q8Mm6M9gk5sA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111958</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.734/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.20.0.734</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.20.0.748</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-01-23T08:23:27.78</Created>
      <Dependencies>Google.Apis:[1.20.0, ):netstandard1.3|Google.Apis.Auth:[1.20.0, ):netstandard1.3|Google.Apis:[1.20.0, ):net45|Google.Apis.Auth:[1.20.0, ):net45|Google.Apis:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.20.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.748</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-01-23T08:23:27.78</LastUpdated>
      <Published>2017-01-23T08:23:27.78</Published>
      <PackageHash>IMENJ0em+IWwi0dTpJWqlXD3lzPcRLt4S5XIsmf6I44E51pAPCi1C1q/SbO+xHQid8YQrD+SqJae2DiyEk6Wrw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112063</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.20.0.748/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>73</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.20.0.748</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.21.0.748</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-02-09T12:21:42.513</Created>
      <Dependencies>Google.Apis:[1.21.0, ):netstandard1.3|Google.Apis.Auth:[1.21.0, ):netstandard1.3|Google.Apis:[1.21.0, ):net45|Google.Apis.Auth:[1.21.0, ):net45|Google.Apis:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.21.0.748</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-09T12:21:42.513</LastUpdated>
      <Published>2017-02-09T12:21:42.513</Published>
      <PackageHash>Kvyh1/SaLAcJ9Ysz1yGhfmyJ4oaeLn086oywOrlf4+VhqEW6m36+mBfFAwycbebF+lp2BXTZLmQzAyA50J5KMg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112056</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.21.0.748/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>81</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.21.0.748</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.21.0.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-02-22T08:24:45.71</Created>
      <Dependencies>Google.Apis:[1.21.0, ):netstandard1.3|Google.Apis.Auth:[1.21.0, ):netstandard1.3|Google.Apis:[1.21.0, ):net45|Google.Apis.Auth:[1.21.0, ):net45|Google.Apis:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.21.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.21.0.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-02-22T08:24:45.71</LastUpdated>
      <Published>2017-02-22T08:24:45.71</Published>
      <PackageHash>YhwVhBFd2/V48P/suCGx5fWFg3QVnuMfUir2swgusDTLEIMtdQj1inu5UFOCWo0Bjkxx6asKnNvlHWzia2t7nA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112024</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.21.0.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>69</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.21.0.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.22.0.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-15T12:03:55.727</Created>
      <Dependencies>Google.Apis:[1.22.0, ):netstandard1.3|Google.Apis.Auth:[1.22.0, ):netstandard1.3|Google.Apis:[1.22.0, ):net45|Google.Apis.Auth:[1.22.0, ):net45|Google.Apis:[1.22.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.22.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.22.0.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-15T12:03:55.727</LastUpdated>
      <Published>2017-03-15T12:03:55.727</Published>
      <PackageHash>2SLt/B0E/EXgCl5ODHJViXN4RVCvzfHSvCYVoR74TueX+h09VJHp8BlkWJrlTC3OAmRSRbcSbhYhIvFYJG7KjA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111994</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.22.0.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>52</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.22.0.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.23.0.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-27T16:02:21.71</Created>
      <Dependencies>Google.Apis:[1.23.0, ):netstandard1.3|Google.Apis.Auth:[1.23.0, ):netstandard1.3|Google.Apis:[1.23.0, ):net45|Google.Apis.Auth:[1.23.0, ):net45|Google.Apis:[1.23.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.23.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.23.0.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-27T16:02:21.71</LastUpdated>
      <Published>2017-03-27T16:02:21.71</Published>
      <PackageHash>xe6beWKALy0dwWv1Kn7bx7XhWSjnY2ZH8k+M5RTidNJGWEWjCK0X86z1ZDTGdrD/Kd+gRZWg4Xrco5Jfi0I2aQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>111482</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.23.0.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>51</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.23.0.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.24.0.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T11:18:18.29</Created>
      <Dependencies>Google.Apis:[1.24.0, ):netstandard1.3|Google.Apis.Auth:[1.24.0, ):netstandard1.3|Google.Apis:[1.24.0, ):net45|Google.Apis.Auth:[1.24.0, ):net45|Google.Apis:[1.24.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.24.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.24.0.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T11:18:18.29</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>1E8jETmjWpQ70uFjH6QPMdu1qz75MgHEB0lfRupMS9tK48XuDmUry3xL6yTSoa97ONZiv5BnOsJelZYYP2fDnA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112145</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.24.0.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>51</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.24.0.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>2017-03-30T17:50:55.29</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.24.1.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-03-30T15:58:59.63</Created>
      <Dependencies>Google.Apis:[1.24.1, ):netstandard1.3|Google.Apis.Auth:[1.24.1, ):netstandard1.3|Google.Apis:[1.24.1, ):net45|Google.Apis.Auth:[1.24.1, ):net45|Google.Apis:[1.24.1, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.24.1, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.24.1.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-03-30T15:58:59.63</LastUpdated>
      <Published>2017-03-30T15:58:59.63</Published>
      <PackageHash>5MhPVJJVWxpHrJQjDGsbBxCeJ0JkiR+cCpda4iTp3Hgg8oV5Njo7MfE3p97jYiOtOLv8TYniav6KtNuduwz6aQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112184</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.24.1.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>49</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.24.1.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.25.0.776</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-04-10T08:59:12.83</Created>
      <Dependencies>Google.Apis:[1.25.0, ):netstandard1.3|Google.Apis.Auth:[1.25.0, ):netstandard1.3|Google.Apis:[1.25.0, ):net45|Google.Apis.Auth:[1.25.0, ):net45|Google.Apis:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.25.0.776</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-04-10T08:59:12.83</LastUpdated>
      <Published>2017-04-10T08:59:12.83</Published>
      <PackageHash>asi/BAxpLKZJN1yRf9atjYTLqwjlcgfvtwz344e4apZFl2WJabxcbl1t6F9gyjx46y1oB8LCu3lW2+hMS77s+g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112147</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.25.0.776/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>51</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.25.0.776</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.25.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2017-05-08T08:26:14.34</Created>
      <Dependencies>Google.Apis:[1.25.0, ):netstandard1.3|Google.Apis.Auth:[1.25.0, ):netstandard1.3|Google.Apis:[1.25.0, ):net45|Google.Apis.Auth:[1.25.0, ):net45|Google.Apis:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis.Auth:[1.25.0, ):portable-net45+win8+wp8+wpa81|Google.Apis:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81|Google.Apis.Auth:[1.10.0, 1.10.0]:portable-net40+sl5+win8+wp8+wpa81</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

          Supported Platforms:

          - .NET Framework 4.5 and 4.6

          - NetStandard1.3

          - Windows 8 Apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries

          More documentation on the API is available at:
          https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

          The package source code is available at:
          https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.25.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-08T08:26:14.34</LastUpdated>
      <Published>2017-05-08T08:26:14.34</Published>
      <PackageHash>f61nAGIAifyUUeYE8f1m/htxIMYDDh1xBrJ88FijnQGGnyl0z1xL9ANauTBAC2wy4yvDnGzQhwnBRt6AxZzWiQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>112165</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.25.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>Google Adexchangebuyer v1.2 API client library</Summary>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>50</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.25.0.854</DownloadUrl>
      <ProjectUrl>https://www.github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.26.1.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-23T14:13:28.873</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis.Auth:[1.10.0, 1.10.0]:net40|Google.Apis:[1.26.1, ):net45|Google.Apis.Auth:[1.26.1, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.26.1, ):netstandard1.3|Google.Apis.Auth:[1.26.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Google.Apis.Auth:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.26.1.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-23T14:13:28.873</LastUpdated>
      <Published>1900-01-01T00:00:00</Published>
      <PackageHash>bCZRwW4EtuL+VEeayCuKRtxaEdHEUlM8C4Ck5+1yxvEWHfgfxTpZixhQGhOo022N/QaJHIkq5om4Q7qAPXwyCA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61002</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.26.1.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>48</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.26.1.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>2017-05-23T14:44:16.877</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.26.2.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-05-24T09:08:20.703</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis.Auth:[1.10.0, 1.10.0]:net40|Google.Apis:[1.26.2, ):net45|Google.Apis.Auth:[1.26.2, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.26.2, ):netstandard1.3|Google.Apis.Auth:[1.26.2, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Google.Apis.Auth:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.26.2.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-05-24T09:08:20.703</LastUpdated>
      <Published>2017-05-24T09:08:20.703</Published>
      <PackageHash>tPHIkn3on4nQj9EbEuhxe6c4rbK5J7720xpLNNt2nQBnaG7w7m80tBXGHynC+hMT5vV8ByVcqwLC3u9OAOFtoQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61027</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.26.2.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>44</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.26.2.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.27.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-01T12:56:42.873</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis.Auth:[1.10.0, 1.10.0]:net40|Google.Apis:[1.27.0, ):net45|Google.Apis.Auth:[1.27.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.27.0, ):netstandard1.3|Google.Apis.Auth:[1.27.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Google.Apis.Auth:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.27.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-01T12:56:42.873</LastUpdated>
      <Published>2017-06-01T12:56:42.873</Published>
      <PackageHash>sJm1onzk+eR6vVXqLDfDDVeNloVxQmwXGs30KWWoo1te9sUgeaf/K/nrL8leDV+0CCiAjTWEFBzRjd+co1BytQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61294</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.27.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>43</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.27.0.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.27.1.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-06-06T19:20:30.04</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis.Auth:[1.10.0, 1.10.0]:net40|Google.Apis:[1.27.1, ):net45|Google.Apis.Auth:[1.27.1, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.27.1, ):netstandard1.3|Google.Apis.Auth:[1.27.1, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Google.Apis.Auth:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.27.1.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-06-06T19:20:30.04</LastUpdated>
      <Published>2017-06-06T19:20:30.04</Published>
      <PackageHash>CT8k8HRnWi98A83nVUt96KR/LyQhR/vYgLDs2XRLyPlFEaI8uZdv7H31d2xYsSeNdnQSRVq1qe3Cdp/VkomFcw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61254</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.27.1.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>46</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.27.1.854</DownloadUrl>
      <ProjectUrl>https://developers.google.com/api-client-library/dotnet</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_2</Id>
      <Version>1.28.0.854</Version>
      <Authors>Google Inc.</Authors>
      <Copyright>Copyright 2017 Google Inc.</Copyright>
      <Created>2017-07-19T10:04:00.453</Created>
      <Dependencies>Google.Apis:[1.10.0, 1.10.0]:net40|Google.Apis.Auth:[1.10.0, 1.10.0]:net40|Google.Apis:[1.28.0, ):net45|Google.Apis.Auth:[1.28.0, ):net45|NETStandard.Library:[1.6.1, ):netstandard1.3|Google.Apis:[1.28.0, ):netstandard1.3|Google.Apis.Auth:[1.28.0, ):netstandard1.3|NETStandard.Library:[1.6.1, ):netstandard1.0|Google.Apis:[1.25.0, 1.25.0]:netstandard1.0|Google.Apis.Auth:[1.25.0, 1.25.0]:netstandard1.0|Microsoft.NETCore.Portable.Compatibility:[1.0.1, ):netstandard1.0</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.2.

      Supported Platforms:
      - .NET Framework 4.5+
      - NetStandard1.3, providing .NET Core support.

      Legacy platforms:
      - .NET Framework 4.0
      - Windows 8 Apps
      - Windows Phone 8.1
      - Windows Phone Silverlight 8.0
	  
      Incompatible platforms:
      - .NET Framework &lt; 4.0
      - Silverlight
      - UWP (will build, but is known not to work at runtime)

      More documentation on the API is available at:
      https://developers.google.com/api-client-library/dotnet/apis/adexchangebuyer/v1.2

      The package source code is available at:
      https://github.com/google/google-api-dotnet-client/tree/master/Src/Generated</Description>
      <DownloadCount>10724</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.28.0.854</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>true</IsLatestVersion>
      <IsAbsoluteLatestVersion>true</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2017-07-19T10:04:00.453</LastUpdated>
      <Published>2017-07-19T10:04:00.453</Published>
      <PackageHash>g98eJl4y1HGph/W+PvChhZMk4jH8sqwQtX1GvjAm/+dS9MEebIuzcUB+R1AZG7+5lntXzliC/8E7K7Zf4jPmjg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>61287</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_2/1.28.0.854/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_2</Title>
      <VersionDownloadCount>23</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_2/1.28.0.854</DownloadUrl>
      <ProjectUrl>https://github.com/google/google-api-dotnet-client</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.2-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-08-21T14:40:32.293</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.2-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T19:00:41.267</LastUpdated>
      <Published>2013-08-21T14:40:32.293</Published>
      <PackageHash>4pnlfNMdwj5kpbQi+J8sAtaGYUUrwwUsxZGivQe9hmsVrpWTINi7bkazIXK16Ijy5ewVhoE4xInXBjRxyru4MQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>26184</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.2-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.2-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.4-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-10T23:18:32.88</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.4-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-09-10T23:18:32.88</Published>
      <PackageHash>YMwC06gQ2HE4BOE0oE+x5k3tYq2fwaFoBT8nHF15zJYx+3TgaYgNgVQ1JUg8my5fxegTa6i5g8qasuA0tWG6YA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27862</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.4-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>142</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.4-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.5-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-09-23T15:13:15.23</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.5-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-03T18:15:10.807</LastUpdated>
      <Published>2013-09-23T15:13:15.23</Published>
      <PackageHash>ov6jn6kVp/ZMuMqy0VlE1PD29kpzSm/Rmkh5AgzHl8uVwDP4JzWiIjB9ApqVhoB+c0gsH2ioIYkvS9AZlswc9Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27841</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.5-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.5-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.6-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-01T14:13:58.48</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.6-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-01T14:13:58.48</Published>
      <PackageHash>xCnJKUnns3IbtPdhNABazund+onwetljwdIOe5bZKBv5ihrGhr1gGgqUhvVibzkWTs+vIeKIDTKLqSTYs4d5IA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27735</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.6-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.6-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.7-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-09T23:06:03.003</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.7-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-09T23:06:03.003</Published>
      <PackageHash>zecHNzecfvNpwm0GIZ/qB6am6Q3JMbxIv1xR2nAhRk4innWE2HnfVFGc0zL3xrMEHwYXEgWOAOzhROI53VS+Xg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27858</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.7-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.7-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.5.0.8-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-15T19:04:37.497</Created>
      <Dependencies>Google.Apis:1.5.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.8-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-15T19:04:37.497</Published>
      <PackageHash>iwkg0i+EZJCV3yKgSqkwuw2r95uKdLtSTEB5kLeBSGskY0vorcIJh6mVHlcb5U/re5aUS5+IDVaauesXYnz3Bw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>27727</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.5.0.8-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.5.0.8-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.6.0.9-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-10-23T19:54:16.397</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.6.0.9-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2013-10-23T19:54:16.397</Published>
      <PackageHash>Cc125l+El+4d6NLn/j2NzdzYtjN6Q0yb6/12DKUHPbFlss+jqYftMZTEQ2gvENH1E424OaviHkuTpYq+autDtQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28542</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.6.0.9-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.6.0.9-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.6.0.10-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-11T22:59:45.333</Created>
      <Dependencies>Google.Apis:1.6.0-beta:|Google.Apis.Auth:1.6.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.6.0.10-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-11T22:59:45.333</Published>
      <PackageHash>uSEe4t0boD0C5gpS+3aPrYpSTjeyxoyx95XApqiN4B1cVYFKyTTiZwtAaP8zfIrxr7eeIDZVJMsYWCqq1xDXBg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28514</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.6.0.10-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>133</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.6.0.10-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.7.0.11-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2013-12-18T01:07:00.573</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.11-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-18T01:07:00.573</Published>
      <PackageHash>aelnSeQZpx9vwQmzZnbHLmstB6hVELMyswm981/fItodMkiPmVaPBFYWzy7H/9Paf5eC9aHjpdDAGuVkd2kZuA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28463</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.11-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.7.0.11-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.7.0.12-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-01-08T23:10:50.313</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.12-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T08:26:03.87</LastUpdated>
      <Published>2014-01-08T23:10:50.313</Published>
      <PackageHash>6ZIn4P6FDCksnlpGwyIaRb0M83dutx8/88QCl4QtYb0g0xrC0pMn1CzdOzvdrrOY9LQXbl5DCgMGzLqPAI/XKA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28363</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.12-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.7.0.12-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.7.0.13-beta</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-04T17:16:49.477</Created>
      <Dependencies>Google.Apis:1.7.0-beta:|Google.Apis.Auth:1.7.0-beta:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.13-beta</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-04T17:16:49.477</Published>
      <PackageHash>73rI7nBKgnyrTtfiZGt34eGwn2Q3phiElIoVsLCcEx/++r6GyN2hl8idVwQbt/YD/Tw23FJ+XB9HoUnWSpqNZw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28473</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.7.0.13-beta/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.7.0.13-beta</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.0.130-rc</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-02-17T17:59:05.983</Created>
      <Dependencies>Google.Apis:1.8.0-rc:|Google.Apis.Auth:1.8.0-rc:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.0.130-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-12T02:17:30.847</LastUpdated>
      <Published>2014-02-17T17:59:05.983</Published>
      <PackageHash>hQs4J6h+l5/wP8gF4NQPZtzXRtYQ9/wgPnGgSIgYpa3GY5ZRFRlFTjrsdXA0lVtzdQUYwp4rCdYHEtPvX5giqQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28468</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.0.130-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>142</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.0.130-rc</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.150</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-03-17T14:36:39.08</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.150</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-03-17T14:36:39.08</Published>
      <PackageHash>agJJI0oXw71+UdJTBlVSpScOfLvsvWvRzWy3dvQYtO6djGVSGtLCaY6RCcBfIjpm0qiHli0eBRbaiffwUdd29w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28437</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.150/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>167</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.150</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.160</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-01T22:21:37.163</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.160</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-04-01T22:21:37.163</Published>
      <PackageHash>R0S2u++ZN/fYI6vK21W90mbYEwqPnAmYjGyWMFOb9y2TJmTpItN2GXK/P36WkYLpz7BMPKgWrCy9lkVtmeSLew==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28565</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.160/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>145</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.160</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.170</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-08T19:12:23.17</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.170</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-04-08T19:12:23.17</Published>
      <PackageHash>yPQ20/VzPckbYVaSaMLWcKE3TOpxdzMYDQMz0aR+vyvwwtMUG0QoeU2953xhJjAoXTJ4pbW2H90He6OS5GhnTw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28490</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.170/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>142</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.170</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.180</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-14T12:46:07.2</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.180</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-04-14T12:46:07.2</Published>
      <PackageHash>WeBYt+bRUC/YoOrSrLLkinjK1wpd3EVqUf00t/UPlyOGtB252guyMBJ50BNez/BlWVTpejEjlHneMWthpAoPWQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28553</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.180/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.180</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.190</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-22T16:52:53.137</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.190</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-04-22T16:52:53.137</Published>
      <PackageHash>SPg8mlvd0C5Y5l/IX6uuyoHYZLy6xNdLyu7M7y08a27iJBtp17gPdeczIoxsnEOmoQKEs1pEtm1TDXV3Ql+o4Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28662</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.190/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>152</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.190</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.210</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-04-29T18:52:01.973</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.210</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-04-29T18:52:01.973</Published>
      <PackageHash>fQlqRQhldlrTW2qmfgZJ/mkaPcStQBLLAT6hB/MFI94PEd9aFeIFp0B6ARubH7qP6Yvg1e4vSmuRATM27tBeGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28761</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.210/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>156</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.210</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.230</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-05-22T20:44:45.157</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.230</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-05-22T20:44:45.157</Published>
      <PackageHash>hMgBdKzT7AMtdTuUzInpft5sPHhRKOkoKm7plYmblplLZR/S8MdHS/LaWK++H8+krILC1jih2c1nVOu8gTDsjw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>28664</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.230/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>155</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.230</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.250</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-06-17T01:42:44.22</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.250</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-06-17T01:42:44.22</Published>
      <PackageHash>OdBqx2+paQnDumVYxqww6AkijO56TY9OdZwjoNnV2DdkQEf/M4kc+KSCcC18ffFwX/cox76hp18j2/TPpDxgDA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36556</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.250/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>157</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.250</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.260</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-08T18:21:18.583</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.260</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-07-08T18:21:18.583</Published>
      <PackageHash>tTYlW1+up++ocS2hXzcM43eqv6PzYiwTkwTwFSADIZY7Hg9KCeH3Q6e3CqjCtsFgsLxpXhCfJuuD68FdRuB78w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36539</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.260/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>147</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.260</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.270</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-15T22:43:58.89</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.270</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-07-15T22:43:58.89</Published>
      <PackageHash>i3WlMUfFYj5gDffqeo4H4v8GlMaZD/q4iFyAswroWjQHusA43fA2f+U8afngXpk2QLvzQZpc8Vvk9+sNfii5lg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36629</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.270/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.270</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.280</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-23T13:33:20.083</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.280</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-07-23T13:33:20.083</Published>
      <PackageHash>gl9m3UK9AO8aRThzObPvrRnAF2C5pA0loDdmYQ0OlV/K/+5FvHE5oEuORZzV3Gpc2r5wAeFcR9K+gFkuHktJHA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36644</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.280/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>136</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.280</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.290</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-07-30T19:18:04.557</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.290</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-07-30T19:18:04.557</Published>
      <PackageHash>rRlMcZQuxVB2Fg1JH7XksKSJRJhYSLTphv7oJu9daQVgPak+lt7uiu3k/0CyiS5cUTkOn30RMo2zFZ7erM7QRw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>36649</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.290/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>156</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.290</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.300</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-12T21:18:41.48</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.300</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-08-12T21:18:41.48</Published>
      <PackageHash>K5QgF9WbD32szWxnSfgAD4ysCsJLJJbbaKfsE0jda3b7UpyONxLoVjAAoGgjio7T02Tr5XEwX1EvD0JSHnvRhQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38427</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.300/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>131</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.300</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.310</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-08-19T19:32:58.557</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.310</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-08-19T19:32:58.557</Published>
      <PackageHash>0id7RQaoPPVxzE3G2qhd+AEuiysNuA2DzvL2OA2mhBxdqjPsuyDgu86EDV3ih3mTYCACtcNYiGdKdVBCpqHbJQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38408</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.310/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.310</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.8.1.340</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-10T14:00:37.903</Created>
      <Dependencies>Google.Apis:1.8.1:|Google.Apis.Auth:1.8.1:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 7.5 and 8

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.340</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-09-10T14:00:37.903</Published>
      <PackageHash>yf35vtpWyVFBDO51nus1dBMoHv67/yPvqFSQ7xYS7Uu6x6VKxVgcPCbh/XVFOcda5787ewnLlkHGOocDpRrXdg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38897</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.8.1.340/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>156</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.8.1.340</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.9.0.360</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-09-30T16:12:25.967</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.9.0.360</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-09-30T16:12:25.967</Published>
      <PackageHash>G7jc5HuHCucJjYpIE8blWj/bZLCX7k4B7slMqJJzIBlWPPQZS1bmYpShnuU1KI2WPAy0JL/giPL0avvaqpGM4w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38764</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.9.0.360/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>139</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.9.0.360</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Google.Apis.Adexchangebuyer.v1_3</Id>
      <Version>1.9.0.370</Version>
      <Authors>Google Inc.</Authors>
      <Copyright />
      <Created>2014-10-07T20:31:43.797</Created>
      <Dependencies>Google.Apis:1.9.0:|Google.Apis.Auth:1.9.0:</Dependencies>
      <Description>Google APIs Client Library for working with Adexchangebuyer v1.3.
          Supported Platforms:

          - .NET Framework 4 and 4.5

          - Windows Store apps

          - Windows Phone 8 and 8.1

          - Portable Class Libraries</Description>
      <DownloadCount>11088</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.9.0.370</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T22:36:05.43</LastUpdated>
      <Published>2014-10-07T20:31:43.797</Published>
      <PackageHash>JYaLHcs7jCeU3OojSZLbp5wQNqy8PT3U7GbiLfrL5hj+kH/RcODE7WJ53sAo041A07JQieJwtb36YcpBlRUvCg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>38774</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Google.Apis.Adexchangebuyer.v1_3/1.9.0.370/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>Google</Tags>
      <Title>Google.Apis.Adexchangebuyer.v1_3</Title>
      <VersionDownloadCount>140</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>http://www.apache.org/licenses/LICENSE-2.0</LicenseUrl>
      <LicenseNames>Apache-2.0</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Google.Apis.Adexchangebuyer.v1_3/1.9.0.370</DownloadUrl>
      <ProjectUrl>https://code.google.com/p/google-api-dotnet-client/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.0.171</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-09T13:51:12.1</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.0.171</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-21T13:31:26.083</LastUpdated>
      <Published>2013-12-09T13:51:12.1</Published>
      <PackageHash>eJybTj7E3ZRFUdrDB6BGJoMsRXf7d7ZIT012LrMmXLf1VMi0QY1FmxaltHmCMup958xqaWh0RQm+9kuChqw7Uw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101578</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.0.171/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>365</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.0.171</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.0.172</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-10T13:39:48.277</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.0.172</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-10T13:39:48.277</Published>
      <PackageHash>mVwqRzZd+nzHAD+yVLGIC5kHtfpy36ZL2/LdvB/NVwEMizoRLjXiJxQkTQka9fXY2Jn8q4Kl6108iv5/SLWnTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101576</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.0.172/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>178</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.0.172</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.1.173</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-10T16:06:14.913</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.1.173</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-10T16:06:14.913</Published>
      <PackageHash>OAP2+xE9NAqJ4tDh/GE53Tn++IkfZT6kFQo8ZQBrtQ1JHPKj4Wgfn/ptuoRMr80gA753VemB4O0wPSqQNzXIDA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101545</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.1.173/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>260</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.1.173</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.2.174</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-11T14:08:21.42</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.2.174</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-11T14:08:21.42</Published>
      <PackageHash>/vtnXMltcKVi3OruX/bp9gGFqgljyXj9waUnrFEsQfy9AQ8ZUZYxlTfszfyRFNLclWaL4qRuDS1/XaQEwKdsbw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101587</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.2.174/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>284</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.2.174</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.3.176</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-12T15:01:34.103</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.176</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:09:03.84</LastUpdated>
      <Published>2013-12-12T15:01:34.103</Published>
      <PackageHash>e+gICgST+MdPK8RYwN9Buzm+aVof8z4P+kUKqMHC3v+NdQpUkmyxSSjK4yI7kCZaeNVw5O8n+oxPurWXgrX1rQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101593</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.176/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>197</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.3.176</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.3.177</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-13T11:33:30.11</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.177</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:04:00.38</LastUpdated>
      <Published>2013-12-13T11:33:30.11</Published>
      <PackageHash>HjnKJ6hiV33crJCykeGn19P108QcqYYy9HAkdAb6v5Q+OKGMXkYXbsS4hmazxlEjBSPqHhDZMqHLtSMtS3uyVA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>101592</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.177/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>150</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.3.177</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.3.178</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-13T11:57:28.57</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.178</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T21:04:00.38</LastUpdated>
      <Published>2013-12-13T11:57:28.57</Published>
      <PackageHash>MAjkauiCYPcykJG+rBXCRe78WaUF1DVD0Kwr8kAmJ5xtt4p2AItPNnBUYNmCn84k9xcnquk6dU+ZuC+YSrCUow==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.3.178/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>320</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.3.178</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.4.179</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-16T12:15:20.453</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.4.179</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-16T12:15:20.453</Published>
      <PackageHash>dt/zhiYRkGbl0Tkala7nHSXUpm1bpdyazuOhEUnLiiwUsP5ZJqq/6cIR1ModzQegpkzYAwepftf5SWA1exN6RA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102532</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.4.179/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>173</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.4.179</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.25.4.180</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-16T15:45:20.217</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.25.4.180</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:58:56.653</LastUpdated>
      <Published>2013-12-16T15:45:20.217</Published>
      <PackageHash>j1V7IY5bQkVoZcWoOTF81e5UFyHOcMwyy5jqwQb5BoAC+XXMKnrLEjjD+I5LRsATyxKoeNsL326OMP2XOJrGcw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102953</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.25.4.180/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>187</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.25.4.180</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.0.181</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-16T15:55:14.73</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.0.181</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-18T09:36:40.01</LastUpdated>
      <Published>2013-12-16T15:55:14.73</Published>
      <PackageHash>IQW/hyn/uggTYxZ5RBHqTiKF3ixTgVHBLACtvgXoV2/jw9MIV0fZMjqL+yPZGVcQP8ZvTUe5bQy5w0x0Cm5nYw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102944</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.0.181/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1023</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.0.181</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.0.182</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-19T14:37:10.86</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.0.182</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T20:53:53.217</LastUpdated>
      <Published>2013-12-19T14:37:10.86</Published>
      <PackageHash>rVPs5zmtcsLmNkeOHaOxvZZ3p0ztCex2BLHLCVExm17DouP8RwQVQdLzQK7zAGy2MLUvrvlv/g4mrWbq+Sc67A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102941</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.0.182/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>195</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.0.182</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.183</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2013-12-20T11:57:21.957</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.183</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-20T14:37:34.097</LastUpdated>
      <Published>2013-12-20T11:57:21.957</Published>
      <PackageHash>zJFGtfiNmFNiRkQf36Wc9IUiH5Ao6TErcSX/xxMrEbNrRPhh+alOyrvyZHg15aoBrOCd/Y/NomiSMz1mUnHnCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102947</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.183/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>792</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.183</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.184</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-02T12:52:27.683</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.184</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-02T12:52:27.683</Published>
      <PackageHash>P7ZvqMsujP3JH6sAo4R5RZ5roO8oie5oVT7aKh68ygVCJoU7r0JyZ6WCP5IvTKeTK1OHx+M+j0dcRLEEs2cdwg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102948</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.184/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>222</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.184</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.185</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-03T09:18:13.427</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.185</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T13:37:55.883</LastUpdated>
      <Published>2014-01-03T09:18:13.427</Published>
      <PackageHash>dfQ+C8d/PzltUrk2oAnWX5SmJVzbGUVnOcTgufP2jjtlXVj4xIUxZTQq6fFr+BfE7PgHhZXsu1Zvitwqo/NuxQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>102948</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.185/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1061</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.185</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.186</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-13T12:25:33.617</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.186</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-24T15:49:35.63</LastUpdated>
      <Published>2014-01-13T12:25:33.617</Published>
      <PackageHash>qgNqEQLpzxT5IXB/+Unu+/6QJ1JkCtrTSFaQ5MbCpT5rj12ob2W6GrcJAF6T/mloKqeUwilT3241IiN+YCuKZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103784</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.186/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2375</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.186</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.187</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-15T08:14:24.56</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.187</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-15T08:14:24.56</Published>
      <PackageHash>+bLUCExr555dsa+VhVIZaN0+Ih4a8lJ9HShzMpLajLXGvc9Wd4QY9XFddnLKfAt1S7fJLAwp5gOWOf6GUJdlXw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103781</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.187/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>181</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.187</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.188</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-15T14:01:59.713</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.188</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-15T14:01:59.713</Published>
      <PackageHash>010Uy2EUvFRu146kQZhL8vSXEthKpYyKjBmMZ9MV7CX1jo05+FN5PrI+e1Nrsu5a9u7BGfvbvrEc1lGKlPnwwg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103784</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.188/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>211</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.188</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.189</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-16T09:01:21.593</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.189</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T20:01:21.887</LastUpdated>
      <Published>2014-01-16T09:01:21.593</Published>
      <PackageHash>v+zhj2HE8iWf0Bz0YJTogwaqjkvGRqQ3r+52YH2TYftaOILs7WAmToeKNQkszwSqRCy+NXf3K6KKxXGDRC9ATA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103782</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.189/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>255</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.189</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.191</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-17T12:06:20.053</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.191</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-17T12:06:20.053</Published>
      <PackageHash>MJvf1+UQaWL31PoH9bwfetUoO/ImaEgto9muedy0qpA/ZkFqKNDo+srqMXrQmhbNBHRb+jk6PvzVGfvGQGZi8w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103784</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.191/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>286</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.191</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.1.193</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-20T08:57:01.05</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.193</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-20T08:57:01.05</Published>
      <PackageHash>HusEB/9PY6+USuKkjyCXUFt5N3/LiSIvaBtz+Aq0VTtIa1XzzJYR19tECQtLr/yyMQ+DgKudGNirgdMBKu+3sw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103786</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.1.193/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>366</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.1.193</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.2.194</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-23T11:53:55.807</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.2.194</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-04T10:33:41.73</LastUpdated>
      <Published>2014-01-23T11:53:55.807</Published>
      <PackageHash>UQTIDT1nAA2KiEaK0YeCTs+pGXLOLrokOniwWSvKurSqAi7tu4rnxtcz0UqZkj/JFdwLHTLL2oFCHnSVhKYxKA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>107106</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.2.194/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1945</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.2.194</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.3.198</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-30T12:46:13.447</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.198</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-30T12:46:13.447</Published>
      <PackageHash>s4Tx2TK0Q5MeeQuTqF6y6O6WR0tcTpH8LqtJ0iMt2ScclcXqXFV473MR06XptwLmXNwmgkcmsDff2y/toFDy+A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103837</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.198/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>155</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.3.198</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.3.202</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-01-30T14:27:16.017</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.202</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-01-30T14:27:16.017</Published>
      <PackageHash>f4gSWB2xVX7bRZB7I2pyZ9QKCpsdZC/RxHHxsl1bBNS3TU54BzMxEZv7AaenBL/a4cA4V11KsxvUsUbIMq4Dkw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103832</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.202/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>240</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.3.202</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.3.203</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-03T11:29:44.297</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.203</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-28T11:06:47.227</LastUpdated>
      <Published>2014-02-03T11:29:44.297</Published>
      <PackageHash>/aGB2lClv5lwEB0qZfxIYDmdBFYi/iMgk0sQ1Yn7VQ+nHem2uxL5vrT8/XJ/8QAWmB1vgmgt0efiwQgSdsvHQA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103832</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.203/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>199</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.3.203</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.3.204</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-04T13:12:36.32</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.204</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-04T13:12:36.32</Published>
      <PackageHash>Sh3Em7MTTN+2/AieqxrBAHPyhXTvbVQdfIBSiUR/F/yLfKNq6Yb4kakfiQX9meAMs4OE9/UIg1EwhKlJF6Hb+Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103834</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.3.204/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>153</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.3.204</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.4.206</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-04T15:59:59.437</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.4.206</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-04T15:59:59.437</Published>
      <PackageHash>pixKS1ltl1bfraWcMzGqAzaziJH1LdmXxJ+wYF00fpLBBrW4mWe7L7OT3XseO6BfDCHWJmPoTiVtzPgry6Wzfw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>103853</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.4.206/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>141</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.4.206</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.5.207</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-04T16:09:44.993</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.207</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-04T16:09:44.993</Published>
      <PackageHash>pvuUjye+rxbAFGysZCJCnJyeFBPOzpd19hrl/qTIkEResMQkVCkcN1eQglIQ50JVwFWsMU2PWQf6gDLdkgCLKg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104780</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.207/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>149</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.5.207</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.5.208</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-05T08:08:43.54</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.208</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-05T08:08:43.54</Published>
      <PackageHash>gbvK9CG/gEzJBfYDHsGdmSkD1NzcyiJaqxXmsPZo+PzoA6Y1fx4eAQyOJBwcYnT1FVqqH0czyPJl3IMPx03uJA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104774</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.208/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>441</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.5.208</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.5.209</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-10T10:22:06.227</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.209</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-10T10:22:06.227</Published>
      <PackageHash>YMCLmUHNDGWeKVEmZRBxSQX198PXL7q+uAoyoMo3YMytUdqU0O5lJgnjyLhdsRitoI9l6FQybYLxy5dOWNpd1A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>104936</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.5.209/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>162</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.5.209</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.6.210</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-10T14:04:56.59</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.6.210</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-10T14:04:56.59</Published>
      <PackageHash>bz57dQw5ZR8Cx24CGA+asGwj6PcR22QXqcUCYH/vyTfZqxRAl5IHRkB+VBUD7iNbJan5mfoJ0Jyklia+yaiGog==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105220</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.6.210/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>159</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.6.210</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.7.211</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-10T14:57:11.56</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.211</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-10T14:57:11.56</Published>
      <PackageHash>fK9ZAVvpf1WKWZgoSXuO7dyLEE2qZ4668zurI9X/6eETkiPXH2VxRKUEJH+EIbzqUkE2xnVWpfWlZyU9mZHv7g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105319</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.211/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.7.211</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.7.212</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-10T15:01:56.93</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.212</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-10T15:01:56.93</Published>
      <PackageHash>ntZmR6VNBGjcZQxxzYyUqXPvphoCKOBGmuD2a5cpkgC9wllTrx3ETESUWakGQbgUAVtvBhVRJmRxpasAx7CE1w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105324</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.212/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>233</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.7.212</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.7.213</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-11T16:40:06.367</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.213</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-11T16:40:06.367</Published>
      <PackageHash>5CTP17wVR5TSdXm560RvKd4R9x8F+tWCLOpaHR8VnQ/nR/NTVDN/TAg0Bi0s5TsBFRTgZZCvAFwi0+oY+pvwPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105327</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.213/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>362</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.7.213</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.26.7.214</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-12T10:03:22.223</Created>
      <Dependencies>RabbitMQ.Client:[3.1.5.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.214</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T19:57:58.693</LastUpdated>
      <Published>2014-02-12T10:03:22.223</Published>
      <PackageHash>ZSB8nsBpqfkAXguPPfOSC5hb1IPuu8uS+Yc0ojKjHXKHnaPOOpKmqjfmL7qAO8qxbFULdeIkJZUOO2miG6hAIA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105331</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.26.7.214/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>488</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.26.7.214</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.0.215</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-12T16:41:21.44</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.0.215</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T13:15:28.15</LastUpdated>
      <Published>2014-02-12T16:41:21.44</Published>
      <PackageHash>4LJLobFywyCC7DsOzoPnOHShAiId37/1qnWna9R8Njkcz4IGrj+BmpLKVKNMzqvcNgCOaKjqo8MqRd13LVtEWw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105382</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.0.215/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1050</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.0.215</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.1.216</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-14T10:58:56.533</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.1.216</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T11:53:48.933</LastUpdated>
      <Published>2014-02-14T10:58:56.533</Published>
      <PackageHash>bxjLe3OUshZCYzcoFgvuoR6Mm33C3R3hC5wBK16QMTJvB7RVbzx/6rdHYPLEhl/bXxqXO+JW7hPOtHwFDgOJ7w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105431</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.1.216/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1686</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.1.216</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.2.218</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-25T12:02:13.83</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.2.218</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-25T12:02:13.83</Published>
      <PackageHash>VETpiKdv1V73iLstFDjk3E7xyounkOAPa6gDnHyzAbvFzI103WLO7Jufuc3Lvmbd2RbkglVDwaD+uT+wo8c4GQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105445</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.2.218/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>165</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.2.218</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.3.219</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-25T14:30:51.58</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.3.219</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-25T14:30:51.58</Published>
      <PackageHash>9GxYu1YxkTYePRU0ELXzRYcYpKVpj0j9Zllhlh0Y10Eqs164MzhM8ek4mfEGONA/3/YpUzvssGPXK4ag3w6x6A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105664</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.3.219/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>313</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.3.219</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.4.220</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-26T19:29:12.013</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.4.220</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-26T19:29:12.013</Published>
      <PackageHash>+64bRDKK91cMSDy+/4HDLhgn5/r2V6ewq/WgDA9aosc6f/pFruvqe0rlhz0YXkyZDp1rQ7JN2fI6wQoxfvEhwA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105665</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.4.220/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>357</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.4.220</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.5.221</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-28T11:34:26.453</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.5.221</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-02-28T11:34:26.453</Published>
      <PackageHash>REQMoRPLpRd3+MKSkjra+u8Mw3u4G0xLKvMwGVcmPGRdc/nEolQjXisDRzUTRsZh6cRNHyN9cWLEWQuyNtkfCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105691</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.5.221/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>166</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.5.221</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.27.5.222</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-02-28T12:41:42.083</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.27.5.222</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T13:04:45.51</LastUpdated>
      <Published>2014-02-28T12:41:42.083</Published>
      <PackageHash>Tm1hG53komsy7TZmBvWsfPcfsSOuP6VA0mJIkF310CKQqP5R0v/tAcRkdvbequfP/cEK9csit1BghQJnr34UJA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>105682</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.27.5.222/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>811</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.27.5.222</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.1.224</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-04T15:40:28.783</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.1.224</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T14:38:27.797</LastUpdated>
      <Published>2014-03-04T15:40:28.783</Published>
      <PackageHash>cgOa2hZeGgLmDRl7uGEo3VkghWSqjDfc/K7iKxGauI54K2/JBfHRBOkFbUr3cg/TJR9ATCHyQ1pjaahx4nJcig==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106806</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.1.224/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>306</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.1.224</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.2.225</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-05T16:40:16.607</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.225</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-28T15:30:11.137</LastUpdated>
      <Published>2014-03-05T16:40:16.607</Published>
      <PackageHash>LmJuBTB4001YegmNQfseRaia+d2VE+pyUkeKHV9ehvDfOHPOL/C7D6LTCL1ELSCERUh263rDE9oY4SCTPskzOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110490</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.225/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1656</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.2.225</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.2.226</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-13T14:36:12.277</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.226</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-03-13T14:36:12.277</Published>
      <PackageHash>QqbsmGkY0vmzo3GLC4B9qmfwodf0cLKVaOcr0SMPJor8lONsE8ruJWs0BrB0yUj4fZYE79cPZBDYPtd5ZjJWbw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110498</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.226/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>224</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.2.226</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.2.227</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-14T12:58:09.28</Created>
      <Dependencies>RabbitMQ.Client:[3.2.1.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.227</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-03-14T12:58:09.28</Published>
      <PackageHash>qezHaaGp4z6uzuAWHs8tiSdK5dASaTQ3+QXCTbUnKpVqOx6mpms8DkRpxuOePHfV/hVN2JbfHq9IAIZ1pNMOiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110483</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.2.227/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>521</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.2.227</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.3.229</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-19T10:12:45.747</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.229</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T21:43:09.877</LastUpdated>
      <Published>2014-03-19T10:12:45.747</Published>
      <PackageHash>+GpqbU6GhZpqPqDyLliufpTYFOKLsMxDfaZCwGN62LRMyQHqUyhttSGZ3j2b8G1H7+0kB1/387E8DU+02RfYGw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110502</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.229/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1089</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.3.229</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.3.230</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-27T09:04:19.767</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.230</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-03-27T09:04:19.767</Published>
      <PackageHash>Ar2+1lg6mILqulJIrAkXa8iDM7tb7fFxvYygN1ty+yruE3TySNHXuR28Xb0DwWwGWOTE9THoaxdx4J3pxpyaTQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110500</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.230/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>237</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.3.230</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.3.231</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-27T15:46:15.647</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.231</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-03-27T15:46:15.647</Published>
      <PackageHash>o4TsTobG1foqiewc6DdfOS2yhNurai91pWPWG+n0CkP8zDxTP+bkqo0jjNGpcuYChBF78X3wHlgLbRQFs5qQYA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106841</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.3.231/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>400</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.3.231</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.4.232</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-03-31T08:26:06.87</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.232</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-03-31T08:26:06.87</Published>
      <PackageHash>i2Y6GRxt9uUQVV1zT5ix9vZ6bEwUJ2iA0BwE/gd+kE6vO2Szt6/5gQlZSphBn43leXK+xcGyMBJr1XrVEhQ4uQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106840</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.232/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>349</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.4.232</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.4.240</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-03T08:28:18.307</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.240</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T09:16:31.92</LastUpdated>
      <Published>2014-04-03T08:28:18.307</Published>
      <PackageHash>C3AoD8cqT23XickEW58oIPQqhdHm2kWf73oPCJ2OWDN+LH22AtVF9VFFodPRZmTrD6iGOHGJmczLktml2ziyTQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106907</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.240/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>219</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.4.240</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.4.241</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-04T07:57:46.243</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.241</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-04-04T07:57:46.243</Published>
      <PackageHash>2Wvnsj7w1ameKl0wsMJGBrjInU1mEYc8ioHKJFNsWYsg+4guQUPfB9jAHLb/SFFDKGFoJ/n8I4OXAGHfgerhWA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106904</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.241/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>216</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.4.241</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.4.242</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-05T09:55:11.967</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.242</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-29T11:01:01.66</LastUpdated>
      <Published>2014-04-05T09:55:11.967</Published>
      <PackageHash>Wm1QwiyFm89Vi1IG36VAo4nQfi+1naYRU3kKJkPpqD+2eK6ARVVwsR/BbecZKylwMh0RUNE0hlPNB3iNfKiyWQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>106903</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.4.242/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1283</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.4.242</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.28.5.245</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-14T12:53:00.183</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.28.5.245</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T10:12:22.747</LastUpdated>
      <Published>2014-04-14T12:53:00.183</Published>
      <PackageHash>x6bFINwhiL0NFZMKNTEqymARH+gI/WgjEtrXgMqWZX6bGMEHBSzrRcMZJi6bO20SLl9Z0JcfQr6dM0laC+Z4Vg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110662</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.28.5.245/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>653</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.28.5.245</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.29.0.246</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-16T13:39:11.807</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.29.0.246</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-04-16T13:39:11.807</Published>
      <PackageHash>p25mEfZf5neddI3pu5ryfYU57YY5rFud5n9n0nbIJOFRQKMcKjg9gU3MlRLhxz+nk8u8L/g4En+wwUHosl1SAg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>108391</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.29.0.246/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>232</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.29.0.246</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.0.247</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-17T15:29:19.84</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.247</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:37:05.837</LastUpdated>
      <Published>2014-04-17T15:29:19.84</Published>
      <PackageHash>iBXvMle8WF4Py8SLGo3dP/kqzgO2otG350ce3IQ3ZzumJ7Hc9txltXo7oR8gve91sfayT8UM1Mw31w9Q3HPhGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>108861</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.247/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>580</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.0.247</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.0.248</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-24T08:18:35.12</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.248</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T09:16:41.523</LastUpdated>
      <Published>2014-04-24T08:18:35.12</Published>
      <PackageHash>HyTvebb01ekUQGbtE8cy1kHTiN2Tdr6DBIewlQEnY4oEjTN5JTJobPfkeMGjbNp8Cy8zuH/QqeWDZarZCznFvQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>108865</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.248/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>689</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.0.248</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.0.249</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-28T14:53:27.28</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.249</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-04-28T14:53:27.28</Published>
      <PackageHash>FBd757rvFRX5oIBDGYYI1mNXBlCwHntdkJtxT8e5YK4iPUDxaVu7fNrvVuykY9y4+BFaRYu48ihPjq3MKYVFuw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109125</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.0.249/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>259</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.0.249</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.1.250</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-29T11:14:17.48</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.1.250</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T13:35:30.907</LastUpdated>
      <Published>2014-04-29T11:14:17.48</Published>
      <PackageHash>zIuBfMnQUIkNMNoXBlHyhCzqix1OTbAYiuSWVJm54bJ9JZ04niljFAAiRaMvkHj3MvQReBLB3e3Cg9gcp84TOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109122</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.1.250/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>978</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.1.250</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.2.251</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-30T08:20:29.247</Created>
      <Dependencies>RabbitMQ.Client:[3.2.4.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.251</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-04-30T08:20:29.247</Published>
      <PackageHash>wiE0lD6tr4il3+qzVyVZu1+F2CX+ItssMPAomOK/x6fVjRRL7NiN5KBb5CLyouhH5kH/cASstTM8/REEy5a9KA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109120</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.251/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>219</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.2.251</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.2.252</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-04-30T14:51:43.893</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.252</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T09:31:45.177</LastUpdated>
      <Published>2014-04-30T14:51:43.893</Published>
      <PackageHash>61VEk0kc+ApIa/OCfA/AsoWnA5yZ/AqUmjHog/gvsD19dwLd1WoWOUMZ6D8llnzwwt/7etRh/oQOfsoLqFjJ8Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109117</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.252/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1114</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.2.252</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.2.254</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-08T11:05:25.673</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.254</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T10:15:11.677</LastUpdated>
      <Published>2014-05-08T11:05:25.673</Published>
      <PackageHash>+CFFODCCzk0Z7hFr6Z9kE8OSnuC6vgV4lUyaQ6Etwi5kok4Jv5SOV7xlMKSw68/GXgRdGPOtEaolQgXR9G4SmA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109125</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.254/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>804</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.2.254</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.2.257</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-14T09:40:34.623</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.257</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-14T09:40:34.623</Published>
      <PackageHash>M44FPIoVOT7x2xeq/fga/BJ4ueT2O3T8C7OoeH2kmsoXABRN+g3Pd6dWXkYTrcxnAaTHhHwvvga04Dc9TL1xiA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109152</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.257/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>267</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.2.257</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.30.2.258</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-15T10:02:59.587</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.258</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-15T10:02:59.587</Published>
      <PackageHash>FKgtdVjz9AlEumBNoe9SQVGXbfduSBVFViS/noIp/YrDZ/DUj6mDxS4qhD3CWV8LPpa3lfkqUX/knBQkogi5cQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109159</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.30.2.258/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>386</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.30.2.258</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.31.0.259</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-16T13:38:57.077</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.31.0.259</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T16:22:55.88</LastUpdated>
      <Published>2014-05-16T13:38:57.077</Published>
      <PackageHash>91iQGCc5fYmx/5VlBPd5xWGDsEILToD05YF8RZpyQ6aCpDmvLQ29OPFrNr/pWI3rlbP25WJsYYqkV00HUyuW5w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>109877</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.31.0.259/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>333</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.31.0.259</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.31.1.260</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-19T14:51:41.863</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.31.1.260</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-19T14:51:41.863</Published>
      <PackageHash>zPSAzkcJNa0cs/xY6WgAyCact15KPv9PT/1fESiPm9h0wTZGtIE/EHF2PQCuF43m93wtQ+HpD5FfwgzgXqtW1Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110304</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.31.1.260/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>146</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.31.1.260</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.31.1.261</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-19T14:53:44.277</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.31.1.261</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-19T14:53:44.277</Published>
      <PackageHash>Xtwxe0av0ys6F1CVZhNIlvWjsiHROnvdr4r+uivSB4hpxqzXkoLj+0La3adI3sVGWG3khmfMgX2TmThQBsCnXA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110299</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.31.1.261/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>145</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.31.1.261</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.262</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-19T14:59:32.243</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.262</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-19T14:59:32.243</Published>
      <PackageHash>mOM2j0geN53HjQKlDLzVoCbg/ZALWzVdOPtX+gu1oJZ2yUC5HnjKmxBz29I2tXQqyre/L1laWR1QLNg7lvarDg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110475</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.262/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>310</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.262</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.263</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-20T15:09:42.58</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.263</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-20T12:05:43.807</LastUpdated>
      <Published>2014-05-20T15:09:42.58</Published>
      <PackageHash>N66W3Nvju2PLZnYwqiKUTqoZ18XpB1WPwB7RGXEZ5Ca+GAClMqug8SQuCHe/e9br5PFep7eJF0YCMmeXOitvVA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110475</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.263/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>281</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.263</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.264</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-21T09:39:00.237</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.264</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-20T09:58:20.42</LastUpdated>
      <Published>2014-05-21T09:39:00.237</Published>
      <PackageHash>QURAEsL3yip+arF3EsVPSX6UMcy1f1+KUwkBze+x21m30y2Dwr7HgT57ppvalVLehVAv1c2M5zecYgL2Z/ccMg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110478</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.264/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>345</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.264</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.265</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-21T15:55:56.63</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.265</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T12:52:57.043</LastUpdated>
      <Published>2014-05-21T15:55:56.63</Published>
      <PackageHash>5sw0yq8l/gM0nMtSp3hzXP48t9Eq3nu5hfF78Pt4i1FIX/a83dnBPfniZc4g2C5xG7sNdTjFjBMyMxSD7vuV4A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110481</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.265/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>275</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.265</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.266</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-22T12:36:26.897</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.266</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-10T16:11:56.19</LastUpdated>
      <Published>2014-05-22T12:36:26.897</Published>
      <PackageHash>qLm3df56tdjuFD/bgROTHKHqg3EBL6hOenJYrgQD/KODUZhOmWwacC1OatBn+3M8R2DW1nUJARPI8nbAtuhlVQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110480</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.266/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>511</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.266</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.0.267</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-23T08:42:02.523</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.267</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-05-23T08:42:02.523</Published>
      <PackageHash>qpyLzgP8GiDAhM7LLK94PAQG7aWWgs5c8kngyWWjrvBA7zwtlNZ6aehbPkW//ksWbKoMr9I8klOnn5unnupOUg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>110478</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.0.267/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>317</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.0.267</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.1.268</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-05-26T14:10:03.923</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.268</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-24T10:59:28.827</LastUpdated>
      <Published>2014-05-26T14:10:03.923</Published>
      <PackageHash>SUrVPXExG8eBXgdGofnXIfGeeEB87ZFO9G56UvcYt5aJ+H3yHmTialswjaDXdgJ5bXcX+EUotLuWqnUT1xjkxA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>114590</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.268/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>783</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.1.268</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.1.269</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-01T08:48:04.123</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.269</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-06-01T08:48:04.123</Published>
      <PackageHash>afNBomTm03V51QUnAILZ+EM65e7JPWZFUnJzhgCmHpR/llOwfOwaN2/PYTDlebJEWfzRDHtdTuXXBPiaqXu0Tg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>114570</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.269/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>150</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.1.269</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.1.270</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-01T08:52:32.31</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:4.5:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.270</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-14T08:34:47.303</LastUpdated>
      <Published>2014-06-01T08:52:32.31</Published>
      <PackageHash>pd5I1okXGLCKvdJmWjUnxP+eZb3tYAIEfry+2RAXaD9JeM1aKwlukYalj31uBR0rp06quGPb7mEmkIrKBImQYQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>114569</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.1.270/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>540</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.1.270</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.2.271</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-05T14:13:45.35</Created>
      <Dependencies>RabbitMQ.Client:[3.3.0]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.2.271</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-21T17:20:06.617</LastUpdated>
      <Published>2014-06-05T14:13:45.35</Published>
      <PackageHash>XOT/6t5E26iJal1e9Idxx/wS6+076Aqryk4TuUC64YxEVUFwU6zQRrkAtH0E3FBEk8zEQt2qTc2LmPr9gpSbxg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>114562</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.2.271/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1208</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.2.271</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.32.3.272</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-14T12:22:53.25</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.32.3.272</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-01T17:56:39.697</LastUpdated>
      <Published>2014-06-14T12:22:53.25</Published>
      <PackageHash>5ZQcIRT7oE+yLpAK5fAWFXTI6LUxEw8rcDTGyhzeE2vaB3kkXyu+CjmPzJptZREngeboJY8IYKbcQEDJ/kW7eA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>114567</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.32.3.272/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>490</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.32.3.272</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.0.273</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-16T13:54:48.22</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.0.273</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T14:00:38.41</LastUpdated>
      <Published>2014-06-16T13:54:48.22</Published>
      <PackageHash>IDaetVVvb3N+Dm6wIxCmaOwxUfXwofSl416XnLSG2vQm9uOjdiA0qHC8+JVI/kBGi8GxBjXwEgCOuPudgXdKUA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>118826</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.0.273/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>925</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.0.273</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.0.274</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-19T15:53:53.377</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.0.274</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T16:42:08.837</LastUpdated>
      <Published>2014-06-19T15:53:53.377</Published>
      <PackageHash>s/QaBmSoX25lYFOv2gq+nlYSWpRJk+jcx7N2QVHVg6i11ZEcBJ0Yo757oSVdc10xruZk9FCBPWPKMDWrH5pE6Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>115290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.0.274/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>148</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.0.274</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.1.275</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-19T15:58:12.647</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.1.275</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T16:22:55.88</LastUpdated>
      <Published>2014-06-19T15:58:12.647</Published>
      <PackageHash>XLu9+CislgdNLopG+TrLzb3FX+KcoAqxXK7RoSTJBuLcHuAirGgqbdeynS80PLGcoGqJyGXpYg1R1fg2IeFD3g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>119011</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.1.275/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>587</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.1.275</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.1.276</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-06-24T07:57:59.34</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.1.276</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T12:41:59.433</LastUpdated>
      <Published>2014-06-24T07:57:59.34</Published>
      <PackageHash>xS+l/RTnsonRvJtvSX2kEZ46Dla/A2mLKv9LU4mDXZ5oChZmPgMUPl5t7Om3jBTjNH2+CUZ8ZchFgBFn0ZI+Ug==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>119271</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.1.276/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>1233</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.1.276</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.2.277</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-02T06:54:40.09</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.2.277</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T10:45:27.97</LastUpdated>
      <Published>2014-07-02T06:54:40.09</Published>
      <PackageHash>diKqT+OWA01YJmTRglKgn3wktAV/w9QEQVh9upt7JcOxXPT+sVd35+kTSZUDNG8iPMCBaCPFIBixod/ZbhWUyA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>116125</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.2.277/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>755</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.2.277</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.33.2.278</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-09T11:10:34.9</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.33.2.278</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2014-07-09T11:10:34.9</Published>
      <PackageHash>ztiI9ix7Myj8QxrD5Djn8X1bBjg3XcjYJ2xK2w1OJlV8nRj/+XydeFxHpcnmCyWOEjIT1pdJofQ4Hp+Ubsb9/A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>116133</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.33.2.278/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>248</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.33.2.278</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.34.0.279</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-09T14:53:32.647</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.34.0.279</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T14:38:27.797</LastUpdated>
      <Published>2014-07-09T14:53:32.647</Published>
      <PackageHash>2ofZA6Io0BLAhce+ZbeXbAyqIJvU8/ufp0ecn0gphTjudUd8OmWsTQgLSvV9OnT0D6cSL0N9PadedOSO4xIOaA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>117812</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.34.0.279/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>652</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.34.0.279</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.34.0.280</Version>
      <Authors>Mike Hadlow,  Chris Edwards,  A Hazelwood</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-11T14:16:27.677</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:|Newtonsoft.Json:6.0.3:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.34.0.280</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T08:27:55.96</LastUpdated>
      <Published>2014-07-11T14:16:27.677</Published>
      <PackageHash>DQvZT4yGo77CrM2jMB75PBs4KpCa4jVRSwXT5/i4f3w0GKNExVTV7TSsa7uYUm+C8QGlN+fMfIcJmhk0cgW9WA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>120982</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.34.0.280/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>719</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.34.0.280</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.0.281</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-15T10:55:46.013</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.0.281</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-13T20:50:50.373</LastUpdated>
      <Published>2014-07-15T10:55:46.013</Published>
      <PackageHash>gmyAlLMVwJxSqv6R79a6rbMG/Q7Nm5yjFGIuX8YcufYR1Vd8uPW916ilby9cZKZ8y+gMqIJ6i54Vuy7+BipayA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>368017</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.0.281/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>2111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.0.281</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.0.282</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-22T08:41:47.753</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.0.282</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2014-07-22T08:41:47.753</Published>
      <PackageHash>0pEtiLSHdmiBVDmGwhVafXTmzsqUh4pDLqw6/H20+Vjb3K9t4nxArat871pxAiLdD0IX3GJZJ6+tIUr4HWBzkQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>368015</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.0.282/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>464</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.0.282</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.283</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-23T10:17:54.253</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.283</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2014-07-23T10:17:54.253</Published>
      <PackageHash>62NOQRjx+szMUE1Y+1loQ/GCaFVmeSDnbXkDJNny1kafzk18jdHDy6mGuy2XJJWwFDBfzVz/f8R+m6yZ4ERWAA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>368020</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.283/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>431</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.283</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.284</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-23T15:22:05.57</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.284</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-29T10:35:19.303</LastUpdated>
      <Published>2014-07-23T15:22:05.57</Published>
      <PackageHash>gfS6656QP5d42KjvprcdozhBo9VcpRdVAVvsUdnCxRAcjnHaxPX4TFByzUz9hC8UsyEf3Bc3IR3tNR8ixB95VQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>368022</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.284/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>805</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.284</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.285</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-07-29T20:23:26.053</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.285</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-30T11:41:19.037</LastUpdated>
      <Published>2014-07-29T20:23:26.053</Published>
      <PackageHash>2n+JEiaamAMqGbJdZaVBdXzYOf/tv9wkqdOzjXszAnrGTB1pQlOSgySPi5ilaTuS6goI6ZWzakYSAAhHoUynfg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>368019</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.285/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>996</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.285</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.286</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-01T12:20:00.157</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.286</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2014-08-01T12:20:00.157</Published>
      <PackageHash>dcpp3avfpa05jNEqa81U4SDnn141S6pZSk0on4YoIHeRJxXQZzPVRy9jig/9eGgpUb272Hx+ACu7d5WVGO+aYA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>367946</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.286/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>153</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.286</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.287</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-01T12:24:58.843</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.287</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-13T23:17:15.087</LastUpdated>
      <Published>2014-08-01T12:24:58.843</Published>
      <PackageHash>87KkEZHt5EdKXBlZS7ewy+Qxb/lk7tGiGFt/cbvYZ3qd9wfgGqX9eHDO52PUCe5VqMWDfezDeqJWRe/vsa3afg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>367992</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.287/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>218</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.287</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.1.288</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-01T12:30:12.997</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.288</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-17T12:55:25.783</LastUpdated>
      <Published>2014-08-01T12:30:12.997</Published>
      <PackageHash>9GUKRx+ZCRXLWbjwR9+b6q2DppihlNx42//lArfhWcWZWN3M4KbR3oWPuJPZZrUMHeWcrnx7I404VZHKKi6SFA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>370596</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.1.288/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>994</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.1.288</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.3.294</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-05T15:13:28.34</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.294</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-11T09:48:24.053</LastUpdated>
      <Published>2014-08-05T15:13:28.34</Published>
      <PackageHash>HKcszgNuES024PIyb5E2927YulX6FETeje+bzDr258/kq6a02B5/T7/KHrUrTDJliRVt4ayUkz7lJ0ng3YL/aw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371446</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.294/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>373</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.3.294</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.3.295</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-08T09:13:17.18</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.295</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-27T23:47:57.85</LastUpdated>
      <Published>2014-08-08T09:13:17.18</Published>
      <PackageHash>k6NuxecqwZ+jSdsHQERlMJJhe059X9iRChI4MKarIGQmwheKaPRmEKVGNOKV0tGlINNLjHM2gFOUme0SkVKQhg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371445</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.295/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>302</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.3.295</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.3.296</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-10T12:49:50.273</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.296</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T21:22:50.353</LastUpdated>
      <Published>2014-08-10T12:49:50.273</Published>
      <PackageHash>euciGu9t2C/IeifUxZXu+Q6fdG3GNklzZ/4DcYe9f+i3l0ICj5clj82UixqLSmspbPY4SqzTQp83bs96h63n5w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>371397</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.3.296/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>195</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.3.296</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.4.297</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-11T08:57:34.427</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.297</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-07T10:51:07.52</LastUpdated>
      <Published>2014-08-11T08:57:34.427</Published>
      <PackageHash>xrD6lFKb78hArdqLtI5mleppKbFKP0/AG4qBXG5fM6pLO8prdXa6XHHtFsvMYNBDG6/EyOj//7MZWra/0SttXw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>372746</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.297/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>653</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.4.297</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.4.298</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-13T09:45:23.49</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.298</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T21:17:45.367</LastUpdated>
      <Published>2014-08-13T09:45:23.49</Published>
      <PackageHash>3jKffI2visJ/8kBW703565W314zcHlKGZYKVV87GHQSnK2kB41SLTy7lnl2jZXqqpC2TyVUN8wdmlkYRdUw6rw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>372744</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.298/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>346</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.4.298</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.4.299</Version>
      <Authors>Mike Hadlow,  Contribtors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-14T08:41:00.003</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.299</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T21:12:40.41</LastUpdated>
      <Published>2014-08-14T08:41:00.003</Published>
      <PackageHash>mc5gAWx0M/hUaBwJTe1zxOxyJeCDrct1rzTg/DzRq1sG1fZuXPxHJZA89YKQsaTXLrLt0/9EqdrEEhH59ppFwQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>372746</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.4.299/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>144</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.4.299</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>EasyNetQ</Id>
      <Version>0.35.5.300</Version>
      <Authors>Mike Hadlow,  Contributors (see GitHub repo)</Authors>
      <Copyright>Copyright Mike Hadlow 2012</Copyright>
      <Created>2014-08-14T09:52:31.743</Created>
      <Dependencies>RabbitMQ.Client:[3.3.2]:</Dependencies>
      <Description>EasyNetQ is a simple, opinionated .NET API for RabbitMQ</Description>
      <DownloadCount>439348</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/EasyNetQ/0.35.5.300</GalleryDetailsUrl>
      <IconUrl>https://raw.github.com/mikehadlow/EasyNetQ/gh-pages/design/logo_design.png</IconUrl>
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-05-04T21:12:40.41</LastUpdated>
      <Published>2014-08-14T09:52:31.743</Published>
      <PackageHash>tJKT1Ob6zRa+MGU+9+UXV0TqP4WlJ+WUdaz8cWyieSQj9CGFgPtYQGHwA7mnTEEFfl5PdDYwvw1o5KY62uQe+Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>374668</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/EasyNetQ/0.35.5.300/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes />
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Tags>RabbitMQ Messaging AMQP</Tags>
      <Title>EasyNetQ</Title>
      <VersionDownloadCount>355</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://github.com/mikehadlow/EasyNetQ/blob/master/licence.txt</LicenseUrl>
      <LicenseNames>MIT</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/EasyNetQ/0.35.5.300</DownloadUrl>
      <ProjectUrl>http://easynetq.com/</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.135</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-08-21T19:49:52.603</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.135</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-08-21T19:49:52.603</Published>
      <PackageHash>8Lgwz5bj2IPgLgE9lP0rHLAI0l8sYJG5vgdtay9xWhLC/E2NMaGcW9o4usrdREy3D097l7kdk/J9mLiYlgfsww==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9542</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.135/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed Skip and Take with no select failing</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.135</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.139</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-03T13:52:14.287</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.139</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-03T13:52:14.287</Published>
      <PackageHash>ImhKaszbXZI66y3LzFDHXDVgDrCshiyeg0utk+SrVH5FhuQ2NKJGv8/6mCygROmqNgH/I6wQiawYgxvV7VMLVQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9562</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.139/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Inflate now throws MissingDataAccessObjectException if the object doesn't exist.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.139</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.141</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-10T13:46:49.207</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.141</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-10T13:46:49.207</Published>
      <PackageHash>UkdbJIJD7DZUIr/Egu873DijzrA9WbJ4pGJcIPvIzr4ek7eS70GD2pImqniX30WQlLTPCJNJTULpy95MUf6NmA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9543</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.141/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Added port number for runtime postgres configurations.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>126</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.141</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.143</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-12T22:07:29.59</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.143</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-12T22:07:29.59</Published>
      <PackageHash>a2BRbgrtbQo66zOnm0D9Lpm82zvOBAf3wBQme7WR2nkjxYli+kFZkUU71X8+xXw1kGxPVNy/+pJ31xu75YRA6g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9607</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.143/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Fixed updating existing multiple objects in a transaction only updating the first object. Fixed unnecessary update calls when nullable and enum properties are modified with the same value.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.143</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.147</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-16T17:29:36.957</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.147</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-16T17:29:36.957</Published>
      <PackageHash>sz+TTZRssRo6YEm4ZIDu083JJdBuozgQrQ3G9lh7bffCOE8qOnNGzlZ02nV9Ig/K5oRayXEtKuLVfml7+yA3qA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10128</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.147/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>Support non primary key auto-increment properties in Postgres</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>120</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.147</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.151</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-17T09:35:43.8</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.151</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-17T09:35:43.8</Published>
      <PackageHash>F6FZbfO0i/U+Q0c/W4ljQ5UWdaaDq0Ru8tfnwIbQDO0SBkE+79WS3m4HSAUaeVbqVuq+rl/DJT6at3/QLI8rMg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9868</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.151/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Non primary key auto-increment properties now supported in Postgres and MySql (limited to one auto-increment per type in MySql).
- Can now specify sort order on indexes (single and composite)
- Can now construct DataAccessModels where the type is not known until runtime using the new non generic BuildDataAccessModel.DataAccessModel method.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.151</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.155</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-18T13:16:08.24</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.155</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-18T13:16:08.24</Published>
      <PackageHash>8RxXReBW46JigRDAi03S54Hbu6AG0pjyaev3tgBjoT2dw7G4zcjfflMNE/9HKGS0KB3xjvurvFVF+l0/Xbt0kw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9940</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.155/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Non primary key auto-increment properties now supported in Postgres and MySql (limited to one auto-increment per type in MySql).
- Can now specify sort order on indexes (single and composite)
- Can now construct DataAccessModels where the type is not known until runtime using the new non generic BuildDataAccessModel.DataAccessModel method.
- Indexes on related data access object properties are not supported (indexes are added to foreign key(s)).
- Allow non-autoincrement primary keys to be set multiple times</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>117</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.155</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.157</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-18T14:30:18.897</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.157</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-18T14:30:18.897</Published>
      <PackageHash>+6AFfRUmxD9qYlTwZF3MFeMQlW+bAYHtXQG6kLPL3eTpHsjjidzAeXW9+23yrnotJcO1isGOi1heKmRMlrUy4g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9958</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.157/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Non primary key auto-increment properties now supported in Postgres and MySql (limited to one auto-increment per type in MySql).
- Can now specify sort order on indexes (single and composite)
- Can now construct DataAccessModels where the type is not known until runtime using the new non generic BuildDataAccessModel.DataAccessModel method.
- Indexes on related data access object properties are not supported (indexes are added to foreign key(s)).
- Allow non-autoincrement primary keys to be set multiple times
- Allow non-autoincrement primary keys to be read before first written to</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>119</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.157</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.160</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-09-18T23:55:02.633</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.160</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-09-18T23:55:02.633</Published>
      <PackageHash>ezIOO+x8m7kSmXb0SC1v+K0cR6mxwrckh6l5ZAnUZQONVKtau2S5ETg/kBJaFhbspFdalW1RMUsb8IYbnd0a1w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9985</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.160/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Non primary key auto-increment properties now supported in Postgres and MySql (limited to one auto-increment per type in MySql).
- Can now specify sort order on indexes (single and composite)
- Can now construct DataAccessModels where the type is not known until runtime using the new non generic BuildDataAccessModel.DataAccessModel method.
- Indexes on related data access object properties are not supported (indexes are added to foreign key(s)).
- Allow non-autoincrement primary keys to be set multiple times
- Allow non-autoincrement primary keys to be read before first written to
- Fixed index names not unique
- Can now have DataAccesObject properties as primary keys</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.160</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.165</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-03T11:10:52.283</Created>
      <Dependencies>Shaolinq::|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.165</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-03T11:10:52.283</Published>
      <PackageHash>5xER22t1egaweotUj1heN3l2QQVdPudx9vw2GqFqPBPWuSh5wt7RnhkejwqL4aMq+DczkRry9ESBj+ADGhO1eA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>9770</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.165/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Composite primary keys made up of objects are now supported.
- Better handling of related data access objects.
- Improved performance.
- Fixed non-aggregate count. Now uses EXISTS where possible.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.165</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.6.0.173</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-13T11:28:14.087</Created>
      <Dependencies>Shaolinq:1.0.0.146:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.173</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-13T11:28:14.087</Published>
      <PackageHash>eQVsGZBi6hjf7CTfyvjSRNzS/GBkdDLSNLkfIM6/F3AEQpNJo4S4k+GRp6HsEdAE3ToTA+GxOs51umTLtakqVw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10199</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.6.0.173/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.6.0.173</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.174</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-13T11:44:05.21</Created>
      <Dependencies>Shaolinq:1.0.0.146:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.174</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-13T11:44:05.21</Published>
      <PackageHash>ZO9akFiFGHCRKxSUfBgXGvT27hWknkfRYZ9Yx8gr/9C2NsezHGVV39UPFK9Kedl3qfL9DYnXHjOofBbb09FZ4w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10199</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.174/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.174</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.179</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-13T17:01:57.257</Created>
      <Dependencies>Shaolinq:0.9.0.179:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.179</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-13T17:01:57.257</Published>
      <PackageHash>FdYBMmMgv373A3G42bIcPoqkffKzqMuOvhF+eK1QUIJcuSzZ4pGJCjaZrE9y7s9lD+rf9I7HMYZugTg3dbTpNA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10192</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.179/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>114</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.179</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.183-test</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-13T23:28:20.61</Created>
      <Dependencies>Shaolinq:0.9.0.183-test:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.183-test</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-13T23:28:20.61</Published>
      <PackageHash>QQaq8p3Wnr8blR7c6lkhQo99rvNLwFQq4fmxl+u1MdxjBymapR/n+2pjs3dFHFMj/SPhpPUTcq7wieFXLaQ/ZQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10202</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.183-test/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>107</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.183-test</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.184-test</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-14T08:49:44.153</Created>
      <Dependencies>Shaolinq:0.9.0.184-test:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.184-test</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-14T08:49:44.153</Published>
      <PackageHash>voyb1o0nNT+H6CNiPRbXzTl2zdo5FZiVNMZAZUlo87D3RODuG/1MHrKfpxJkZjFCZDOzLuPATWBL3Eyg0bHUng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10205</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.184-test/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.184-test</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.189</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-14T13:55:12.647</Created>
      <Dependencies>Shaolinq:0.9.0.189:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.189</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-14T13:55:12.647</Published>
      <PackageHash>RP71OToIEHcLjTwt9Wtujuesqp/aX3997CRYZGSmOl/Zxg5CIXJRA3y5lIAh/eJB1H5maxsax6zbkeWGknsANw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10193</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.189/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>112</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.189</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.193</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-14T14:28:38.717</Created>
      <Dependencies>Shaolinq:0.9.0.193:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.193</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-14T14:28:38.717</Published>
      <PackageHash>8eRTjMH2dgeItMJdqGaYICE0wRN4k+2YkKRoW3N4javCMRmB3q6FRgAfA3TWNi5yUD+z5EjYJySg1TYNODQ5jQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10195</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.193/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>117</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.193</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.199</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-15T09:30:35.263</Created>
      <Dependencies>Shaolinq:0.9.0.199:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.199</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-15T09:30:35.263</Published>
      <PackageHash>8841AKgrPeYHxFgKGuouQrMUY2kCyqezZXK9BcCvHmx0mLL6hztIX0ulzQk3ugLwywmgZ6sEPITkrZqR3oO/ew==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10214</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.199/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() inside select and on IQuerable.
- Support for Include() when selecting related objects on objects.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.199</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.200</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-15T21:37:00.243</Created>
      <Dependencies>Shaolinq:0.9.0.200:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.200</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-15T21:37:00.243</Published>
      <PackageHash>u3Ujs8uLgr+PJQoR8+rGdoOCXHgRxqKQK8mYNFmtW/zlrS2DWesfg5iLN01VG6C8TnLp3f2FANybBW7FchLtuQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10244</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.200/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.200</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.204</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-17T14:39:00.36</Created>
      <Dependencies>Shaolinq:0.9.0.204:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.204</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-17T14:39:00.36</Published>
      <PackageHash>2u+IpBoCsrYX95ZMuEW/bd5lJkRdkP3o+tZZUGfsFUUqRPTf/N7VEEQbAXN+D03tUxsnGG0EQSzh0KjM8knF5g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.204/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>112</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.204</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.221</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-19T16:10:31.077</Created>
      <Dependencies>Shaolinq:0.9.0.221:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.221</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-19T16:10:31.077</Published>
      <PackageHash>/dlNT8tt+xpQhSv0HskWVRgIR4ZRpvHTmmRrTnYiPj55VyVzRsgdS/+Kt1B19UO4pzAju3IgclaJe1Wf7TtC6Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10294</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.221/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>108</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.221</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.222</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-19T23:28:45.33</Created>
      <Dependencies>Shaolinq:0.9.0.222:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.222</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-19T23:28:45.33</Published>
      <PackageHash>FOPAq3RvZh/zYjNLrXUnrVO8X+84lwmB1JPt7y5NgymfD+H3oVBrsCjloYzuuW8pc3G5KA6ckABU91gyUVrzTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.222/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.222</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.225</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-21T10:33:23.01</Created>
      <Dependencies>Shaolinq:0.9.0.225:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.225</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-21T10:33:23.01</Published>
      <PackageHash>Gq+eEBPO0T5WOHzrItRbBo6ASGZZ5gDbeAoMp9MDgqtCHEkik3G3j2Bl0zleZqkYOJOsFpVLev1RqGLL79F9Hg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10292</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.225/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>124</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.225</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.226</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-21T11:09:18.3</Created>
      <Dependencies>Shaolinq:0.9.0.226:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.226</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-21T11:09:18.3</Published>
      <PackageHash>0elY1TqZWBOxUBdVWsoYEWfeG2hq6Qwps48pTMehSa/CpbhxDTzh0JOcHUshSbSomdDrdbTag+2L79Oojn612Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10294</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.226/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.226</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.227</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-21T13:13:35.593</Created>
      <Dependencies>Shaolinq:0.9.0.227:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.227</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-21T13:13:35.593</Published>
      <PackageHash>zUoo8RzWZWOfNEl8E/wkYjGniU/1m0ldwiI59ChSjAlj0QZuY0I2S5vBGzsBKm+MtXo29z7hNmE9q/jC/AqReA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10290</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.227/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>112</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.227</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.233</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-21T23:39:11.783</Created>
      <Dependencies>Shaolinq:0.9.0.233:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.233</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-21T23:39:11.783</Published>
      <PackageHash>H58musulUa6X4JOjRSoxrY9DKrZUUvND0ErcevLHu+Qw4pNnCVu4vAxBLaEGd7uJTiU0ITka/MnpKYbyZumzTg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10333</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.233/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>118</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.233</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.234</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-24T11:19:05.533</Created>
      <Dependencies>Shaolinq:0.9.0.234:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.234</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-24T11:19:05.533</Published>
      <PackageHash>40bza1V/Iz2rlVxvMYsfvmy1FnShRe43wK4LmchLOR37NDL2IvUlvMQfzfEiVEFjeWvK5tGmPRG+2PJqGn0/ZA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10343</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.234/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>112</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.234</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.236</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-25T23:16:11.177</Created>
      <Dependencies>Shaolinq:0.9.0.236:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.236</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-25T23:16:11.177</Published>
      <PackageHash>ojrZI0p9KT7IhXbdUXYFdJpdHHM9NYt6PEZDjU+B+MMG3AlfyrH1srisY659Az7Ag5VrvTyFMO2nR5gIO5ILhg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10457</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.236/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>117</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.236</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.249</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-10-27T00:22:43.967</Created>
      <Dependencies>Shaolinq:0.9.0.249:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.249</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-10-27T00:22:43.967</Published>
      <PackageHash>206Xq0NDDsGfDyjDkrzaaQbjx4RQmeSagxqUYyrFpXgcv0pkGrq5q1oC3mEaENxihHCVbu/lWuTve8v8E27fng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10657</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.249/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>114</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.249</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.262</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-03T12:17:04.797</Created>
      <Dependencies>Shaolinq:0.9.0.262:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.262</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-03T12:17:04.797</Published>
      <PackageHash>DB7TfMZzGQE6pD/dYgwqx0KaIVWpqF3GqdnYQhMOYIWCx0oxiYSEJFOzQAOri4ng5rdXVdaDyEq0RerXIePLPA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10812</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.262/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>352</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.262</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.263</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-03T13:00:03.703</Created>
      <Dependencies>Shaolinq:0.9.0.263:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.263</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-03T13:00:03.703</Published>
      <PackageHash>mMq/Kssj2QvTNU3aojSdIjyKm/D9UZXPwQtZzWX8gpy7d14IBZvLKNFXR8S2BvPcHImqhOTXpV+k6LagScjE8Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10814</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.263/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>600</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.263</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.265</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-03T16:40:51.3</Created>
      <Dependencies>Shaolinq:0.9.0.265:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.265</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-03T16:40:51.3</Published>
      <PackageHash>VbFpp6ISeAlgoFTcP3nqVUkYP5UW17I5kd6QdspZjg0IHTyDXFmeHFKaDwsNMgwiQzsWbpWIuI07BpUCABCukw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10813</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.265/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>351</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.265</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.266</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-03T17:28:58.633</Created>
      <Dependencies>Shaolinq:0.9.0.266:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.266</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-03T17:28:58.633</Published>
      <PackageHash>bEcHOAezqdjoMcd7a5mmhB16bRZePz9bCyvnRAFCTqVDeCzw8oA/TXA7Ur++sw5/mAthOge3nA1N9UjUkLsk1A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10815</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.266/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>840</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.266</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.268</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-04T12:04:14.743</Created>
      <Dependencies>Shaolinq:0.9.0.268:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.268</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-04T12:04:14.743</Published>
      <PackageHash>R3egaxJVh6Ozv9BWNTCe3dO08ZMQhFUhCgfZVeUyMIEycrWf5qj1H5RO45nTnx5pL8FSJID+XQiY4yNL4gch1A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10815</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.268/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>581</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.268</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.269</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-06T16:13:03.217</Created>
      <Dependencies>Shaolinq:0.9.0.269:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.269</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-06T16:13:03.217</Published>
      <PackageHash>R7Vg1CCVZMLaFEJZva548geStqDXOuPu56NegbF7M7CW5GMeNFtkjSUCjRMD+Q2zy26WOXZfeyOYJa1bXyG75Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10847</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.269/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>327</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.269</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.279</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-09T15:30:07.287</Created>
      <Dependencies>Shaolinq:0.9.0.279:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.279</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-09T15:30:07.287</Published>
      <PackageHash>nNpxN858H6/AZyWQQ3gaKgNmpLG32JzC+G+fvsuhIodISs6ukTSgKTCd+7K5M2juRsxgQf00ZIrl2D20RuHGOw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>10877</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.279/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>463</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.279</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.290</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-11T14:32:13.103</Created>
      <Dependencies>Shaolinq:0.9.0.290:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.290</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-11T14:32:13.103</Published>
      <PackageHash>2kN7eIF/r7NTf+tLzxXspfNupSZhZTWUiOmpeGIbamnPWPMYPR4ZElemwlqLk3opgejwgtmVlCqH3shsD67PgA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11194</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.290/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>259</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.290</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.295</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-12T11:25:44.3</Created>
      <Dependencies>Shaolinq:0.9.0.295:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.295</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-12T11:25:44.3</Published>
      <PackageHash>Iz15oCwsXl6hasCjqpZWCo8rs7FXQD/XVbIc36RNrCds1Hxb42HIUYJbj7KqbRWJKaZy8lzbMLcdsjRwXsPIeA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11255</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.295/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>388</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.295</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.299</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-12T15:31:05.837</Created>
      <Dependencies>Shaolinq:0.9.0.299:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.299</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-12T15:31:05.837</Published>
      <PackageHash>bKONzKGpmL33CXlYPynOStW6Tj9NgJaB7TswZmY4T2fE/Xa+Dbo9za5nf+JvY/4KdDd6XvfEdGeez/pqIEKrvg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11251</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.299/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>251</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.299</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.313</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-22T00:26:11.79</Created>
      <Dependencies>Shaolinq:0.9.0.313:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.313</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-22T00:26:11.79</Published>
      <PackageHash>ZfoHeLGgZL4GAPKgKI178UZPHmW+gksg+JcOLwkcqnTnROOLNr5yE75S6S9kQtVHCu/uRCQUbKNzgyG0D9wZlg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11301</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.313/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>160</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.313</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.323</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-23T23:14:29.633</Created>
      <Dependencies>Shaolinq:0.9.0.323:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.323</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-23T23:14:29.633</Published>
      <PackageHash>k3NKt8cP76FV8sKMJsza934JZ3a80kqTKLWUEmh/OPOgne49OT3muP7Q2mOgLkuXWFcI+cMhIvBEiXysaaNAOQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11341</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.323/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible
- Bug fixes</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>125</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.323</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.325</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-24T14:35:56.257</Created>
      <Dependencies>Shaolinq:0.9.0.325:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.325</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-24T14:35:56.257</Published>
      <PackageHash>5ChWDbVQN8JgirDCF0SvcraoHUdcIw57vULQ5FRuPOI5uSOuU2r9YFRihDlVeWGlfwSGZtmx5HW+c4XYa0whkA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11374</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.325/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>108</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.325</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.326</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-24T18:01:42.827</Created>
      <Dependencies>Shaolinq:0.9.0.326:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.326</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-24T18:01:42.827</Published>
      <PackageHash>E9mfwL4BujNjHxxtR76X7YS/p/QyIG1EK8Lkp7OTHJLMAmYhnhTkUlq9bIXkEkRZyJDsunOPuVxeci4Pne5Lwg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11404</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.326/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.326</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.328</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2014-11-25T12:30:13.327</Created>
      <Dependencies>Shaolinq:0.9.0.328:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.328</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2014-11-25T12:30:13.327</Published>
      <PackageHash>Pl9gD/X96b73F1psDADpTjdlJwMJzltAerlBi6GT+FsWMqxgW0gZwRecwEw1RmizLohqfZ3L6Ch3IolB+mEqRQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11405</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.328/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>127</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.328</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.338</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-01-12T09:52:41.273</Created>
      <Dependencies>Shaolinq:0.9.0.338:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.338</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-01-12T09:52:41.273</Published>
      <PackageHash>UgZQLBJt+6CPCAiY/RDiTlrh6zpbz8B76j+M+sqLjTd0EFeqZKU3hPrGRxPYok0l4yDccaFt97KT/tg0wN5yBA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11464</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.338/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>122</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.338</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.350</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-01-29T00:07:27.6</Created>
      <Dependencies>Shaolinq:0.9.0.350:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.350</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-01-29T00:07:27.6</Published>
      <PackageHash>Tcmp1iAWaCLr2oRUXihqj7P1RDs/6DBPe1cg29/AyCRAlKdXTi3W6zPqRtp6muOwWs58mLNfGGxYZTWQuw6jng==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11430</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.350/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>107</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.350</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.353</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-01-30T09:07:31.583</Created>
      <Dependencies>Shaolinq:0.9.0.353:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.353</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-01-30T09:07:31.583</Published>
      <PackageHash>4E1Yj9uX+cbYozkCU8/S4vQLz/yjAnBZjP+qZbc3/6rqNkpKFuh0YpnNg4gwGC+fXg8gBvWxRmxCbYQLvqHhLA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11431</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.353/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.353</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.354</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-01T23:11:42.887</Created>
      <Dependencies>Shaolinq:0.9.0.354:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.354</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-01T23:11:42.887</Published>
      <PackageHash>/njfo33dgl+SiJS5X50gJ1N/wZut6FilH0Sd+S1gt5mk7Bm1mRsQkKojoEkA1ZxxgyrPSn56JrrX2yLR0y5Kew==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11463</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.354/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>108</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.354</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.0.355</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-10T15:39:58</Created>
      <Dependencies>Shaolinq:0.9.0.355:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.355</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-10T15:39:58</Published>
      <PackageHash>Swj3OLR2sRyuWBJtBAYT/zUjkB3siEhHdD5aDddC47ru9CGgr8aHF1ijgbdR1P9zjhmDUVj9GH/EmB43NvZILQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11468</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.0.355/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>100</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.0.355</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.357</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-11T16:30:03.357</Created>
      <Dependencies>Shaolinq:0.9.1.357:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.357</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-11T16:30:03.357</Published>
      <PackageHash>7jZ7MxxDaygDlx/co03X9A6oiY72d7FyctcnUqe9MVWrbVTbOkeJ25Wie1sXk3CeTGAooyatNPQIW8cv87eiVA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11467</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.357/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>111</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.357</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.358</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-16T10:49:54.617</Created>
      <Dependencies>Shaolinq:0.9.1.358:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.358</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-16T10:49:54.617</Published>
      <PackageHash>VkvP8bXdVaHLi0o1i6neCjA+Nm0cC7WD3xBT1QSRyfVE4Ek7LE11IIaw03YZDMFXyEiM7pcEpHWOZChLoicHKA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11640</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.358/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>123</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.358</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.361</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-21T03:03:58.81</Created>
      <Dependencies>Shaolinq:0.9.1.361:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.361</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-21T03:03:58.81</Published>
      <PackageHash>wSVcJdKWzI5gCJAW1FxIjzbxxUmTkTisANcXM1XgeiY53NSajldZ2tPOEVpzpXyHJIVXV4Ehw1DjaBGaQPdmhA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11697</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.361/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.361</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.365</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-21T09:08:33.123</Created>
      <Dependencies>Shaolinq:0.9.1.365:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.365</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-21T09:08:33.123</Published>
      <PackageHash>nN5Y8CuHaOTJqR0ga6YsgRLzn5m3nUkAfX0vglbqUDPDPbYZv0kKxNOwQ46iPInL3NvCxtDxL5VCzQI3OZnUCQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11694</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.365/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>106</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.365</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.367</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-23T00:31:22.137</Created>
      <Dependencies>Shaolinq:0.9.1.367:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.367</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-23T00:31:22.137</Published>
      <PackageHash>w5oMX7fxgg6CSEZEVzURon6imoZG07BBib91dVjvYdHk9IzjxYycJpYpi46i7kzaBl/2xlPa2E3b8wriq1yckg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11703</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.367/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>118</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.367</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.370</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-25T02:03:14.897</Created>
      <Dependencies>Shaolinq:0.9.1.370:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.370</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-25T02:03:14.897</Published>
      <PackageHash>cZcMteD+m3l06vrnLIFR4RRCQ5DliNH0LrYdssdko/LqvnsuzqPPY6STDo2FDuzMLdZA2tJ0sL/hcdWSQKDZtg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11727</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.370/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>106</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.370</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.373</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-25T21:46:07.103</Created>
      <Dependencies>Shaolinq:0.9.1.373:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.373</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-04-22T11:39:57.127</LastUpdated>
      <Published>2015-02-25T21:46:07.103</Published>
      <PackageHash>3r21z5lI0nDXAYNyhcUyGQcfCWD1wc2POq2+/dF16aT03jFLVeXnn1csQielh3GNdhGApuIKDqv50CotFc0bsw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11733</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.373/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.373</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.375</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-02-27T11:06:09.557</Created>
      <Dependencies>Shaolinq:0.9.1.375:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.375</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-12T18:24:12.703</LastUpdated>
      <Published>2015-02-27T11:06:09.557</Published>
      <PackageHash>qJxDz069Fv68BHU4MRwx3YeGlPi3/yzjt2df7e27HJdErrAo2MO3K8HhcqvQvukyg9+y/dwYDL/rxIWqPrKAWg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11762</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.375/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support OrderBy in sub-queries on SQL server
Previous Versions
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>234</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames>AGPL-3.0,COMMERCIAL</LicenseNames>
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.375</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.378</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-12T18:24:12.687</Created>
      <Dependencies>Shaolinq:0.9.1.378:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.378</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-07T11:17:38.093</LastUpdated>
      <Published>2015-06-12T18:24:12.687</Published>
      <PackageHash>E03r4bFOr6K5BcnoF6xqD+sFZT2QbPw4viXCcEzJmujWqZzVjFaM5TVsFR8ZycTPluw7rvYfq1/DsxrJA8h9zw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11793</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.378/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>101</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.378</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.380</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-12T20:22:11.887</Created>
      <Dependencies>Shaolinq:0.9.1.380:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.380</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-12T22:29:30.227</LastUpdated>
      <Published>2015-06-12T20:22:11.887</Published>
      <PackageHash>A0QkxQUUBBuT8395BzEDT307J58Rk5r3Lbp+87pLIu1k3tod03TeWeXdujzw8pW8OMTKeaV6RCbiuxlQAFIpJg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11838</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.380/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.380</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.381</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-12T22:29:30.227</Created>
      <Dependencies>Shaolinq:0.9.1.381:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.381</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-07T11:17:38.093</LastUpdated>
      <Published>2015-06-12T22:29:30.227</Published>
      <PackageHash>9AxoMB3/U45B5pX2GW2ZIks6knF6CiTSYvdCbI7rDBmr/iJckNkUMxzJBaW+qzNPOXT/WgRqRihzBH7SHlqahA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11839</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.381/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>104</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.381</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.382</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-12T23:00:54.293</Created>
      <Dependencies>Shaolinq:0.9.1.382:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.382</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-12T23:41:13.34</LastUpdated>
      <Published>2015-06-12T23:00:54.293</Published>
      <PackageHash>E+nrml8uQ3PmXk/9ITjHJvnROoxb6ABILj0oTgVygiBYh0evyrqhDgObzOMzJeqvBPfaIrIn3dXGcgjKX+LSEw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11879</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.382/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.382</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.385</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-12T23:41:13.34</Created>
      <Dependencies>Shaolinq:0.9.1.385:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.385</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-13T00:06:17.173</LastUpdated>
      <Published>2015-06-12T23:41:13.34</Published>
      <PackageHash>FAuLQbVeyflKxk5w3lKNzrtbxJOvo+erJJnURIEB+WpLqD8z8DD2a+0x6fWnBsx1L7r1U0TmxXbDEimGFu2axg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11879</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.385/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.385</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.386</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-13T00:06:17.173</Created>
      <Dependencies>Shaolinq:0.9.1.386:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.386</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-13T00:30:33.45</LastUpdated>
      <Published>2015-06-13T00:06:17.173</Published>
      <PackageHash>q+cKiq/PNGe7cGQWePPhr+V/Y6aF+/Xb1armVFGLCLDJ0d74v74blXaMQ2R5H739nIEAly9ziLMJRhALXri7Jw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11879</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.386/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>102</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.386</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.388</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-13T00:30:33.45</Created>
      <Dependencies>Shaolinq:0.9.1.388:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.388</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-06-13T00:51:40.987</LastUpdated>
      <Published>2015-06-13T00:30:33.45</Published>
      <PackageHash>y+fy7JiAX1wzaG/FjTkq9GqWCGjLZJMwnFHH6MEdQW7ZJbC9+lTqMJ8wn+FnOUwwhJhLNF/YiNl2Rhnapr4AQA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11895</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.388/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>104</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.388</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.390</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-06-13T00:51:40.987</Created>
      <Dependencies>Shaolinq:0.9.1.390:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.390</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-04T13:34:06.623</LastUpdated>
      <Published>2015-06-13T00:51:40.987</Published>
      <PackageHash>Brjc8PAFcCPuMxFtAvRbvMCSE8EglRjTPgPOuKbBZYhsq+9WRReWWKL8W0RPlhxvQNC16fP6fajHcL8/S123nA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11893</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.390/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
Previous Versions
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>117</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.390</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.393</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-07-04T13:34:06.623</Created>
      <Dependencies>Shaolinq:0.9.1.393:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.393</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-04T13:53:48.387</LastUpdated>
      <Published>2015-07-04T13:34:06.623</Published>
      <PackageHash>GlQEGrcuscGSKYzdtol/kkHsojk+lrgpTUXF2yqQHMO/nBeNheHA2A1JSgsqGoQCBuZHamqqtk5ccpkX4F5xUw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11932</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.393/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
Previous Versions:
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.393</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.394</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-07-04T13:53:48.387</Created>
      <Dependencies>Shaolinq:0.9.1.394:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.394</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-05T19:41:55.463</LastUpdated>
      <Published>2015-07-04T13:53:48.387</Published>
      <PackageHash>5+XGM90qJBggT/0NlTZdnYWJlsQPoLta0ycaooiYWEg1LGiPkL62mVgEBUoG01CTbW1dWH8ymWb/VITu2cx2Fg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11937</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.394/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
Previous Versions:
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>107</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.394</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.395</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-07-05T19:41:55.463</Created>
      <Dependencies>Shaolinq:0.9.1.395:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.395</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-07-21T12:42:05.177</LastUpdated>
      <Published>2015-07-05T19:41:55.463</Published>
      <PackageHash>EGi5tQtVfNvg5No6sRy7qhHuBui9Je76WXd9J8MXNNwBEIaPCyDhZ/8CLe+YOZYn8rInxxxyfSMdgZv3evj7xg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11958</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.395/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Allow DAO types to be defined in other assemblies
Previous Versions:
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>132</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.395</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.401</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-07-21T12:42:05.13</Created>
      <Dependencies>Shaolinq:0.9.1.401:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.401</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-13T16:31:08.577</LastUpdated>
      <Published>2015-07-21T12:42:05.13</Published>
      <PackageHash>/bRot4iDbkJqPbYpOGdG5Z7zCbScVHvo8oVWx0DT2+KR/hpyIOsClPAdiYZPFuhcriVJHdn8NSkCZ51wF1pycQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11997</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.401/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
Previous Versions:
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>145</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.401</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.404</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-08-13T16:31:08.577</Created>
      <Dependencies>Shaolinq:0.9.1.404:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.404</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-13T18:05:07.783</LastUpdated>
      <Published>2015-08-13T16:31:08.577</Published>
      <PackageHash>sbgbQGDCaIrLpDYZxvkNqxbuxglW4mkiun4ZaI0VsaiiMFCg+LZqrDFlGl8Ev0OCsdGAmbGSl232gee59B3YFQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>12070</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.404/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
Previous Versions:
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>95</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.404</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.405</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-08-13T18:05:07.783</Created>
      <Dependencies>Shaolinq:0.9.1.405:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.405</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-13T18:36:28.283</LastUpdated>
      <Published>2015-08-13T18:05:07.783</Published>
      <PackageHash>zuqu0h4QPQvH5FNXWNUhGDfvnyUypFoyVI3zYVrClw9oF/+VBERUQUYugElD2wa0q5F4ulmLnAehXIyrKOMrww==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>12092</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.405/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Allow direct configuration with connection strings
Previous Versions:
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>113</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.405</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.406</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-08-13T18:36:28.283</Created>
      <Dependencies>Shaolinq:0.9.1.406:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.406</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-08-18T00:22:06.553</LastUpdated>
      <Published>2015-08-13T18:36:28.283</Published>
      <PackageHash>fbt3rDRQekXANi46FzD2+7mx9H1SF6nHibmzaQXrxpOc8zcnngpIFeIyyiYj+bA5K5W2GTUAFqwViDx+jl4lJA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>12093</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.406/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Allow direct configuration with connection strings
Previous Versions:
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.406</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.407</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-08-18T00:22:06.553</Created>
      <Dependencies>Shaolinq:0.9.1.407:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.407</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-03T12:47:11.853</LastUpdated>
      <Published>2015-08-18T00:22:06.553</Published>
      <PackageHash>UxMJr0Ku1V8S22fphRGymL8u3q40TG1SldIszgu/piXNnSHPucrmxpVD9vL4pp7G64i/cWKjtbm0eo4nR3wDkA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>12145</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.407/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support unordered object commits (without the need for explicit flushes) when using databases that don't support for deferrability
Previous Versions:
- Allow direct configuration with connection strings
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>116</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.407</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.408</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-09-03T12:47:11.853</Created>
      <Dependencies>Shaolinq:0.9.1.408:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.408</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-28T17:55:57.133</LastUpdated>
      <Published>2015-09-03T12:47:11.853</Published>
      <PackageHash>IQHgieimnaBipJnvWUFa31e6tivHyf9iyo1BQYxLSIoolufFWw+X+pipeaJ9Q5deTd1osL2jjlzrSocgP8gZCA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>13104</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.408/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Support AutoIncrement on non-primary key properties
Previous Versions:
- Support unordered object commits (without the need for explicit flushes) when using databases that don't support for deferrability
- Allow direct configuration with connection strings
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>135</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.408</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.411</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-09-28T17:55:57.133</Created>
      <Dependencies>Shaolinq:0.9.1.411:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.411</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-29T10:35:16.337</LastUpdated>
      <Published>2015-09-28T17:55:57.133</Published>
      <PackageHash>+jnn+SsouA/vUU9mfO6VO8gziQyAqP1UlJlrOQWgNtUk/qnb67NRit+T5sWlZP+BcdPW2jlg8VRS3ed6kH2/2A==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>13139</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.411/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Add support for using Equals, ReferenceEquals and CompareTo rather than == operator.
Previous Versions:
- Support AutoIncrement on non-primary key properties
- Support unordered object commits (without the need for explicit flushes) when using databases that don't support for deferrability
- Allow direct configuration with connection strings
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.411</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.415</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-09-29T10:35:16.337</Created>
      <Dependencies>Shaolinq:0.9.1.415:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.415</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-09-29T12:57:33.657</LastUpdated>
      <Published>2015-09-29T10:35:16.337</Published>
      <PackageHash>LI2hOUJTtmq6EeV3HhIPVnbPbifFRZLY2ijNxBMjj8uZeDdxyKdPioSaX5moE06+tjPgaf6T2GlAAOKVCvqzzQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>13137</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.415/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Add support for using Equals, ReferenceEquals and CompareTo rather than == operator.
Previous Versions:
- Support AutoIncrement on non-primary key properties
- Support unordered object commits (without the need for explicit flushes) when using databases that don't support for deferrability
- Allow direct configuration with connection strings
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>99</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.415</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.418</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-09-29T12:57:33.657</Created>
      <Dependencies>Shaolinq:0.9.1.418:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.418</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-06T14:10:03.28</LastUpdated>
      <Published>2015-09-29T12:57:33.657</Published>
      <PackageHash>QFQn2HNH2if3Vn9W/dhvrvz1fli7WcrF4loN5O+e0EovnXr3k+BGz0eX/WeMi7AZRmq/0+1blGO+uEKl+U9ipg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>13161</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.418/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed bug when using pure interface DataModels and DataAccessObjects
Previous Versions:
- Add support for using Equals, ReferenceEquals and CompareTo rather than == operator.
- Support AutoIncrement on non-primary key properties
- Support unordered object commits (without the need for explicit flushes) when using databases that don't support for deferrability
- Allow direct configuration with connection strings
- Fixed sometimes queries failing if referencing a primary key on a DAO property
- Fixed Any function sometimes not working
- Allow DAO types to be defined in other assemblies
- SQL server provider now always disables enlistment
- Switch to using ConfigurationManager for configs
- Added TransactionScopeFactory
- Removed dependency on EF
- Support for ConnectionString rather than pure object or XML configuration
- Added Azure friendly DeleteDatabaseDropsTablesOnly option for SqlServer
- Added Azure friendly DisabledForeignKeyContext
- Support OrderBy in sub-queries on SQL server
- Support for projecting IGrouping when aggregates are both used and not used.
- Added support for Queryable.Any
- Simplified ObjectState logic
- Fixed bug to do with OrderBy and GroupBy in the same query
- Fixed GroupBy aggregate bug
- Better support for booleans and decimals in SQL Server
- Fixed setting null on deflated object properties doesn't the commit update to the DB.
- Fixed some sometimes unnecessary UPDATE statements executed following INSERT.
- Fixed left/right joins using DefaultIfEmpty ignored/swallowed in Mono.
- Fixed implicit joins in selects sometimes not working when working with explicit Linq joins.
- Native TimeSpan (interval) support for Postgres providers.
- Fixed negate (-ve) operation not support in Sql92QueryFormatter
- Fixed nullable enums on Postgres
- Added DateTime.Add method support.
- Fixed comparing DAOs and DAO properties to null sometimes not working.
- Improved Include() support. Can now include off DAOs that are on projected anonymous types.
- Added base non-generic DataAccessObject class.
- Added ObjectAlreadyExistsException for more specific UniqueConstraintException cases.
- OrderBy and GroupBy now support properties that are are defined on related objects (joins are made automatically/implicitly)
- Better unified cross-provider exceptions for failed unique constraints and when setting related objects that are missing or undefined objects
- Fixed implicit join in Where lost when a Select follow.
- Sqlite provider now converts composite primary keys with more than one auto-increment to a single primary key with a unique constraint across all the composites.
- DataAccessObjects now has GetReference
- DataAccessObjects GetByPrimaryKey and GetManyByPrimaryKey now support composite and complex primary keys
- Support for Include() inside select and on IQueryable.
- Support for Include() when selecting related objects on objects.
- Improved composite GetByPrimaryKey support in DataAccessObjects collections.
- Support recursive Include()
- Support implicit (recursive) joins when predicating or selecting on related objects
- Composite primary keys made up of objects are now supported.
- Improved performance
- Fixed non-aggregate  count. Now uses EXISTS where possible</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.418</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.424</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-06T14:10:03.28</Created>
      <Dependencies>Shaolinq:0.9.1.424:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.424</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-08T14:11:10.98</LastUpdated>
      <Published>2015-10-06T14:10:03.28</Published>
      <PackageHash>ZlrKEkSshodzShr5v+Ve/CCyUyCQIdFc85CINvAk/8+LyaHBaI3t4XtX+1ujJwLNwvYD5ZdDIw5pPl1aka1iCw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11881</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.424/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed bugs with nullable enums with VS2015 compiler</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>103</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.424</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>0.9.1.426</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2013 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-08T14:11:10.98</Created>
      <Dependencies>Shaolinq:0.9.1.426:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.426</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>false</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-19T12:44:24.463</LastUpdated>
      <Published>2015-10-08T14:11:10.98</Published>
      <PackageHash>1rzRR/0RgFvFwV1uvlTQwNuMeyKszwhu4D5/DBH6/tzmAe+DO0FpwbklkkWuuTJX3iFtXttWxOb9dBRF4LlCyg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11608</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/0.9.1.426/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed bugs with nullable enums with VS2015 compiler</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>239</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/0.9.1.426</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.433-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-26T13:31:15.717</Created>
      <Dependencies>Shaolinq:1.0.0.433-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.433-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-26T13:46:05.94</LastUpdated>
      <Published>2015-10-26T13:31:15.717</Published>
      <PackageHash>1hwn7+L6aNsjiCiJ7+uAI1GvfVjlKrPJetVeEEPxZ7JRQUxKvHSOH2CnK1FVb58DYdQCADyOX10EfhGpIcE24Q==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11581</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.433-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>84</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.433-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.434-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-26T13:46:05.94</Created>
      <Dependencies>Shaolinq:1.0.0.434-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.434-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-26T14:20:59.677</LastUpdated>
      <Published>2015-10-26T13:46:05.94</Published>
      <PackageHash>MBhKSWtPN5cXBIn2iL65GTpPZk0NMXJd7Esz9l5yb3qsKoMsbxl8tYTOrsQTaa+U57cvA25EaAk6Pkon54ARGQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11582</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.434-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>86</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.434-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.436-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-26T14:20:59.677</Created>
      <Dependencies>Shaolinq:1.0.0.436-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.436-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-26T16:53:49.723</LastUpdated>
      <Published>2015-10-26T14:20:59.677</Published>
      <PackageHash>G3Fd/yBdefsC2u2QiA18ujoNmROP4NwOPK3Wh44fNitWAWBlObgxMef0rxxmeSkGXmz4p9zeZir/6kQWUU8uyA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11580</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.436-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.436-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.441-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-26T16:53:49.723</Created>
      <Dependencies>Shaolinq:1.0.0.441-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.441-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-27T15:06:20.217</LastUpdated>
      <Published>2015-10-26T16:53:49.723</Published>
      <PackageHash>JVzvki2v04XvYhYP846vay03ZgUSdOmScdO3Rp7fmGtXMNl4vNTeodlb+VqX23o4sJKpuotejqGLLRJRduGatg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11591</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.441-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>87</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.441-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.443-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-27T15:06:20.217</Created>
      <Dependencies>Shaolinq:1.0.0.443-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.443-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-27T16:19:31.683</LastUpdated>
      <Published>2015-10-27T15:06:20.217</Published>
      <PackageHash>MjqRhIev67vJr4sU4GoBQomPUneX/cIAy5XKyuzmbKuyVgS7DEdQvPyovW+y2I/4vCq9WwJ/GJfqujUGwAxhQA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11591</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.443-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>86</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.443-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.446-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-27T16:19:31.683</Created>
      <Dependencies>Shaolinq:1.0.0.446-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.446-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-27T16:41:21.18</LastUpdated>
      <Published>2015-10-27T16:19:31.683</Published>
      <PackageHash>AFw+FyaCto+u9qp3VCJ14jY/j/fdFvWq0RzWjflOT8kjr+bGVzel9tcmDbQppfp75MeSTlgQRWFrQN4qNKUiNg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11592</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.446-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>89</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.446-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.447-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-27T16:41:21.18</Created>
      <Dependencies>Shaolinq:1.0.0.447-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.447-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-10-27T17:09:16.783</LastUpdated>
      <Published>2015-10-27T16:41:21.18</Published>
      <PackageHash>bXtziwWom+KVOI8SqYLM2vGohlZEjiIlPnPetxa5y0cr/Av5wXc6MwSe3I4R5/YpVVt07HU0+h7/mKLdKnmzbQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11589</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.447-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>89</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.447-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.448-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-10-27T17:09:16.783</Created>
      <Dependencies>Shaolinq:1.0.0.448-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.448-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-03T12:58:03.587</LastUpdated>
      <Published>2015-10-27T17:09:16.783</Published>
      <PackageHash>YAvYs9UeCZYcM5jajmANH1vV3P85NIJY2vCafSvmXu6psLpFBpHmNx9AVL5eaOPyNfmCuFhnYCTHAVRZAs8XTQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11593</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.448-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fixed blob (byte[]) support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes.</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>88</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.448-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.458-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-11-03T12:58:03.587</Created>
      <Dependencies>Shaolinq:1.0.0.458-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.458-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-16T14:01:56.173</LastUpdated>
      <Published>2015-11-03T12:58:03.587</Published>
      <PackageHash>4/EU0wyS6FOjPNF7KecYjEzHlb0hSrm4ht3W6x/l5O6URfDGfnO2oY0liERTbJrlObLQgYLRjf3EoHcQSlytAw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11746</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.458-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better join support
- Fixed blob (byte[]) support
- Removed dependency on log4net
- Better join/groupjoin support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes
- Made ConnectionTimeout and CommandTimeout optional (uses defaults)
- Added BackendTimeouts option for Postgres provider
- Improved performance dramatically by replacing LambdaExpression.Compile with new interpreter and caching compiler</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>85</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.458-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.464-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-11-16T14:01:56.173</Created>
      <Dependencies>Shaolinq:1.0.0.464-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.464-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-19T12:44:24.463</LastUpdated>
      <Published>2015-11-16T14:01:56.173</Published>
      <PackageHash>c3G8I7A1FZjCgAh04Iii144Xg3i8qi5ajzTPN+jcZcCu+UCO39qexdDcDV0H5I1kJy6hianRJ5Q0hnXEw9rmPQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11769</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.464-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix ExpressionInterpreter handling of ConvertExpression
- Better join support
- Fixed blob (byte[]) support
- Removed dependency on log4net
- Better join/groupjoin support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes
- Made ConnectionTimeout and CommandTimeout optional (uses defaults)
- Added BackendTimeouts option for Postgres provider
- Improved performance dramatically by replacing LambdaExpression.Compile with new interpreter and caching compiler</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.464-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.465-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-11-19T12:44:24.463</Created>
      <Dependencies>Shaolinq:1.0.0.465-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.465-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-11-19T12:44:24.463</LastUpdated>
      <Published>2015-11-19T12:44:24.463</Published>
      <PackageHash>CYc71K/heG3PN0VahErcRxEfR9hhu9BXZuJDkvU0Wj9lYiJmAYK2Xlvv/pPwDO77XBKMhf5XBqMJh7x2cN32AA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11810</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.465-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Changed SQL Server string support to use NVARCHAR. Added 'max' CHAR and VARCHAR support
- Fix ExpressionInterpreter handling of ConvertExpression
- Better join support
- Fixed blob (byte[]) support
- Removed dependency on log4net
- Better join/groupjoin support
- Removed need for Shaolinq.Postgres.Shared assembly
- Various other fixes
- Made ConnectionTimeout and CommandTimeout optional (uses defaults)
- Added BackendTimeouts option for Postgres provider
- Improved performance dramatically by replacing LambdaExpression.Compile with new interpreter and caching compiler</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>84</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.465-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.469-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-01T15:35:40.24</Created>
      <Dependencies>Shaolinq:1.0.0.469-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.469-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-01T15:35:40.24</LastUpdated>
      <Published>2015-12-01T15:35:40.24</Published>
      <PackageHash>bptE5rY+CqKAeW+am1HKrXotkmjdcn4otvRGI3KWfYDUDCAS50dKvOzZ7768oMIYZQMUpXInhppW7zJotDD0Sg==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11556</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.469-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better in-scope object caching performance</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>83</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.469-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.472-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-03T01:10:34.637</Created>
      <Dependencies>Shaolinq:1.0.0.472-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.472-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-03T01:10:34.637</LastUpdated>
      <Published>2015-12-03T01:10:34.637</Published>
      <PackageHash>/nqvCzEyqjZxo+0u0xJueYSIB0eHpJizUOtc1b2lkhOCS4Vl2ko19cEWfs+/tEU9qt9ORebXzju4Op+l237q/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11583</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.472-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>84</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.472-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.473-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-06T14:23:45.787</Created>
      <Dependencies>Shaolinq:1.0.0.473-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.473-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-06T14:23:45.787</LastUpdated>
      <Published>2015-12-06T14:23:45.787</Published>
      <PackageHash>tXqfbdzPPUJcC86d0hhXKnsuTsMgH5XGZYmwzBjd9uXGMBi1Fhc0mGAoCEGpDLiQpzNv1r3r8qvZcGDyq2vY+w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11577</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.473-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>85</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.473-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.479-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-07T18:47:03.973</Created>
      <Dependencies>Shaolinq:1.0.0.479-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.479-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-07T18:47:03.973</LastUpdated>
      <Published>2015-12-07T18:47:03.973</Published>
      <PackageHash>o4iAMF8rfozTj/A6MaVXn8nFW2fuVu371iZsWkfvCN4L/GoJ/tMVETdyDnhnOTgiZ5Muy3SeD+4U8E2K4m+k/g==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11572</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.479-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>82</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.479-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.481-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-08T13:07:17.087</Created>
      <Dependencies>Shaolinq:1.0.0.481-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.481-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-08T13:07:17.087</LastUpdated>
      <Published>2015-12-08T13:07:17.087</Published>
      <PackageHash>stWpHCsJQjH1vIQxwqBmmcgdMS+nQej+D0NAkc5NyaB5GFtZn408YBy7OZilHeW4OviWlPR0wvleRdqgTJhP5w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11578</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.481-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>81</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.481-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.485-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-09T14:32:10.657</Created>
      <Dependencies>Shaolinq:1.0.0.485-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.485-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-09T14:32:10.657</LastUpdated>
      <Published>2015-12-09T14:32:10.657</Published>
      <PackageHash>bmI+V3bW8RiBUOdiUsk6eqgF49ysCpm2QyBwu8dtliDgXTQhY3A/gfsa5WrBZ7CZJK1paIma/HDzMNOwFxbi9w==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11606</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.485-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix objects with DAO primary keys using references and anonymous types
- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>82</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.485-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.487-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-11T11:16:35.313</Created>
      <Dependencies>Shaolinq:1.0.0.487-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.487-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-11T11:16:35.313</LastUpdated>
      <Published>2015-12-11T11:16:35.313</Published>
      <PackageHash>J32dMj8X6NTQ5x+naHMeSvrH70/Bb4DoNdIE1pJ8aza/mhcheWqVAYGbcHHJ86OgsWapkanlFXAAQUFccwhNuA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11607</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.487-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix objects with DAO primary keys using references and anonymous types
- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>81</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.487-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.488-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-11T12:14:49.943</Created>
      <Dependencies>Shaolinq:1.0.0.488-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.488-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-11T12:14:49.943</LastUpdated>
      <Published>2015-12-11T12:14:49.943</Published>
      <PackageHash>Ucj0lq5L2Qh0ambs0D1+PG5DysyJ+LOu37IrCNrnfDJDYec62mG38tColQlTkpAWy+LDS/UcF9k68fCYfHKdQw==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11608</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.488-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Fix objects with DAO primary keys using references and anonymous types
- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>110</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.488-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.491-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-11T16:38:48.99</Created>
      <Dependencies>Shaolinq:1.0.0.491-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.491-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-11T16:38:48.99</LastUpdated>
      <Published>2015-12-11T16:38:48.99</Published>
      <PackageHash>faz8L64uVaXLAmfv7FYmMQa4ztVqXJFZ9vvRGu93eHvmOj53uswuk2OP5Fye9TkTOCJS95JmNz2cdfZTQifMUA==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11666</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.491-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added NamingTransforms to DataAccessModelConfiguration
-- Previous --
- Fix objects with DAO primary keys using references and anonymous types
- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>105</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.491-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
    <FeedPackage>
      <Id>Shaolinq.MySql</Id>
      <Version>1.0.0.492-rc</Version>
      <Authors>Thong Nguyen</Authors>
      <Copyright>Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)</Copyright>
      <Created>2015-12-11T17:18:36.4</Created>
      <Dependencies>Shaolinq:1.0.0.492-rc:|MySql.Data::</Dependencies>
      <Description>Shaolinq is a thoughtfully designed ORM and Linq provider for .NET
    
Use this package to add Shaolinq and out-of-the-box MySql support.
    
Designed to perform super fast and be easy to use, Shaolinq's features also include:
    
- First class schema-first ORM with WYSIWYG data access and minipulation.
- First class LINQ support (not the basic kind you see in most other OSS projects).
- Single trip updating of objects.
- Support for Sqlite, MySql and Postgres.
- Automatic database creation and schema migration.
- Delete LINQ extension for batch server side deletes.
- Full support for server side date functions (Date.DayOfWeek etc).
- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.
- Open Source!</Description>
      <DownloadCount>32322</DownloadCount>
      <GalleryDetailsUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.492-rc</GalleryDetailsUrl>
      <IconUrl />
      <IsLatestVersion>false</IsLatestVersion>
      <IsAbsoluteLatestVersion>false</IsAbsoluteLatestVersion>
      <IsPreRelease>true</IsPreRelease>
      <Language />
      <LastUpdated>2015-12-11T17:18:36.4</LastUpdated>
      <Published>2015-12-11T17:18:36.4</Published>
      <PackageHash>m6xpIH0mQ3jYVchF2OQ1chBSoKui9YAjhBsGjxBinEJL1QcjlvBJKqhCMzDSzLH5U9yfDLBT8173UWys0wS5eQ==</PackageHash>
      <PackageHashAlgorithm>SHA512</PackageHashAlgorithm>
      <PackageSize>11665</PackageSize>
      <ReportAbuseUrl>https://www.nuget.org/packages/Shaolinq.MySql/1.0.0.492-rc/ReportAbuse</ReportAbuseUrl>
      <ReleaseNotes>- Added NamingTransforms to DataAccessModelConfiguration
-- Previous --
- Fix objects with DAO primary keys using references and anonymous types
- Better in-scope object caching performance 
- DAO primary keys mostly working with tests</ReleaseNotes>
      <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
      <Summary>A thoughtful ORM and Linq provider for .NET and MySql</Summary>
      <Tags>shaolinq linq provider orm sqlite mysql sql database</Tags>
      <Title>Shaolinq.MySql</Title>
      <VersionDownloadCount>79</VersionDownloadCount>
      <MinClientVersion />
      <LicenseUrl>https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt</LicenseUrl>
      <LicenseNames />
      <LicenseReportUrl />
      <DownloadUrl>https://www.nuget.org/api/v2/package/Shaolinq.MySql/1.0.0.492-rc</DownloadUrl>
      <ProjectUrl>https://github.com/tumtumtum/Shaolinq</ProjectUrl>
      <LastEdited>1901-01-01T00:00:00</LastEdited>
    </FeedPackage>
  </NugetPackages>
</NugetDump>